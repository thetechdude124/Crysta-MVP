{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BinMsg = exports.Msg = exports.Response = exports.KillCursor = exports.GetMore = exports.Query = void 0;\n\nconst read_preference_1 = require(\"../read_preference\");\n\nconst BSON = require(\"../bson\");\n\nconst utils_1 = require(\"../utils\");\n\nconst constants_1 = require(\"./wire_protocol/constants\");\n\nconst error_1 = require(\"../error\"); // Incrementing request id\n\n\nlet _requestId = 0; // Query flags\n\nconst OPTS_TAILABLE_CURSOR = 2;\nconst OPTS_SLAVE = 4;\nconst OPTS_OPLOG_REPLAY = 8;\nconst OPTS_NO_CURSOR_TIMEOUT = 16;\nconst OPTS_AWAIT_DATA = 32;\nconst OPTS_EXHAUST = 64;\nconst OPTS_PARTIAL = 128; // Response flags\n\nconst CURSOR_NOT_FOUND = 1;\nconst QUERY_FAILURE = 2;\nconst SHARD_CONFIG_STALE = 4;\nconst AWAIT_CAPABLE = 8;\n/**************************************************************\n * QUERY\n **************************************************************/\n\n/** @internal */\n\nclass Query {\n  constructor(ns, query, options) {\n    // Basic options needed to be passed in\n    // TODO(NODE-3483): Replace with MongoCommandError\n    if (ns == null) throw new error_1.MongoRuntimeError('Namespace must be specified for query'); // TODO(NODE-3483): Replace with MongoCommandError\n\n    if (query == null) throw new error_1.MongoRuntimeError('A query document must be specified for query'); // Validate that we are not passing 0x00 in the collection name\n\n    if (ns.indexOf('\\x00') !== -1) {\n      // TODO(NODE-3483): Use MongoNamespace static method\n      throw new error_1.MongoRuntimeError('Namespace cannot contain a null character');\n    } // Basic options\n\n\n    this.ns = ns;\n    this.query = query; // Additional options\n\n    this.numberToSkip = options.numberToSkip || 0;\n    this.numberToReturn = options.numberToReturn || 0;\n    this.returnFieldSelector = options.returnFieldSelector || undefined;\n    this.requestId = Query.getRequestId(); // special case for pre-3.2 find commands, delete ASAP\n\n    this.pre32Limit = options.pre32Limit; // Serialization option\n\n    this.serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    this.ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n    this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n    this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    this.batchSize = this.numberToReturn; // Flags\n\n    this.tailable = false;\n    this.slaveOk = typeof options.slaveOk === 'boolean' ? options.slaveOk : false;\n    this.oplogReplay = false;\n    this.noCursorTimeout = false;\n    this.awaitData = false;\n    this.exhaust = false;\n    this.partial = false;\n  }\n  /** Assign next request Id. */\n\n\n  incRequestId() {\n    this.requestId = _requestId++;\n  }\n  /** Peek next request Id. */\n\n\n  nextRequestId() {\n    return _requestId + 1;\n  }\n  /** Increment then return next request Id. */\n\n\n  static getRequestId() {\n    return ++_requestId;\n  } // Uses a single allocated buffer for the process, avoiding multiple memory allocations\n\n\n  toBin() {\n    const buffers = [];\n    let projection = null; // Set up the flags\n\n    let flags = 0;\n\n    if (this.tailable) {\n      flags |= OPTS_TAILABLE_CURSOR;\n    }\n\n    if (this.slaveOk) {\n      flags |= OPTS_SLAVE;\n    }\n\n    if (this.oplogReplay) {\n      flags |= OPTS_OPLOG_REPLAY;\n    }\n\n    if (this.noCursorTimeout) {\n      flags |= OPTS_NO_CURSOR_TIMEOUT;\n    }\n\n    if (this.awaitData) {\n      flags |= OPTS_AWAIT_DATA;\n    }\n\n    if (this.exhaust) {\n      flags |= OPTS_EXHAUST;\n    }\n\n    if (this.partial) {\n      flags |= OPTS_PARTIAL;\n    } // If batchSize is different to this.numberToReturn\n\n\n    if (this.batchSize !== this.numberToReturn) this.numberToReturn = this.batchSize; // Allocate write protocol header buffer\n\n    const header = Buffer.alloc(4 * 4 + // Header\n    4 + // Flags\n    Buffer.byteLength(this.ns) + 1 + // namespace\n    4 + // numberToSkip\n    4 // numberToReturn\n    ); // Add header to buffers\n\n    buffers.push(header); // Serialize the query\n\n    const query = BSON.serialize(this.query, {\n      checkKeys: this.checkKeys,\n      serializeFunctions: this.serializeFunctions,\n      ignoreUndefined: this.ignoreUndefined\n    }); // Add query document\n\n    buffers.push(query);\n\n    if (this.returnFieldSelector && Object.keys(this.returnFieldSelector).length > 0) {\n      // Serialize the projection document\n      projection = BSON.serialize(this.returnFieldSelector, {\n        checkKeys: this.checkKeys,\n        serializeFunctions: this.serializeFunctions,\n        ignoreUndefined: this.ignoreUndefined\n      }); // Add projection document\n\n      buffers.push(projection);\n    } // Total message size\n\n\n    const totalLength = header.length + query.length + (projection ? projection.length : 0); // Set up the index\n\n    let index = 4; // Write total document length\n\n    header[3] = totalLength >> 24 & 0xff;\n    header[2] = totalLength >> 16 & 0xff;\n    header[1] = totalLength >> 8 & 0xff;\n    header[0] = totalLength & 0xff; // Write header information requestId\n\n    header[index + 3] = this.requestId >> 24 & 0xff;\n    header[index + 2] = this.requestId >> 16 & 0xff;\n    header[index + 1] = this.requestId >> 8 & 0xff;\n    header[index] = this.requestId & 0xff;\n    index = index + 4; // Write header information responseTo\n\n    header[index + 3] = 0 >> 24 & 0xff;\n    header[index + 2] = 0 >> 16 & 0xff;\n    header[index + 1] = 0 >> 8 & 0xff;\n    header[index] = 0 & 0xff;\n    index = index + 4; // Write header information OP_QUERY\n\n    header[index + 3] = constants_1.OP_QUERY >> 24 & 0xff;\n    header[index + 2] = constants_1.OP_QUERY >> 16 & 0xff;\n    header[index + 1] = constants_1.OP_QUERY >> 8 & 0xff;\n    header[index] = constants_1.OP_QUERY & 0xff;\n    index = index + 4; // Write header information flags\n\n    header[index + 3] = flags >> 24 & 0xff;\n    header[index + 2] = flags >> 16 & 0xff;\n    header[index + 1] = flags >> 8 & 0xff;\n    header[index] = flags & 0xff;\n    index = index + 4; // Write collection name\n\n    index = index + header.write(this.ns, index, 'utf8') + 1;\n    header[index - 1] = 0; // Write header information flags numberToSkip\n\n    header[index + 3] = this.numberToSkip >> 24 & 0xff;\n    header[index + 2] = this.numberToSkip >> 16 & 0xff;\n    header[index + 1] = this.numberToSkip >> 8 & 0xff;\n    header[index] = this.numberToSkip & 0xff;\n    index = index + 4; // Write header information flags numberToReturn\n\n    header[index + 3] = this.numberToReturn >> 24 & 0xff;\n    header[index + 2] = this.numberToReturn >> 16 & 0xff;\n    header[index + 1] = this.numberToReturn >> 8 & 0xff;\n    header[index] = this.numberToReturn & 0xff;\n    index = index + 4; // Return the buffers\n\n    return buffers;\n  }\n\n}\n\nexports.Query = Query;\n/**************************************************************\n * GETMORE\n **************************************************************/\n\n/** @internal */\n\nclass GetMore {\n  constructor(ns, cursorId, opts = {}) {\n    this.numberToReturn = opts.numberToReturn || 0;\n    this.requestId = _requestId++;\n    this.ns = ns;\n    this.cursorId = cursorId;\n  } // Uses a single allocated buffer for the process, avoiding multiple memory allocations\n\n\n  toBin() {\n    const length = 4 + Buffer.byteLength(this.ns) + 1 + 4 + 8 + 4 * 4; // Create command buffer\n\n    let index = 0; // Allocate buffer\n\n    const _buffer = Buffer.alloc(length); // Write header information\n    // index = write32bit(index, _buffer, length);\n\n\n    _buffer[index + 3] = length >> 24 & 0xff;\n    _buffer[index + 2] = length >> 16 & 0xff;\n    _buffer[index + 1] = length >> 8 & 0xff;\n    _buffer[index] = length & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, requestId);\n\n    _buffer[index + 3] = this.requestId >> 24 & 0xff;\n    _buffer[index + 2] = this.requestId >> 16 & 0xff;\n    _buffer[index + 1] = this.requestId >> 8 & 0xff;\n    _buffer[index] = this.requestId & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, 0);\n\n    _buffer[index + 3] = 0 >> 24 & 0xff;\n    _buffer[index + 2] = 0 >> 16 & 0xff;\n    _buffer[index + 1] = 0 >> 8 & 0xff;\n    _buffer[index] = 0 & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, OP_GETMORE);\n\n    _buffer[index + 3] = constants_1.OP_GETMORE >> 24 & 0xff;\n    _buffer[index + 2] = constants_1.OP_GETMORE >> 16 & 0xff;\n    _buffer[index + 1] = constants_1.OP_GETMORE >> 8 & 0xff;\n    _buffer[index] = constants_1.OP_GETMORE & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, 0);\n\n    _buffer[index + 3] = 0 >> 24 & 0xff;\n    _buffer[index + 2] = 0 >> 16 & 0xff;\n    _buffer[index + 1] = 0 >> 8 & 0xff;\n    _buffer[index] = 0 & 0xff;\n    index = index + 4; // Write collection name\n\n    index = index + _buffer.write(this.ns, index, 'utf8') + 1;\n    _buffer[index - 1] = 0; // Write batch size\n    // index = write32bit(index, _buffer, numberToReturn);\n\n    _buffer[index + 3] = this.numberToReturn >> 24 & 0xff;\n    _buffer[index + 2] = this.numberToReturn >> 16 & 0xff;\n    _buffer[index + 1] = this.numberToReturn >> 8 & 0xff;\n    _buffer[index] = this.numberToReturn & 0xff;\n    index = index + 4; // Write cursor id\n    // index = write32bit(index, _buffer, cursorId.getLowBits());\n\n    _buffer[index + 3] = this.cursorId.getLowBits() >> 24 & 0xff;\n    _buffer[index + 2] = this.cursorId.getLowBits() >> 16 & 0xff;\n    _buffer[index + 1] = this.cursorId.getLowBits() >> 8 & 0xff;\n    _buffer[index] = this.cursorId.getLowBits() & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, cursorId.getHighBits());\n\n    _buffer[index + 3] = this.cursorId.getHighBits() >> 24 & 0xff;\n    _buffer[index + 2] = this.cursorId.getHighBits() >> 16 & 0xff;\n    _buffer[index + 1] = this.cursorId.getHighBits() >> 8 & 0xff;\n    _buffer[index] = this.cursorId.getHighBits() & 0xff;\n    index = index + 4; // Return buffer\n\n    return [_buffer];\n  }\n\n}\n\nexports.GetMore = GetMore;\n/**************************************************************\n * KILLCURSOR\n **************************************************************/\n\n/** @internal */\n\nclass KillCursor {\n  constructor(ns, cursorIds) {\n    this.ns = ns;\n    this.requestId = _requestId++;\n    this.cursorIds = cursorIds;\n  } // Uses a single allocated buffer for the process, avoiding multiple memory allocations\n\n\n  toBin() {\n    const length = 4 + 4 + 4 * 4 + this.cursorIds.length * 8; // Create command buffer\n\n    let index = 0;\n\n    const _buffer = Buffer.alloc(length); // Write header information\n    // index = write32bit(index, _buffer, length);\n\n\n    _buffer[index + 3] = length >> 24 & 0xff;\n    _buffer[index + 2] = length >> 16 & 0xff;\n    _buffer[index + 1] = length >> 8 & 0xff;\n    _buffer[index] = length & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, requestId);\n\n    _buffer[index + 3] = this.requestId >> 24 & 0xff;\n    _buffer[index + 2] = this.requestId >> 16 & 0xff;\n    _buffer[index + 1] = this.requestId >> 8 & 0xff;\n    _buffer[index] = this.requestId & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, 0);\n\n    _buffer[index + 3] = 0 >> 24 & 0xff;\n    _buffer[index + 2] = 0 >> 16 & 0xff;\n    _buffer[index + 1] = 0 >> 8 & 0xff;\n    _buffer[index] = 0 & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, OP_KILL_CURSORS);\n\n    _buffer[index + 3] = constants_1.OP_KILL_CURSORS >> 24 & 0xff;\n    _buffer[index + 2] = constants_1.OP_KILL_CURSORS >> 16 & 0xff;\n    _buffer[index + 1] = constants_1.OP_KILL_CURSORS >> 8 & 0xff;\n    _buffer[index] = constants_1.OP_KILL_CURSORS & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, 0);\n\n    _buffer[index + 3] = 0 >> 24 & 0xff;\n    _buffer[index + 2] = 0 >> 16 & 0xff;\n    _buffer[index + 1] = 0 >> 8 & 0xff;\n    _buffer[index] = 0 & 0xff;\n    index = index + 4; // Write batch size\n    // index = write32bit(index, _buffer, this.cursorIds.length);\n\n    _buffer[index + 3] = this.cursorIds.length >> 24 & 0xff;\n    _buffer[index + 2] = this.cursorIds.length >> 16 & 0xff;\n    _buffer[index + 1] = this.cursorIds.length >> 8 & 0xff;\n    _buffer[index] = this.cursorIds.length & 0xff;\n    index = index + 4; // Write all the cursor ids into the array\n\n    for (let i = 0; i < this.cursorIds.length; i++) {\n      // Write cursor id\n      // index = write32bit(index, _buffer, cursorIds[i].getLowBits());\n      _buffer[index + 3] = this.cursorIds[i].getLowBits() >> 24 & 0xff;\n      _buffer[index + 2] = this.cursorIds[i].getLowBits() >> 16 & 0xff;\n      _buffer[index + 1] = this.cursorIds[i].getLowBits() >> 8 & 0xff;\n      _buffer[index] = this.cursorIds[i].getLowBits() & 0xff;\n      index = index + 4; // index = write32bit(index, _buffer, cursorIds[i].getHighBits());\n\n      _buffer[index + 3] = this.cursorIds[i].getHighBits() >> 24 & 0xff;\n      _buffer[index + 2] = this.cursorIds[i].getHighBits() >> 16 & 0xff;\n      _buffer[index + 1] = this.cursorIds[i].getHighBits() >> 8 & 0xff;\n      _buffer[index] = this.cursorIds[i].getHighBits() & 0xff;\n      index = index + 4;\n    } // Return buffer\n\n\n    return [_buffer];\n  }\n\n}\n\nexports.KillCursor = KillCursor;\n/** @internal */\n\nclass Response {\n  constructor(message, msgHeader, msgBody, opts) {\n    this.parsed = false;\n    this.raw = message;\n    this.data = msgBody;\n    this.opts = opts !== null && opts !== void 0 ? opts : {\n      promoteLongs: true,\n      promoteValues: true,\n      promoteBuffers: false,\n      bsonRegExp: false\n    }; // Read the message header\n\n    this.length = msgHeader.length;\n    this.requestId = msgHeader.requestId;\n    this.responseTo = msgHeader.responseTo;\n    this.opCode = msgHeader.opCode;\n    this.fromCompressed = msgHeader.fromCompressed; // Read the message body\n\n    this.responseFlags = msgBody.readInt32LE(0);\n    this.cursorId = new BSON.Long(msgBody.readInt32LE(4), msgBody.readInt32LE(8));\n    this.startingFrom = msgBody.readInt32LE(12);\n    this.numberReturned = msgBody.readInt32LE(16); // Preallocate document array\n\n    this.documents = new Array(this.numberReturned); // Flag values\n\n    this.cursorNotFound = (this.responseFlags & CURSOR_NOT_FOUND) !== 0;\n    this.queryFailure = (this.responseFlags & QUERY_FAILURE) !== 0;\n    this.shardConfigStale = (this.responseFlags & SHARD_CONFIG_STALE) !== 0;\n    this.awaitCapable = (this.responseFlags & AWAIT_CAPABLE) !== 0;\n    this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\n    this.promoteValues = typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\n    this.promoteBuffers = typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\n    this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\n  }\n\n  isParsed() {\n    return this.parsed;\n  }\n\n  parse(options) {\n    var _a, _b, _c, _d; // Don't parse again if not needed\n\n\n    if (this.parsed) return;\n    options = options !== null && options !== void 0 ? options : {}; // Allow the return of raw documents instead of parsing\n\n    const raw = options.raw || false;\n    const documentsReturnedIn = options.documentsReturnedIn || null;\n    const promoteLongs = (_a = options.promoteLongs) !== null && _a !== void 0 ? _a : this.opts.promoteLongs;\n    const promoteValues = (_b = options.promoteValues) !== null && _b !== void 0 ? _b : this.opts.promoteValues;\n    const promoteBuffers = (_c = options.promoteBuffers) !== null && _c !== void 0 ? _c : this.opts.promoteBuffers;\n    const bsonRegExp = (_d = options.bsonRegExp) !== null && _d !== void 0 ? _d : this.opts.bsonRegExp;\n    let bsonSize; // Set up the options\n\n    const _options = {\n      promoteLongs,\n      promoteValues,\n      promoteBuffers,\n      bsonRegExp\n    }; // Position within OP_REPLY at which documents start\n    // (See https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#wire-op-reply)\n\n    this.index = 20; // Parse Body\n\n    for (let i = 0; i < this.numberReturned; i++) {\n      bsonSize = this.data[this.index] | this.data[this.index + 1] << 8 | this.data[this.index + 2] << 16 | this.data[this.index + 3] << 24; // If we have raw results specified slice the return document\n\n      if (raw) {\n        this.documents[i] = this.data.slice(this.index, this.index + bsonSize);\n      } else {\n        this.documents[i] = BSON.deserialize(this.data.slice(this.index, this.index + bsonSize), _options);\n      } // Adjust the index\n\n\n      this.index = this.index + bsonSize;\n    }\n\n    if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n      const fieldsAsRaw = {};\n      fieldsAsRaw[documentsReturnedIn] = true;\n      _options.fieldsAsRaw = fieldsAsRaw;\n      const doc = BSON.deserialize(this.documents[0], _options);\n      this.documents = [doc];\n    } // Set parsed\n\n\n    this.parsed = true;\n  }\n\n}\n\nexports.Response = Response; // Implementation of OP_MSG spec:\n// https://github.com/mongodb/specifications/blob/master/source/message/OP_MSG.rst\n//\n// struct Section {\n//   uint8 payloadType;\n//   union payload {\n//       document  document; // payloadType == 0\n//       struct sequence { // payloadType == 1\n//           int32      size;\n//           cstring    identifier;\n//           document*  documents;\n//       };\n//   };\n// };\n// struct OP_MSG {\n//   struct MsgHeader {\n//       int32  messageLength;\n//       int32  requestID;\n//       int32  responseTo;\n//       int32  opCode = 2013;\n//   };\n//   uint32      flagBits;\n//   Section+    sections;\n//   [uint32     checksum;]\n// };\n// Msg Flags\n\nconst OPTS_CHECKSUM_PRESENT = 1;\nconst OPTS_MORE_TO_COME = 2;\nconst OPTS_EXHAUST_ALLOWED = 1 << 16;\n/** @internal */\n\nclass Msg {\n  constructor(ns, command, options) {\n    // Basic options needed to be passed in\n    if (command == null) throw new error_1.MongoInvalidArgumentError('Query document must be specified for query'); // Basic options\n\n    this.ns = ns;\n    this.command = command;\n    this.command.$db = utils_1.databaseNamespace(ns);\n\n    if (options.readPreference && options.readPreference.mode !== read_preference_1.ReadPreference.PRIMARY) {\n      this.command.$readPreference = options.readPreference.toJSON();\n    } // Ensure empty options\n\n\n    this.options = options !== null && options !== void 0 ? options : {}; // Additional options\n\n    this.requestId = options.requestId ? options.requestId : Msg.getRequestId(); // Serialization option\n\n    this.serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    this.ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n    this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16; // flags\n\n    this.checksumPresent = false;\n    this.moreToCome = options.moreToCome || false;\n    this.exhaustAllowed = typeof options.exhaustAllowed === 'boolean' ? options.exhaustAllowed : false;\n  }\n\n  toBin() {\n    const buffers = [];\n    let flags = 0;\n\n    if (this.checksumPresent) {\n      flags |= OPTS_CHECKSUM_PRESENT;\n    }\n\n    if (this.moreToCome) {\n      flags |= OPTS_MORE_TO_COME;\n    }\n\n    if (this.exhaustAllowed) {\n      flags |= OPTS_EXHAUST_ALLOWED;\n    }\n\n    const header = Buffer.alloc(4 * 4 + // Header\n    4 // Flags\n    );\n    buffers.push(header);\n    let totalLength = header.length;\n    const command = this.command;\n    totalLength += this.makeDocumentSegment(buffers, command);\n    header.writeInt32LE(totalLength, 0); // messageLength\n\n    header.writeInt32LE(this.requestId, 4); // requestID\n\n    header.writeInt32LE(0, 8); // responseTo\n\n    header.writeInt32LE(constants_1.OP_MSG, 12); // opCode\n\n    header.writeUInt32LE(flags, 16); // flags\n\n    return buffers;\n  }\n\n  makeDocumentSegment(buffers, document) {\n    const payloadTypeBuffer = Buffer.alloc(1);\n    payloadTypeBuffer[0] = 0;\n    const documentBuffer = this.serializeBson(document);\n    buffers.push(payloadTypeBuffer);\n    buffers.push(documentBuffer);\n    return payloadTypeBuffer.length + documentBuffer.length;\n  }\n\n  serializeBson(document) {\n    return BSON.serialize(document, {\n      checkKeys: this.checkKeys,\n      serializeFunctions: this.serializeFunctions,\n      ignoreUndefined: this.ignoreUndefined\n    });\n  }\n\n  static getRequestId() {\n    _requestId = _requestId + 1 & 0x7fffffff;\n    return _requestId;\n  }\n\n}\n\nexports.Msg = Msg;\n/** @internal */\n\nclass BinMsg {\n  constructor(message, msgHeader, msgBody, opts) {\n    this.parsed = false;\n    this.raw = message;\n    this.data = msgBody;\n    this.opts = opts !== null && opts !== void 0 ? opts : {\n      promoteLongs: true,\n      promoteValues: true,\n      promoteBuffers: false,\n      bsonRegExp: false\n    }; // Read the message header\n\n    this.length = msgHeader.length;\n    this.requestId = msgHeader.requestId;\n    this.responseTo = msgHeader.responseTo;\n    this.opCode = msgHeader.opCode;\n    this.fromCompressed = msgHeader.fromCompressed; // Read response flags\n\n    this.responseFlags = msgBody.readInt32LE(0);\n    this.checksumPresent = (this.responseFlags & OPTS_CHECKSUM_PRESENT) !== 0;\n    this.moreToCome = (this.responseFlags & OPTS_MORE_TO_COME) !== 0;\n    this.exhaustAllowed = (this.responseFlags & OPTS_EXHAUST_ALLOWED) !== 0;\n    this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\n    this.promoteValues = typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\n    this.promoteBuffers = typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\n    this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\n    this.documents = [];\n  }\n\n  isParsed() {\n    return this.parsed;\n  }\n\n  parse(options) {\n    var _a, _b, _c, _d; // Don't parse again if not needed\n\n\n    if (this.parsed) return;\n    options = options !== null && options !== void 0 ? options : {};\n    this.index = 4; // Allow the return of raw documents instead of parsing\n\n    const raw = options.raw || false;\n    const documentsReturnedIn = options.documentsReturnedIn || null;\n    const promoteLongs = (_a = options.promoteLongs) !== null && _a !== void 0 ? _a : this.opts.promoteLongs;\n    const promoteValues = (_b = options.promoteValues) !== null && _b !== void 0 ? _b : this.opts.promoteValues;\n    const promoteBuffers = (_c = options.promoteBuffers) !== null && _c !== void 0 ? _c : this.opts.promoteBuffers;\n    const bsonRegExp = (_d = options.bsonRegExp) !== null && _d !== void 0 ? _d : this.opts.bsonRegExp; // Set up the options\n\n    const _options = {\n      promoteLongs,\n      promoteValues,\n      promoteBuffers,\n      bsonRegExp\n    };\n\n    while (this.index < this.data.length) {\n      const payloadType = this.data.readUInt8(this.index++);\n\n      if (payloadType === 0) {\n        const bsonSize = this.data.readUInt32LE(this.index);\n        const bin = this.data.slice(this.index, this.index + bsonSize);\n        this.documents.push(raw ? bin : BSON.deserialize(bin, _options));\n        this.index += bsonSize;\n      } else if (payloadType === 1) {\n        // It was decided that no driver makes use of payload type 1\n        // TODO(NODE-3483): Replace with MongoDeprecationError\n        throw new error_1.MongoRuntimeError('OP_MSG Payload Type 1 detected unsupported protocol');\n      }\n    }\n\n    if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n      const fieldsAsRaw = {};\n      fieldsAsRaw[documentsReturnedIn] = true;\n      _options.fieldsAsRaw = fieldsAsRaw;\n      const doc = BSON.deserialize(this.documents[0], _options);\n      this.documents = [doc];\n    }\n\n    this.parsed = true;\n  }\n\n}\n\nexports.BinMsg = BinMsg;","map":{"version":3,"sources":["../../src/cmap/commands.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BinMsg = exports.Msg = exports.Response = exports.KillCursor = exports.GetMore = exports.Query = void 0;\nconst read_preference_1 = require(\"../read_preference\");\nconst BSON = require(\"../bson\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"./wire_protocol/constants\");\nconst error_1 = require(\"../error\");\n// Incrementing request id\nlet _requestId = 0;\n// Query flags\nconst OPTS_TAILABLE_CURSOR = 2;\nconst OPTS_SLAVE = 4;\nconst OPTS_OPLOG_REPLAY = 8;\nconst OPTS_NO_CURSOR_TIMEOUT = 16;\nconst OPTS_AWAIT_DATA = 32;\nconst OPTS_EXHAUST = 64;\nconst OPTS_PARTIAL = 128;\n// Response flags\nconst CURSOR_NOT_FOUND = 1;\nconst QUERY_FAILURE = 2;\nconst SHARD_CONFIG_STALE = 4;\nconst AWAIT_CAPABLE = 8;\n/**************************************************************\n * QUERY\n **************************************************************/\n/** @internal */\nclass Query {\n    constructor(ns, query, options) {\n        // Basic options needed to be passed in\n        // TODO(NODE-3483): Replace with MongoCommandError\n        if (ns == null)\n            throw new error_1.MongoRuntimeError('Namespace must be specified for query');\n        // TODO(NODE-3483): Replace with MongoCommandError\n        if (query == null)\n            throw new error_1.MongoRuntimeError('A query document must be specified for query');\n        // Validate that we are not passing 0x00 in the collection name\n        if (ns.indexOf('\\x00') !== -1) {\n            // TODO(NODE-3483): Use MongoNamespace static method\n            throw new error_1.MongoRuntimeError('Namespace cannot contain a null character');\n        }\n        // Basic options\n        this.ns = ns;\n        this.query = query;\n        // Additional options\n        this.numberToSkip = options.numberToSkip || 0;\n        this.numberToReturn = options.numberToReturn || 0;\n        this.returnFieldSelector = options.returnFieldSelector || undefined;\n        this.requestId = Query.getRequestId();\n        // special case for pre-3.2 find commands, delete ASAP\n        this.pre32Limit = options.pre32Limit;\n        // Serialization option\n        this.serializeFunctions =\n            typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n        this.ignoreUndefined =\n            typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n        this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n        this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n        this.batchSize = this.numberToReturn;\n        // Flags\n        this.tailable = false;\n        this.slaveOk = typeof options.slaveOk === 'boolean' ? options.slaveOk : false;\n        this.oplogReplay = false;\n        this.noCursorTimeout = false;\n        this.awaitData = false;\n        this.exhaust = false;\n        this.partial = false;\n    }\n    /** Assign next request Id. */\n    incRequestId() {\n        this.requestId = _requestId++;\n    }\n    /** Peek next request Id. */\n    nextRequestId() {\n        return _requestId + 1;\n    }\n    /** Increment then return next request Id. */\n    static getRequestId() {\n        return ++_requestId;\n    }\n    // Uses a single allocated buffer for the process, avoiding multiple memory allocations\n    toBin() {\n        const buffers = [];\n        let projection = null;\n        // Set up the flags\n        let flags = 0;\n        if (this.tailable) {\n            flags |= OPTS_TAILABLE_CURSOR;\n        }\n        if (this.slaveOk) {\n            flags |= OPTS_SLAVE;\n        }\n        if (this.oplogReplay) {\n            flags |= OPTS_OPLOG_REPLAY;\n        }\n        if (this.noCursorTimeout) {\n            flags |= OPTS_NO_CURSOR_TIMEOUT;\n        }\n        if (this.awaitData) {\n            flags |= OPTS_AWAIT_DATA;\n        }\n        if (this.exhaust) {\n            flags |= OPTS_EXHAUST;\n        }\n        if (this.partial) {\n            flags |= OPTS_PARTIAL;\n        }\n        // If batchSize is different to this.numberToReturn\n        if (this.batchSize !== this.numberToReturn)\n            this.numberToReturn = this.batchSize;\n        // Allocate write protocol header buffer\n        const header = Buffer.alloc(4 * 4 + // Header\n            4 + // Flags\n            Buffer.byteLength(this.ns) +\n            1 + // namespace\n            4 + // numberToSkip\n            4 // numberToReturn\n        );\n        // Add header to buffers\n        buffers.push(header);\n        // Serialize the query\n        const query = BSON.serialize(this.query, {\n            checkKeys: this.checkKeys,\n            serializeFunctions: this.serializeFunctions,\n            ignoreUndefined: this.ignoreUndefined\n        });\n        // Add query document\n        buffers.push(query);\n        if (this.returnFieldSelector && Object.keys(this.returnFieldSelector).length > 0) {\n            // Serialize the projection document\n            projection = BSON.serialize(this.returnFieldSelector, {\n                checkKeys: this.checkKeys,\n                serializeFunctions: this.serializeFunctions,\n                ignoreUndefined: this.ignoreUndefined\n            });\n            // Add projection document\n            buffers.push(projection);\n        }\n        // Total message size\n        const totalLength = header.length + query.length + (projection ? projection.length : 0);\n        // Set up the index\n        let index = 4;\n        // Write total document length\n        header[3] = (totalLength >> 24) & 0xff;\n        header[2] = (totalLength >> 16) & 0xff;\n        header[1] = (totalLength >> 8) & 0xff;\n        header[0] = totalLength & 0xff;\n        // Write header information requestId\n        header[index + 3] = (this.requestId >> 24) & 0xff;\n        header[index + 2] = (this.requestId >> 16) & 0xff;\n        header[index + 1] = (this.requestId >> 8) & 0xff;\n        header[index] = this.requestId & 0xff;\n        index = index + 4;\n        // Write header information responseTo\n        header[index + 3] = (0 >> 24) & 0xff;\n        header[index + 2] = (0 >> 16) & 0xff;\n        header[index + 1] = (0 >> 8) & 0xff;\n        header[index] = 0 & 0xff;\n        index = index + 4;\n        // Write header information OP_QUERY\n        header[index + 3] = (constants_1.OP_QUERY >> 24) & 0xff;\n        header[index + 2] = (constants_1.OP_QUERY >> 16) & 0xff;\n        header[index + 1] = (constants_1.OP_QUERY >> 8) & 0xff;\n        header[index] = constants_1.OP_QUERY & 0xff;\n        index = index + 4;\n        // Write header information flags\n        header[index + 3] = (flags >> 24) & 0xff;\n        header[index + 2] = (flags >> 16) & 0xff;\n        header[index + 1] = (flags >> 8) & 0xff;\n        header[index] = flags & 0xff;\n        index = index + 4;\n        // Write collection name\n        index = index + header.write(this.ns, index, 'utf8') + 1;\n        header[index - 1] = 0;\n        // Write header information flags numberToSkip\n        header[index + 3] = (this.numberToSkip >> 24) & 0xff;\n        header[index + 2] = (this.numberToSkip >> 16) & 0xff;\n        header[index + 1] = (this.numberToSkip >> 8) & 0xff;\n        header[index] = this.numberToSkip & 0xff;\n        index = index + 4;\n        // Write header information flags numberToReturn\n        header[index + 3] = (this.numberToReturn >> 24) & 0xff;\n        header[index + 2] = (this.numberToReturn >> 16) & 0xff;\n        header[index + 1] = (this.numberToReturn >> 8) & 0xff;\n        header[index] = this.numberToReturn & 0xff;\n        index = index + 4;\n        // Return the buffers\n        return buffers;\n    }\n}\nexports.Query = Query;\n/**************************************************************\n * GETMORE\n **************************************************************/\n/** @internal */\nclass GetMore {\n    constructor(ns, cursorId, opts = {}) {\n        this.numberToReturn = opts.numberToReturn || 0;\n        this.requestId = _requestId++;\n        this.ns = ns;\n        this.cursorId = cursorId;\n    }\n    // Uses a single allocated buffer for the process, avoiding multiple memory allocations\n    toBin() {\n        const length = 4 + Buffer.byteLength(this.ns) + 1 + 4 + 8 + 4 * 4;\n        // Create command buffer\n        let index = 0;\n        // Allocate buffer\n        const _buffer = Buffer.alloc(length);\n        // Write header information\n        // index = write32bit(index, _buffer, length);\n        _buffer[index + 3] = (length >> 24) & 0xff;\n        _buffer[index + 2] = (length >> 16) & 0xff;\n        _buffer[index + 1] = (length >> 8) & 0xff;\n        _buffer[index] = length & 0xff;\n        index = index + 4;\n        // index = write32bit(index, _buffer, requestId);\n        _buffer[index + 3] = (this.requestId >> 24) & 0xff;\n        _buffer[index + 2] = (this.requestId >> 16) & 0xff;\n        _buffer[index + 1] = (this.requestId >> 8) & 0xff;\n        _buffer[index] = this.requestId & 0xff;\n        index = index + 4;\n        // index = write32bit(index, _buffer, 0);\n        _buffer[index + 3] = (0 >> 24) & 0xff;\n        _buffer[index + 2] = (0 >> 16) & 0xff;\n        _buffer[index + 1] = (0 >> 8) & 0xff;\n        _buffer[index] = 0 & 0xff;\n        index = index + 4;\n        // index = write32bit(index, _buffer, OP_GETMORE);\n        _buffer[index + 3] = (constants_1.OP_GETMORE >> 24) & 0xff;\n        _buffer[index + 2] = (constants_1.OP_GETMORE >> 16) & 0xff;\n        _buffer[index + 1] = (constants_1.OP_GETMORE >> 8) & 0xff;\n        _buffer[index] = constants_1.OP_GETMORE & 0xff;\n        index = index + 4;\n        // index = write32bit(index, _buffer, 0);\n        _buffer[index + 3] = (0 >> 24) & 0xff;\n        _buffer[index + 2] = (0 >> 16) & 0xff;\n        _buffer[index + 1] = (0 >> 8) & 0xff;\n        _buffer[index] = 0 & 0xff;\n        index = index + 4;\n        // Write collection name\n        index = index + _buffer.write(this.ns, index, 'utf8') + 1;\n        _buffer[index - 1] = 0;\n        // Write batch size\n        // index = write32bit(index, _buffer, numberToReturn);\n        _buffer[index + 3] = (this.numberToReturn >> 24) & 0xff;\n        _buffer[index + 2] = (this.numberToReturn >> 16) & 0xff;\n        _buffer[index + 1] = (this.numberToReturn >> 8) & 0xff;\n        _buffer[index] = this.numberToReturn & 0xff;\n        index = index + 4;\n        // Write cursor id\n        // index = write32bit(index, _buffer, cursorId.getLowBits());\n        _buffer[index + 3] = (this.cursorId.getLowBits() >> 24) & 0xff;\n        _buffer[index + 2] = (this.cursorId.getLowBits() >> 16) & 0xff;\n        _buffer[index + 1] = (this.cursorId.getLowBits() >> 8) & 0xff;\n        _buffer[index] = this.cursorId.getLowBits() & 0xff;\n        index = index + 4;\n        // index = write32bit(index, _buffer, cursorId.getHighBits());\n        _buffer[index + 3] = (this.cursorId.getHighBits() >> 24) & 0xff;\n        _buffer[index + 2] = (this.cursorId.getHighBits() >> 16) & 0xff;\n        _buffer[index + 1] = (this.cursorId.getHighBits() >> 8) & 0xff;\n        _buffer[index] = this.cursorId.getHighBits() & 0xff;\n        index = index + 4;\n        // Return buffer\n        return [_buffer];\n    }\n}\nexports.GetMore = GetMore;\n/**************************************************************\n * KILLCURSOR\n **************************************************************/\n/** @internal */\nclass KillCursor {\n    constructor(ns, cursorIds) {\n        this.ns = ns;\n        this.requestId = _requestId++;\n        this.cursorIds = cursorIds;\n    }\n    // Uses a single allocated buffer for the process, avoiding multiple memory allocations\n    toBin() {\n        const length = 4 + 4 + 4 * 4 + this.cursorIds.length * 8;\n        // Create command buffer\n        let index = 0;\n        const _buffer = Buffer.alloc(length);\n        // Write header information\n        // index = write32bit(index, _buffer, length);\n        _buffer[index + 3] = (length >> 24) & 0xff;\n        _buffer[index + 2] = (length >> 16) & 0xff;\n        _buffer[index + 1] = (length >> 8) & 0xff;\n        _buffer[index] = length & 0xff;\n        index = index + 4;\n        // index = write32bit(index, _buffer, requestId);\n        _buffer[index + 3] = (this.requestId >> 24) & 0xff;\n        _buffer[index + 2] = (this.requestId >> 16) & 0xff;\n        _buffer[index + 1] = (this.requestId >> 8) & 0xff;\n        _buffer[index] = this.requestId & 0xff;\n        index = index + 4;\n        // index = write32bit(index, _buffer, 0);\n        _buffer[index + 3] = (0 >> 24) & 0xff;\n        _buffer[index + 2] = (0 >> 16) & 0xff;\n        _buffer[index + 1] = (0 >> 8) & 0xff;\n        _buffer[index] = 0 & 0xff;\n        index = index + 4;\n        // index = write32bit(index, _buffer, OP_KILL_CURSORS);\n        _buffer[index + 3] = (constants_1.OP_KILL_CURSORS >> 24) & 0xff;\n        _buffer[index + 2] = (constants_1.OP_KILL_CURSORS >> 16) & 0xff;\n        _buffer[index + 1] = (constants_1.OP_KILL_CURSORS >> 8) & 0xff;\n        _buffer[index] = constants_1.OP_KILL_CURSORS & 0xff;\n        index = index + 4;\n        // index = write32bit(index, _buffer, 0);\n        _buffer[index + 3] = (0 >> 24) & 0xff;\n        _buffer[index + 2] = (0 >> 16) & 0xff;\n        _buffer[index + 1] = (0 >> 8) & 0xff;\n        _buffer[index] = 0 & 0xff;\n        index = index + 4;\n        // Write batch size\n        // index = write32bit(index, _buffer, this.cursorIds.length);\n        _buffer[index + 3] = (this.cursorIds.length >> 24) & 0xff;\n        _buffer[index + 2] = (this.cursorIds.length >> 16) & 0xff;\n        _buffer[index + 1] = (this.cursorIds.length >> 8) & 0xff;\n        _buffer[index] = this.cursorIds.length & 0xff;\n        index = index + 4;\n        // Write all the cursor ids into the array\n        for (let i = 0; i < this.cursorIds.length; i++) {\n            // Write cursor id\n            // index = write32bit(index, _buffer, cursorIds[i].getLowBits());\n            _buffer[index + 3] = (this.cursorIds[i].getLowBits() >> 24) & 0xff;\n            _buffer[index + 2] = (this.cursorIds[i].getLowBits() >> 16) & 0xff;\n            _buffer[index + 1] = (this.cursorIds[i].getLowBits() >> 8) & 0xff;\n            _buffer[index] = this.cursorIds[i].getLowBits() & 0xff;\n            index = index + 4;\n            // index = write32bit(index, _buffer, cursorIds[i].getHighBits());\n            _buffer[index + 3] = (this.cursorIds[i].getHighBits() >> 24) & 0xff;\n            _buffer[index + 2] = (this.cursorIds[i].getHighBits() >> 16) & 0xff;\n            _buffer[index + 1] = (this.cursorIds[i].getHighBits() >> 8) & 0xff;\n            _buffer[index] = this.cursorIds[i].getHighBits() & 0xff;\n            index = index + 4;\n        }\n        // Return buffer\n        return [_buffer];\n    }\n}\nexports.KillCursor = KillCursor;\n/** @internal */\nclass Response {\n    constructor(message, msgHeader, msgBody, opts) {\n        this.parsed = false;\n        this.raw = message;\n        this.data = msgBody;\n        this.opts = opts !== null && opts !== void 0 ? opts : {\n            promoteLongs: true,\n            promoteValues: true,\n            promoteBuffers: false,\n            bsonRegExp: false\n        };\n        // Read the message header\n        this.length = msgHeader.length;\n        this.requestId = msgHeader.requestId;\n        this.responseTo = msgHeader.responseTo;\n        this.opCode = msgHeader.opCode;\n        this.fromCompressed = msgHeader.fromCompressed;\n        // Read the message body\n        this.responseFlags = msgBody.readInt32LE(0);\n        this.cursorId = new BSON.Long(msgBody.readInt32LE(4), msgBody.readInt32LE(8));\n        this.startingFrom = msgBody.readInt32LE(12);\n        this.numberReturned = msgBody.readInt32LE(16);\n        // Preallocate document array\n        this.documents = new Array(this.numberReturned);\n        // Flag values\n        this.cursorNotFound = (this.responseFlags & CURSOR_NOT_FOUND) !== 0;\n        this.queryFailure = (this.responseFlags & QUERY_FAILURE) !== 0;\n        this.shardConfigStale = (this.responseFlags & SHARD_CONFIG_STALE) !== 0;\n        this.awaitCapable = (this.responseFlags & AWAIT_CAPABLE) !== 0;\n        this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\n        this.promoteValues =\n            typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\n        this.promoteBuffers =\n            typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\n        this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\n    }\n    isParsed() {\n        return this.parsed;\n    }\n    parse(options) {\n        var _a, _b, _c, _d;\n        // Don't parse again if not needed\n        if (this.parsed)\n            return;\n        options = options !== null && options !== void 0 ? options : {};\n        // Allow the return of raw documents instead of parsing\n        const raw = options.raw || false;\n        const documentsReturnedIn = options.documentsReturnedIn || null;\n        const promoteLongs = (_a = options.promoteLongs) !== null && _a !== void 0 ? _a : this.opts.promoteLongs;\n        const promoteValues = (_b = options.promoteValues) !== null && _b !== void 0 ? _b : this.opts.promoteValues;\n        const promoteBuffers = (_c = options.promoteBuffers) !== null && _c !== void 0 ? _c : this.opts.promoteBuffers;\n        const bsonRegExp = (_d = options.bsonRegExp) !== null && _d !== void 0 ? _d : this.opts.bsonRegExp;\n        let bsonSize;\n        // Set up the options\n        const _options = {\n            promoteLongs,\n            promoteValues,\n            promoteBuffers,\n            bsonRegExp\n        };\n        // Position within OP_REPLY at which documents start\n        // (See https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#wire-op-reply)\n        this.index = 20;\n        // Parse Body\n        for (let i = 0; i < this.numberReturned; i++) {\n            bsonSize =\n                this.data[this.index] |\n                    (this.data[this.index + 1] << 8) |\n                    (this.data[this.index + 2] << 16) |\n                    (this.data[this.index + 3] << 24);\n            // If we have raw results specified slice the return document\n            if (raw) {\n                this.documents[i] = this.data.slice(this.index, this.index + bsonSize);\n            }\n            else {\n                this.documents[i] = BSON.deserialize(this.data.slice(this.index, this.index + bsonSize), _options);\n            }\n            // Adjust the index\n            this.index = this.index + bsonSize;\n        }\n        if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n            const fieldsAsRaw = {};\n            fieldsAsRaw[documentsReturnedIn] = true;\n            _options.fieldsAsRaw = fieldsAsRaw;\n            const doc = BSON.deserialize(this.documents[0], _options);\n            this.documents = [doc];\n        }\n        // Set parsed\n        this.parsed = true;\n    }\n}\nexports.Response = Response;\n// Implementation of OP_MSG spec:\n// https://github.com/mongodb/specifications/blob/master/source/message/OP_MSG.rst\n//\n// struct Section {\n//   uint8 payloadType;\n//   union payload {\n//       document  document; // payloadType == 0\n//       struct sequence { // payloadType == 1\n//           int32      size;\n//           cstring    identifier;\n//           document*  documents;\n//       };\n//   };\n// };\n// struct OP_MSG {\n//   struct MsgHeader {\n//       int32  messageLength;\n//       int32  requestID;\n//       int32  responseTo;\n//       int32  opCode = 2013;\n//   };\n//   uint32      flagBits;\n//   Section+    sections;\n//   [uint32     checksum;]\n// };\n// Msg Flags\nconst OPTS_CHECKSUM_PRESENT = 1;\nconst OPTS_MORE_TO_COME = 2;\nconst OPTS_EXHAUST_ALLOWED = 1 << 16;\n/** @internal */\nclass Msg {\n    constructor(ns, command, options) {\n        // Basic options needed to be passed in\n        if (command == null)\n            throw new error_1.MongoInvalidArgumentError('Query document must be specified for query');\n        // Basic options\n        this.ns = ns;\n        this.command = command;\n        this.command.$db = utils_1.databaseNamespace(ns);\n        if (options.readPreference && options.readPreference.mode !== read_preference_1.ReadPreference.PRIMARY) {\n            this.command.$readPreference = options.readPreference.toJSON();\n        }\n        // Ensure empty options\n        this.options = options !== null && options !== void 0 ? options : {};\n        // Additional options\n        this.requestId = options.requestId ? options.requestId : Msg.getRequestId();\n        // Serialization option\n        this.serializeFunctions =\n            typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n        this.ignoreUndefined =\n            typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n        this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n        this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n        // flags\n        this.checksumPresent = false;\n        this.moreToCome = options.moreToCome || false;\n        this.exhaustAllowed =\n            typeof options.exhaustAllowed === 'boolean' ? options.exhaustAllowed : false;\n    }\n    toBin() {\n        const buffers = [];\n        let flags = 0;\n        if (this.checksumPresent) {\n            flags |= OPTS_CHECKSUM_PRESENT;\n        }\n        if (this.moreToCome) {\n            flags |= OPTS_MORE_TO_COME;\n        }\n        if (this.exhaustAllowed) {\n            flags |= OPTS_EXHAUST_ALLOWED;\n        }\n        const header = Buffer.alloc(4 * 4 + // Header\n            4 // Flags\n        );\n        buffers.push(header);\n        let totalLength = header.length;\n        const command = this.command;\n        totalLength += this.makeDocumentSegment(buffers, command);\n        header.writeInt32LE(totalLength, 0); // messageLength\n        header.writeInt32LE(this.requestId, 4); // requestID\n        header.writeInt32LE(0, 8); // responseTo\n        header.writeInt32LE(constants_1.OP_MSG, 12); // opCode\n        header.writeUInt32LE(flags, 16); // flags\n        return buffers;\n    }\n    makeDocumentSegment(buffers, document) {\n        const payloadTypeBuffer = Buffer.alloc(1);\n        payloadTypeBuffer[0] = 0;\n        const documentBuffer = this.serializeBson(document);\n        buffers.push(payloadTypeBuffer);\n        buffers.push(documentBuffer);\n        return payloadTypeBuffer.length + documentBuffer.length;\n    }\n    serializeBson(document) {\n        return BSON.serialize(document, {\n            checkKeys: this.checkKeys,\n            serializeFunctions: this.serializeFunctions,\n            ignoreUndefined: this.ignoreUndefined\n        });\n    }\n    static getRequestId() {\n        _requestId = (_requestId + 1) & 0x7fffffff;\n        return _requestId;\n    }\n}\nexports.Msg = Msg;\n/** @internal */\nclass BinMsg {\n    constructor(message, msgHeader, msgBody, opts) {\n        this.parsed = false;\n        this.raw = message;\n        this.data = msgBody;\n        this.opts = opts !== null && opts !== void 0 ? opts : {\n            promoteLongs: true,\n            promoteValues: true,\n            promoteBuffers: false,\n            bsonRegExp: false\n        };\n        // Read the message header\n        this.length = msgHeader.length;\n        this.requestId = msgHeader.requestId;\n        this.responseTo = msgHeader.responseTo;\n        this.opCode = msgHeader.opCode;\n        this.fromCompressed = msgHeader.fromCompressed;\n        // Read response flags\n        this.responseFlags = msgBody.readInt32LE(0);\n        this.checksumPresent = (this.responseFlags & OPTS_CHECKSUM_PRESENT) !== 0;\n        this.moreToCome = (this.responseFlags & OPTS_MORE_TO_COME) !== 0;\n        this.exhaustAllowed = (this.responseFlags & OPTS_EXHAUST_ALLOWED) !== 0;\n        this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\n        this.promoteValues =\n            typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\n        this.promoteBuffers =\n            typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\n        this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\n        this.documents = [];\n    }\n    isParsed() {\n        return this.parsed;\n    }\n    parse(options) {\n        var _a, _b, _c, _d;\n        // Don't parse again if not needed\n        if (this.parsed)\n            return;\n        options = options !== null && options !== void 0 ? options : {};\n        this.index = 4;\n        // Allow the return of raw documents instead of parsing\n        const raw = options.raw || false;\n        const documentsReturnedIn = options.documentsReturnedIn || null;\n        const promoteLongs = (_a = options.promoteLongs) !== null && _a !== void 0 ? _a : this.opts.promoteLongs;\n        const promoteValues = (_b = options.promoteValues) !== null && _b !== void 0 ? _b : this.opts.promoteValues;\n        const promoteBuffers = (_c = options.promoteBuffers) !== null && _c !== void 0 ? _c : this.opts.promoteBuffers;\n        const bsonRegExp = (_d = options.bsonRegExp) !== null && _d !== void 0 ? _d : this.opts.bsonRegExp;\n        // Set up the options\n        const _options = {\n            promoteLongs,\n            promoteValues,\n            promoteBuffers,\n            bsonRegExp\n        };\n        while (this.index < this.data.length) {\n            const payloadType = this.data.readUInt8(this.index++);\n            if (payloadType === 0) {\n                const bsonSize = this.data.readUInt32LE(this.index);\n                const bin = this.data.slice(this.index, this.index + bsonSize);\n                this.documents.push(raw ? bin : BSON.deserialize(bin, _options));\n                this.index += bsonSize;\n            }\n            else if (payloadType === 1) {\n                // It was decided that no driver makes use of payload type 1\n                // TODO(NODE-3483): Replace with MongoDeprecationError\n                throw new error_1.MongoRuntimeError('OP_MSG Payload Type 1 detected unsupported protocol');\n            }\n        }\n        if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n            const fieldsAsRaw = {};\n            fieldsAsRaw[documentsReturnedIn] = true;\n            _options.fieldsAsRaw = fieldsAsRaw;\n            const doc = BSON.deserialize(this.documents[0], _options);\n            this.documents = [doc];\n        }\n        this.parsed = true;\n    }\n}\nexports.BinMsg = BinMsg;\n//# sourceMappingURL=commands.js.map"]},"metadata":{},"sourceType":"script"}