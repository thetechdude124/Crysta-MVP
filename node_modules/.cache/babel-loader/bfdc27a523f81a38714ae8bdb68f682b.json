{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CreateCollectionOperation = void 0;\n\nconst command_1 = require(\"./command\");\n\nconst operation_1 = require(\"./operation\");\n\nconst collection_1 = require(\"../collection\");\n\nconst ILLEGAL_COMMAND_FIELDS = new Set(['w', 'wtimeout', 'j', 'fsync', 'autoIndexId', 'pkFactory', 'raw', 'readPreference', 'session', 'readConcern', 'writeConcern', 'raw', 'fieldsAsRaw', 'promoteLongs', 'promoteValues', 'promoteBuffers', 'bsonRegExp', 'serializeFunctions', 'ignoreUndefined']);\n/** @internal */\n\nclass CreateCollectionOperation extends command_1.CommandOperation {\n  constructor(db, name, options = {}) {\n    super(db, options);\n    this.options = options;\n    this.db = db;\n    this.name = name;\n  }\n\n  execute(server, session, callback) {\n    const db = this.db;\n    const name = this.name;\n    const options = this.options;\n\n    const done = err => {\n      if (err) {\n        return callback(err);\n      }\n\n      callback(undefined, new collection_1.Collection(db, name, options));\n    };\n\n    const cmd = {\n      create: name\n    };\n\n    for (const n in options) {\n      if (options[n] != null && typeof options[n] !== 'function' && !ILLEGAL_COMMAND_FIELDS.has(n)) {\n        cmd[n] = options[n];\n      }\n    } // otherwise just execute the command\n\n\n    super.executeCommand(server, session, cmd, done);\n  }\n\n}\n\nexports.CreateCollectionOperation = CreateCollectionOperation;\noperation_1.defineAspects(CreateCollectionOperation, [operation_1.Aspect.WRITE_OPERATION]);","map":{"version":3,"sources":["../../src/operations/create_collection.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,MAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AACA,MAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAQA,MAAM,sBAAsB,GAAG,IAAI,GAAJ,CAAQ,CACrC,GADqC,EAErC,UAFqC,EAGrC,GAHqC,EAIrC,OAJqC,EAKrC,aALqC,EAMrC,WANqC,EAOrC,KAPqC,EAQrC,gBARqC,EASrC,SATqC,EAUrC,aAVqC,EAWrC,cAXqC,EAYrC,KAZqC,EAarC,aAbqC,EAcrC,cAdqC,EAerC,eAfqC,EAgBrC,gBAhBqC,EAiBrC,YAjBqC,EAkBrC,oBAlBqC,EAmBrC,iBAnBqC,CAAR,CAA/B;AAoEA;;AACA,MAAa,yBAAb,SAA+C,SAAA,CAAA,gBAA/C,CAA2E;AAKzE,EAAA,WAAA,CAAY,EAAZ,EAAoB,IAApB,EAAkC,OAAA,GAAmC,EAArE,EAAuE;AACrE,UAAM,EAAN,EAAU,OAAV;AAEA,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,IAAL,GAAY,IAAZ;AACD;;AAED,EAAA,OAAO,CAAC,MAAD,EAAiB,OAAjB,EAAyC,QAAzC,EAAuE;AAC5E,UAAM,EAAE,GAAG,KAAK,EAAhB;AACA,UAAM,IAAI,GAAG,KAAK,IAAlB;AACA,UAAM,OAAO,GAAG,KAAK,OAArB;;AAEA,UAAM,IAAI,GAAa,GAAG,IAAG;AAC3B,UAAI,GAAJ,EAAS;AACP,eAAO,QAAQ,CAAC,GAAD,CAAf;AACD;;AAED,MAAA,QAAQ,CAAC,SAAD,EAAY,IAAI,YAAA,CAAA,UAAJ,CAAe,EAAf,EAAmB,IAAnB,EAAyB,OAAzB,CAAZ,CAAR;AACD,KAND;;AAQA,UAAM,GAAG,GAAa;AAAE,MAAA,MAAM,EAAE;AAAV,KAAtB;;AACA,SAAK,MAAM,CAAX,IAAgB,OAAhB,EAAyB;AACvB,UACG,OAAe,CAAC,CAAD,CAAf,IAAsB,IAAtB,IACD,OAAQ,OAAe,CAAC,CAAD,CAAvB,KAA+B,UAD9B,IAED,CAAC,sBAAsB,CAAC,GAAvB,CAA2B,CAA3B,CAHH,EAIE;AACA,QAAA,GAAG,CAAC,CAAD,CAAH,GAAU,OAAe,CAAC,CAAD,CAAzB;AACD;AACF,KAtB2E,CAwB5E;;;AACA,UAAM,cAAN,CAAqB,MAArB,EAA6B,OAA7B,EAAsC,GAAtC,EAA2C,IAA3C;AACD;;AAvCwE;;AAA3E,OAAA,CAAA,yBAAA,GAAA,yBAAA;AA0CA,WAAA,CAAA,aAAA,CAAc,yBAAd,EAAyC,CAAC,WAAA,CAAA,MAAA,CAAO,eAAR,CAAzC","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateCollectionOperation = void 0;\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\nconst collection_1 = require(\"../collection\");\nconst ILLEGAL_COMMAND_FIELDS = new Set([\n    'w',\n    'wtimeout',\n    'j',\n    'fsync',\n    'autoIndexId',\n    'pkFactory',\n    'raw',\n    'readPreference',\n    'session',\n    'readConcern',\n    'writeConcern',\n    'raw',\n    'fieldsAsRaw',\n    'promoteLongs',\n    'promoteValues',\n    'promoteBuffers',\n    'bsonRegExp',\n    'serializeFunctions',\n    'ignoreUndefined'\n]);\n/** @internal */\nclass CreateCollectionOperation extends command_1.CommandOperation {\n    constructor(db, name, options = {}) {\n        super(db, options);\n        this.options = options;\n        this.db = db;\n        this.name = name;\n    }\n    execute(server, session, callback) {\n        const db = this.db;\n        const name = this.name;\n        const options = this.options;\n        const done = err => {\n            if (err) {\n                return callback(err);\n            }\n            callback(undefined, new collection_1.Collection(db, name, options));\n        };\n        const cmd = { create: name };\n        for (const n in options) {\n            if (options[n] != null &&\n                typeof options[n] !== 'function' &&\n                !ILLEGAL_COMMAND_FIELDS.has(n)) {\n                cmd[n] = options[n];\n            }\n        }\n        // otherwise just execute the command\n        super.executeCommand(server, session, cmd, done);\n    }\n}\nexports.CreateCollectionOperation = CreateCollectionOperation;\noperation_1.defineAspects(CreateCollectionOperation, [operation_1.Aspect.WRITE_OPERATION]);\n//# sourceMappingURL=create_collection.js.map"]},"metadata":{},"sourceType":"script"}