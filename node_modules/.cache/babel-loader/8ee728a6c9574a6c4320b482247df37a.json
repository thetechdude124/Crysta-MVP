{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CountDocumentsOperation = void 0;\n\nconst aggregate_1 = require(\"./aggregate\");\n/** @internal */\n\n\nclass CountDocumentsOperation extends aggregate_1.AggregateOperation {\n  constructor(collection, query, options) {\n    const pipeline = [];\n    pipeline.push({\n      $match: query\n    });\n\n    if (typeof options.skip === 'number') {\n      pipeline.push({\n        $skip: options.skip\n      });\n    }\n\n    if (typeof options.limit === 'number') {\n      pipeline.push({\n        $limit: options.limit\n      });\n    }\n\n    pipeline.push({\n      $group: {\n        _id: 1,\n        n: {\n          $sum: 1\n        }\n      }\n    });\n    super(collection.s.namespace, pipeline, options);\n  }\n\n  execute(server, session, callback) {\n    super.execute(server, session, (err, result) => {\n      if (err || !result) {\n        callback(err);\n        return;\n      } // NOTE: We're avoiding creating a cursor here to reduce the callstack.\n\n\n      const response = result;\n\n      if (response.cursor == null || response.cursor.firstBatch == null) {\n        callback(undefined, 0);\n        return;\n      }\n\n      const docs = response.cursor.firstBatch;\n      callback(undefined, docs.length ? docs[0].n : 0);\n    });\n  }\n\n}\n\nexports.CountDocumentsOperation = CountDocumentsOperation;","map":{"version":3,"sources":["../../src/operations/count_documents.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAeA;;;AACA,MAAa,uBAAb,SAA6C,WAAA,CAAA,kBAA7C,CAAuE;AACrE,EAAA,WAAA,CAAY,UAAZ,EAAoC,KAApC,EAAqD,OAArD,EAAmF;AACjF,UAAM,QAAQ,GAAG,EAAjB;AACA,IAAA,QAAQ,CAAC,IAAT,CAAc;AAAE,MAAA,MAAM,EAAE;AAAV,KAAd;;AAEA,QAAI,OAAO,OAAO,CAAC,IAAf,KAAwB,QAA5B,EAAsC;AACpC,MAAA,QAAQ,CAAC,IAAT,CAAc;AAAE,QAAA,KAAK,EAAE,OAAO,CAAC;AAAjB,OAAd;AACD;;AAED,QAAI,OAAO,OAAO,CAAC,KAAf,KAAyB,QAA7B,EAAuC;AACrC,MAAA,QAAQ,CAAC,IAAT,CAAc;AAAE,QAAA,MAAM,EAAE,OAAO,CAAC;AAAlB,OAAd;AACD;;AAED,IAAA,QAAQ,CAAC,IAAT,CAAc;AAAE,MAAA,MAAM,EAAE;AAAE,QAAA,GAAG,EAAE,CAAP;AAAU,QAAA,CAAC,EAAE;AAAE,UAAA,IAAI,EAAE;AAAR;AAAb;AAAV,KAAd;AAEA,UAAM,UAAU,CAAC,CAAX,CAAa,SAAnB,EAA8B,QAA9B,EAAwC,OAAxC;AACD;;AAED,EAAA,OAAO,CAAC,MAAD,EAAiB,OAAjB,EAAyC,QAAzC,EAAmE;AACxE,UAAM,OAAN,CAAc,MAAd,EAAsB,OAAtB,EAA+B,CAAC,GAAD,EAAM,MAAN,KAAgB;AAC7C,UAAI,GAAG,IAAI,CAAC,MAAZ,EAAoB;AAClB,QAAA,QAAQ,CAAC,GAAD,CAAR;AACA;AACD,OAJ4C,CAM7C;;;AACA,YAAM,QAAQ,GAAG,MAAjB;;AACA,UAAI,QAAQ,CAAC,MAAT,IAAmB,IAAnB,IAA2B,QAAQ,CAAC,MAAT,CAAgB,UAAhB,IAA8B,IAA7D,EAAmE;AACjE,QAAA,QAAQ,CAAC,SAAD,EAAY,CAAZ,CAAR;AACA;AACD;;AAED,YAAM,IAAI,GAAG,QAAQ,CAAC,MAAT,CAAgB,UAA7B;AACA,MAAA,QAAQ,CAAC,SAAD,EAAY,IAAI,CAAC,MAAL,GAAc,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAtB,GAA0B,CAAtC,CAAR;AACD,KAfD;AAgBD;;AAnCoE;;AAAvE,OAAA,CAAA,uBAAA,GAAA,uBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CountDocumentsOperation = void 0;\nconst aggregate_1 = require(\"./aggregate\");\n/** @internal */\nclass CountDocumentsOperation extends aggregate_1.AggregateOperation {\n    constructor(collection, query, options) {\n        const pipeline = [];\n        pipeline.push({ $match: query });\n        if (typeof options.skip === 'number') {\n            pipeline.push({ $skip: options.skip });\n        }\n        if (typeof options.limit === 'number') {\n            pipeline.push({ $limit: options.limit });\n        }\n        pipeline.push({ $group: { _id: 1, n: { $sum: 1 } } });\n        super(collection.s.namespace, pipeline, options);\n    }\n    execute(server, session, callback) {\n        super.execute(server, session, (err, result) => {\n            if (err || !result) {\n                callback(err);\n                return;\n            }\n            // NOTE: We're avoiding creating a cursor here to reduce the callstack.\n            const response = result;\n            if (response.cursor == null || response.cursor.firstBatch == null) {\n                callback(undefined, 0);\n                return;\n            }\n            const docs = response.cursor.firstBatch;\n            callback(undefined, docs.length ? docs[0].n : 0);\n        });\n    }\n}\nexports.CountDocumentsOperation = CountDocumentsOperation;\n//# sourceMappingURL=count_documents.js.map"]},"metadata":{},"sourceType":"script"}