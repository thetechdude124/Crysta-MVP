{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mindf\\\\Documents\\\\Professional\\\\WORK\\\\CRYSTA\\\\MVP\\\\CODE\\\\React-App\\\\crysta_mvp\\\\src\\\\pages\\\\EnergyGraph.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { useAuth0 } from \"@auth0/auth0-react\"; // const uri = \"mongodb+srv://crysta:3.14159265e@crysta-database.qrvsc.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\n// const client = new MongoClient(uri);\n// client.connect();\n// console.log(\"Connected\");\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EnergyGraph extends Component {\n  constructor() {\n    super();\n    this.state = {\n      graphData: {}\n    };\n  }\n\n  componentWillMount() {\n    this.getGraphData();\n  }\n\n  getGraphData() {\n    //\"http://127.0.0.1:28017/Crysta-Database/task-switches/?\"\n    getDataFromDb = () => {\n      fetch('http://localhost:3001/api/getData').then(data => data.json()).then(res => this.setState({\n        data: res.data\n      }));\n    };\n\n    console.log(query);\n    this.setState({\n      graphData: {\n        labels: ['8 AM', '9 AM', '10 AM', '11 AM', '12 PM', '1 PM', '2 PM', '3 PM', '4 PM', '5 PM', '6 PM', '7 PM', '8 PM', '9 PM', '10 PM', '11 PM', '12 AM'],\n        datasets: [{\n          label: 'Task Switches',\n          data: [11, 16, 18, 16, 14, 9, 2, 3, 4, 12, 18, 22, 24, 26, 23, 22, 18],\n          // data: this.getGraphData,\n          borderWidth: 8,\n          borderColor: \"rgba(20, 177, 183, 0.4)\",\n          pointBackgroundColor: \"rgb(77, 77, 77, 1)\",\n          tension: 0.4,\n          pointRadius: 8\n        }]\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"energy-graph\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: this.state.energygraphData,\n        width: 1580,\n        height: 750,\n        options: {\n          maintainAspectRatio: true,\n          responsive: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default EnergyGraph;","map":{"version":3,"sources":["C:/Users/mindf/Documents/Professional/WORK/CRYSTA/MVP/CODE/React-App/crysta_mvp/src/pages/EnergyGraph.js"],"names":["React","Component","useState","useEffect","Line","axios","useAuth0","EnergyGraph","constructor","state","graphData","componentWillMount","getGraphData","getDataFromDb","fetch","then","data","json","res","setState","console","log","query","labels","datasets","label","borderWidth","borderColor","pointBackgroundColor","tension","pointRadius","render","energygraphData","maintainAspectRatio","responsive"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,SAApC,QAAoD,OAApD;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB,C,CAEA;AACA;AACA;AACA;;;;AAGA,MAAMC,WAAN,SAA0BN,SAA1B,CAAmC;AAE/BO,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAC;AADD,KAAb;AAGH;;AAEDC,EAAAA,kBAAkB,GAAE;AAChB,SAAKC,YAAL;AACH;;AAEDA,EAAAA,YAAY,GAAG;AACX;AACAC,IAAAA,aAAa,GAAG,MAAM;AAClBC,MAAAA,KAAK,CAAC,mCAAD,CAAL,CACCC,IADD,CACOC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADhB,EAECF,IAFD,CAEOG,GAAD,IAAS,KAAKC,QAAL,CAAc;AAACH,QAAAA,IAAI,EAAEE,GAAG,CAACF;AAAX,OAAd,CAFf;AAGH,KAJD;;AAOII,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,SAAKH,QAAL,CAAc;AACVT,MAAAA,SAAS,EAAE;AAEPa,QAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0B,OAA1B,EAAmC,OAAnC,EAA4C,MAA5C,EAAoD,MAApD,EAA4D,MAA5D,EAAoE,MAApE,EAA4E,MAA5E,EAAoF,MAApF,EACR,MADQ,EACA,MADA,EACQ,MADR,EACgB,OADhB,EACyB,OADzB,EACkC,OADlC,CAFD;AAKPC,QAAAA,QAAQ,EAAE,CACN;AACIC,UAAAA,KAAK,EAAE,eADX;AAEIT,UAAAA,IAAI,EAAE,CACF,EADE,EAEF,EAFE,EAGF,EAHE,EAIF,EAJE,EAKF,EALE,EAMF,CANE,EAOF,CAPE,EAQF,CARE,EASF,CATE,EAUF,EAVE,EAWF,EAXE,EAYF,EAZE,EAaF,EAbE,EAcF,EAdE,EAeF,EAfE,EAgBF,EAhBE,EAiBF,EAjBE,CAFV;AAqBI;AACAU,UAAAA,WAAW,EAAE,CAtBjB;AAuBIC,UAAAA,WAAW,EAAE,yBAvBjB;AAwBIC,UAAAA,oBAAoB,EAAE,oBAxB1B;AAyBIC,UAAAA,OAAO,EAAE,GAzBb;AA0BIC,UAAAA,WAAW,EAAE;AA1BjB,SADM;AALH;AADD,KAAd;AAsCP;;AAGDC,EAAAA,MAAM,GAAE;AAEJ,wBACI;AAAK,MAAA,SAAS,EAAG,cAAjB;AAAA,6BACI,QAAC,IAAD;AACI,QAAA,IAAI,EAAI,KAAKtB,KAAL,CAAWuB,eADvB;AAEI,QAAA,KAAK,EAAI,IAFb;AAGI,QAAA,MAAM,EAAI,GAHd;AAII,QAAA,OAAO,EAAI;AACPC,UAAAA,mBAAmB,EAAE,IADd;AAEPC,UAAAA,UAAU,EAAE;AAFL;AAJf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AA/E8B;;AAkFnC,eAAe3B,WAAf","sourcesContent":["import React, {Component, useState, useEffect} from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\n// const uri = \"mongodb+srv://crysta:3.14159265e@crysta-database.qrvsc.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\r\n// const client = new MongoClient(uri);\r\n// client.connect();\r\n// console.log(\"Connected\");\r\n\r\n\r\nclass EnergyGraph extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            graphData:{}\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.getGraphData();\r\n    }\r\n\r\n    getGraphData() {\r\n        //\"http://127.0.0.1:28017/Crysta-Database/task-switches/?\"\r\n        getDataFromDb = () => {\r\n            fetch('http://localhost:3001/api/getData')\r\n            .then((data) => data.json())\r\n            .then((res) => this.setState({data: res.data}));\r\n        };\r\n\r\n        \r\n            console.log(query)\r\n            this.setState({\r\n                graphData: {\r\n\r\n                    labels: ['8 AM', '9 AM', '10 AM', '11 AM', '12 PM', '1 PM', '2 PM', '3 PM', '4 PM', '5 PM', '6 PM', \r\n                    '7 PM', '8 PM', '9 PM', '10 PM', '11 PM', '12 AM'],\r\n\r\n                    datasets: [\r\n                        {\r\n                            label: 'Task Switches',\r\n                            data: [\r\n                                11,\r\n                                16,\r\n                                18,\r\n                                16,\r\n                                14,\r\n                                9,\r\n                                2,\r\n                                3,\r\n                                4,\r\n                                12,\r\n                                18,\r\n                                22,\r\n                                24,\r\n                                26,\r\n                                23,\r\n                                22,\r\n                                18\r\n                            ],\r\n                            // data: this.getGraphData,\r\n                            borderWidth: 8,\r\n                            borderColor: \"rgba(20, 177, 183, 0.4)\",\r\n                            pointBackgroundColor: \"rgb(77, 77, 77, 1)\",\r\n                            tension: 0.4,\r\n                            pointRadius: 8\r\n                        }\r\n                    ]\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div className = \"energy-graph\">\r\n                <Line\r\n                    data = {this.state.energygraphData}\r\n                    width = {1580}\r\n                    height = {750}\r\n                    options = {{\r\n                        maintainAspectRatio: true,\r\n                        responsive: true,\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EnergyGraph;"]},"metadata":{},"sourceType":"module"}