{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeUpdateStatement = exports.ReplaceOneOperation = exports.UpdateManyOperation = exports.UpdateOneOperation = exports.UpdateOperation = void 0;\n\nconst operation_1 = require(\"./operation\");\n\nconst utils_1 = require(\"../utils\");\n\nconst command_1 = require(\"./command\");\n\nconst error_1 = require(\"../error\");\n/** @internal */\n\n\nclass UpdateOperation extends command_1.CommandOperation {\n  constructor(ns, statements, options) {\n    super(undefined, options);\n    this.options = options;\n    this.ns = ns;\n    this.statements = statements;\n  }\n\n  get canRetryWrite() {\n    if (super.canRetryWrite === false) {\n      return false;\n    }\n\n    return this.statements.every(op => op.multi == null || op.multi === false);\n  }\n\n  execute(server, session, callback) {\n    var _a;\n\n    const options = (_a = this.options) !== null && _a !== void 0 ? _a : {};\n    const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n    const command = {\n      update: this.ns.collection,\n      updates: this.statements,\n      ordered\n    };\n\n    if (typeof options.bypassDocumentValidation === 'boolean') {\n      command.bypassDocumentValidation = options.bypassDocumentValidation;\n    }\n\n    if (options.let) {\n      command.let = options.let;\n    }\n\n    const statementWithCollation = this.statements.find(statement => !!statement.collation);\n\n    if (utils_1.collationNotSupported(server, options) || statementWithCollation && utils_1.collationNotSupported(server, statementWithCollation)) {\n      callback(new error_1.MongoCompatibilityError(`Server ${server.name} does not support collation`));\n      return;\n    }\n\n    const unacknowledgedWrite = this.writeConcern && this.writeConcern.w === 0;\n\n    if (unacknowledgedWrite || utils_1.maxWireVersion(server) < 5) {\n      if (this.statements.find(o => o.hint)) {\n        callback(new error_1.MongoCompatibilityError(`Servers < 3.4 do not support hint on update`));\n        return;\n      }\n    }\n\n    if (this.explain && utils_1.maxWireVersion(server) < 3) {\n      callback(new error_1.MongoCompatibilityError(`Server ${server.name} does not support explain on update`));\n      return;\n    }\n\n    if (this.statements.some(statement => !!statement.arrayFilters) && utils_1.maxWireVersion(server) < 6) {\n      callback(new error_1.MongoCompatibilityError('Option \"arrayFilters\" is only supported on MongoDB 3.6+'));\n      return;\n    }\n\n    super.executeCommand(server, session, command, callback);\n  }\n\n}\n\nexports.UpdateOperation = UpdateOperation;\n/** @internal */\n\nclass UpdateOneOperation extends UpdateOperation {\n  constructor(collection, filter, update, options) {\n    super(collection.s.namespace, [makeUpdateStatement(filter, update, { ...options,\n      multi: false\n    })], options);\n\n    if (!utils_1.hasAtomicOperators(update)) {\n      throw new error_1.MongoInvalidArgumentError('Update document requires atomic operators');\n    }\n  }\n\n  execute(server, session, callback) {\n    super.execute(server, session, (err, res) => {\n      var _a, _b;\n\n      if (err || !res) return callback(err);\n      if (this.explain != null) return callback(undefined, res);\n      if (res.code) return callback(new error_1.MongoServerError(res));\n      if (res.writeErrors) return callback(new error_1.MongoServerError(res.writeErrors[0]));\n      callback(undefined, {\n        acknowledged: (_b = ((_a = this.writeConcern) === null || _a === void 0 ? void 0 : _a.w) !== 0) !== null && _b !== void 0 ? _b : true,\n        modifiedCount: res.nModified != null ? res.nModified : res.n,\n        upsertedId: Array.isArray(res.upserted) && res.upserted.length > 0 ? res.upserted[0]._id : null,\n        upsertedCount: Array.isArray(res.upserted) && res.upserted.length ? res.upserted.length : 0,\n        matchedCount: Array.isArray(res.upserted) && res.upserted.length > 0 ? 0 : res.n\n      });\n    });\n  }\n\n}\n\nexports.UpdateOneOperation = UpdateOneOperation;\n/** @internal */\n\nclass UpdateManyOperation extends UpdateOperation {\n  constructor(collection, filter, update, options) {\n    super(collection.s.namespace, [makeUpdateStatement(filter, update, { ...options,\n      multi: true\n    })], options);\n\n    if (!utils_1.hasAtomicOperators(update)) {\n      throw new error_1.MongoInvalidArgumentError('Update document requires atomic operators');\n    }\n  }\n\n  execute(server, session, callback) {\n    super.execute(server, session, (err, res) => {\n      var _a, _b;\n\n      if (err || !res) return callback(err);\n      if (this.explain != null) return callback(undefined, res);\n      if (res.code) return callback(new error_1.MongoServerError(res));\n      if (res.writeErrors) return callback(new error_1.MongoServerError(res.writeErrors[0]));\n      callback(undefined, {\n        acknowledged: (_b = ((_a = this.writeConcern) === null || _a === void 0 ? void 0 : _a.w) !== 0) !== null && _b !== void 0 ? _b : true,\n        modifiedCount: res.nModified != null ? res.nModified : res.n,\n        upsertedId: Array.isArray(res.upserted) && res.upserted.length > 0 ? res.upserted[0]._id : null,\n        upsertedCount: Array.isArray(res.upserted) && res.upserted.length ? res.upserted.length : 0,\n        matchedCount: Array.isArray(res.upserted) && res.upserted.length > 0 ? 0 : res.n\n      });\n    });\n  }\n\n}\n\nexports.UpdateManyOperation = UpdateManyOperation;\n/** @internal */\n\nclass ReplaceOneOperation extends UpdateOperation {\n  constructor(collection, filter, replacement, options) {\n    super(collection.s.namespace, [makeUpdateStatement(filter, replacement, { ...options,\n      multi: false\n    })], options);\n\n    if (utils_1.hasAtomicOperators(replacement)) {\n      throw new error_1.MongoInvalidArgumentError('Replacement document must not contain atomic operators');\n    }\n  }\n\n  execute(server, session, callback) {\n    super.execute(server, session, (err, res) => {\n      var _a, _b;\n\n      if (err || !res) return callback(err);\n      if (this.explain != null) return callback(undefined, res);\n      if (res.code) return callback(new error_1.MongoServerError(res));\n      if (res.writeErrors) return callback(new error_1.MongoServerError(res.writeErrors[0]));\n      callback(undefined, {\n        acknowledged: (_b = ((_a = this.writeConcern) === null || _a === void 0 ? void 0 : _a.w) !== 0) !== null && _b !== void 0 ? _b : true,\n        modifiedCount: res.nModified != null ? res.nModified : res.n,\n        upsertedId: Array.isArray(res.upserted) && res.upserted.length > 0 ? res.upserted[0]._id : null,\n        upsertedCount: Array.isArray(res.upserted) && res.upserted.length ? res.upserted.length : 0,\n        matchedCount: Array.isArray(res.upserted) && res.upserted.length > 0 ? 0 : res.n\n      });\n    });\n  }\n\n}\n\nexports.ReplaceOneOperation = ReplaceOneOperation;\n\nfunction makeUpdateStatement(filter, update, options) {\n  if (filter == null || typeof filter !== 'object') {\n    throw new error_1.MongoInvalidArgumentError('Selector must be a valid JavaScript object');\n  }\n\n  if (update == null || typeof update !== 'object') {\n    throw new error_1.MongoInvalidArgumentError('Document must be a valid JavaScript object');\n  }\n\n  const op = {\n    q: filter,\n    u: update\n  };\n\n  if (typeof options.upsert === 'boolean') {\n    op.upsert = options.upsert;\n  }\n\n  if (options.multi) {\n    op.multi = options.multi;\n  }\n\n  if (options.hint) {\n    op.hint = options.hint;\n  }\n\n  if (options.arrayFilters) {\n    op.arrayFilters = options.arrayFilters;\n  }\n\n  if (options.collation) {\n    op.collation = options.collation;\n  }\n\n  return op;\n}\n\nexports.makeUpdateStatement = makeUpdateStatement;\noperation_1.defineAspects(UpdateOperation, [operation_1.Aspect.RETRYABLE, operation_1.Aspect.WRITE_OPERATION, operation_1.Aspect.SKIP_COLLATION]);\noperation_1.defineAspects(UpdateOneOperation, [operation_1.Aspect.RETRYABLE, operation_1.Aspect.WRITE_OPERATION, operation_1.Aspect.EXPLAINABLE, operation_1.Aspect.SKIP_COLLATION]);\noperation_1.defineAspects(UpdateManyOperation, [operation_1.Aspect.WRITE_OPERATION, operation_1.Aspect.EXPLAINABLE, operation_1.Aspect.SKIP_COLLATION]);\noperation_1.defineAspects(ReplaceOneOperation, [operation_1.Aspect.RETRYABLE, operation_1.Aspect.WRITE_OPERATION, operation_1.Aspect.SKIP_COLLATION]);","map":{"version":3,"sources":["../../src/operations/update.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeUpdateStatement = exports.ReplaceOneOperation = exports.UpdateManyOperation = exports.UpdateOneOperation = exports.UpdateOperation = void 0;\nconst operation_1 = require(\"./operation\");\nconst utils_1 = require(\"../utils\");\nconst command_1 = require(\"./command\");\nconst error_1 = require(\"../error\");\n/** @internal */\nclass UpdateOperation extends command_1.CommandOperation {\n    constructor(ns, statements, options) {\n        super(undefined, options);\n        this.options = options;\n        this.ns = ns;\n        this.statements = statements;\n    }\n    get canRetryWrite() {\n        if (super.canRetryWrite === false) {\n            return false;\n        }\n        return this.statements.every(op => op.multi == null || op.multi === false);\n    }\n    execute(server, session, callback) {\n        var _a;\n        const options = (_a = this.options) !== null && _a !== void 0 ? _a : {};\n        const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n        const command = {\n            update: this.ns.collection,\n            updates: this.statements,\n            ordered\n        };\n        if (typeof options.bypassDocumentValidation === 'boolean') {\n            command.bypassDocumentValidation = options.bypassDocumentValidation;\n        }\n        if (options.let) {\n            command.let = options.let;\n        }\n        const statementWithCollation = this.statements.find(statement => !!statement.collation);\n        if (utils_1.collationNotSupported(server, options) ||\n            (statementWithCollation && utils_1.collationNotSupported(server, statementWithCollation))) {\n            callback(new error_1.MongoCompatibilityError(`Server ${server.name} does not support collation`));\n            return;\n        }\n        const unacknowledgedWrite = this.writeConcern && this.writeConcern.w === 0;\n        if (unacknowledgedWrite || utils_1.maxWireVersion(server) < 5) {\n            if (this.statements.find((o) => o.hint)) {\n                callback(new error_1.MongoCompatibilityError(`Servers < 3.4 do not support hint on update`));\n                return;\n            }\n        }\n        if (this.explain && utils_1.maxWireVersion(server) < 3) {\n            callback(new error_1.MongoCompatibilityError(`Server ${server.name} does not support explain on update`));\n            return;\n        }\n        if (this.statements.some(statement => !!statement.arrayFilters) && utils_1.maxWireVersion(server) < 6) {\n            callback(new error_1.MongoCompatibilityError('Option \"arrayFilters\" is only supported on MongoDB 3.6+'));\n            return;\n        }\n        super.executeCommand(server, session, command, callback);\n    }\n}\nexports.UpdateOperation = UpdateOperation;\n/** @internal */\nclass UpdateOneOperation extends UpdateOperation {\n    constructor(collection, filter, update, options) {\n        super(collection.s.namespace, [makeUpdateStatement(filter, update, { ...options, multi: false })], options);\n        if (!utils_1.hasAtomicOperators(update)) {\n            throw new error_1.MongoInvalidArgumentError('Update document requires atomic operators');\n        }\n    }\n    execute(server, session, callback) {\n        super.execute(server, session, (err, res) => {\n            var _a, _b;\n            if (err || !res)\n                return callback(err);\n            if (this.explain != null)\n                return callback(undefined, res);\n            if (res.code)\n                return callback(new error_1.MongoServerError(res));\n            if (res.writeErrors)\n                return callback(new error_1.MongoServerError(res.writeErrors[0]));\n            callback(undefined, {\n                acknowledged: (_b = ((_a = this.writeConcern) === null || _a === void 0 ? void 0 : _a.w) !== 0) !== null && _b !== void 0 ? _b : true,\n                modifiedCount: res.nModified != null ? res.nModified : res.n,\n                upsertedId: Array.isArray(res.upserted) && res.upserted.length > 0 ? res.upserted[0]._id : null,\n                upsertedCount: Array.isArray(res.upserted) && res.upserted.length ? res.upserted.length : 0,\n                matchedCount: Array.isArray(res.upserted) && res.upserted.length > 0 ? 0 : res.n\n            });\n        });\n    }\n}\nexports.UpdateOneOperation = UpdateOneOperation;\n/** @internal */\nclass UpdateManyOperation extends UpdateOperation {\n    constructor(collection, filter, update, options) {\n        super(collection.s.namespace, [makeUpdateStatement(filter, update, { ...options, multi: true })], options);\n        if (!utils_1.hasAtomicOperators(update)) {\n            throw new error_1.MongoInvalidArgumentError('Update document requires atomic operators');\n        }\n    }\n    execute(server, session, callback) {\n        super.execute(server, session, (err, res) => {\n            var _a, _b;\n            if (err || !res)\n                return callback(err);\n            if (this.explain != null)\n                return callback(undefined, res);\n            if (res.code)\n                return callback(new error_1.MongoServerError(res));\n            if (res.writeErrors)\n                return callback(new error_1.MongoServerError(res.writeErrors[0]));\n            callback(undefined, {\n                acknowledged: (_b = ((_a = this.writeConcern) === null || _a === void 0 ? void 0 : _a.w) !== 0) !== null && _b !== void 0 ? _b : true,\n                modifiedCount: res.nModified != null ? res.nModified : res.n,\n                upsertedId: Array.isArray(res.upserted) && res.upserted.length > 0 ? res.upserted[0]._id : null,\n                upsertedCount: Array.isArray(res.upserted) && res.upserted.length ? res.upserted.length : 0,\n                matchedCount: Array.isArray(res.upserted) && res.upserted.length > 0 ? 0 : res.n\n            });\n        });\n    }\n}\nexports.UpdateManyOperation = UpdateManyOperation;\n/** @internal */\nclass ReplaceOneOperation extends UpdateOperation {\n    constructor(collection, filter, replacement, options) {\n        super(collection.s.namespace, [makeUpdateStatement(filter, replacement, { ...options, multi: false })], options);\n        if (utils_1.hasAtomicOperators(replacement)) {\n            throw new error_1.MongoInvalidArgumentError('Replacement document must not contain atomic operators');\n        }\n    }\n    execute(server, session, callback) {\n        super.execute(server, session, (err, res) => {\n            var _a, _b;\n            if (err || !res)\n                return callback(err);\n            if (this.explain != null)\n                return callback(undefined, res);\n            if (res.code)\n                return callback(new error_1.MongoServerError(res));\n            if (res.writeErrors)\n                return callback(new error_1.MongoServerError(res.writeErrors[0]));\n            callback(undefined, {\n                acknowledged: (_b = ((_a = this.writeConcern) === null || _a === void 0 ? void 0 : _a.w) !== 0) !== null && _b !== void 0 ? _b : true,\n                modifiedCount: res.nModified != null ? res.nModified : res.n,\n                upsertedId: Array.isArray(res.upserted) && res.upserted.length > 0 ? res.upserted[0]._id : null,\n                upsertedCount: Array.isArray(res.upserted) && res.upserted.length ? res.upserted.length : 0,\n                matchedCount: Array.isArray(res.upserted) && res.upserted.length > 0 ? 0 : res.n\n            });\n        });\n    }\n}\nexports.ReplaceOneOperation = ReplaceOneOperation;\nfunction makeUpdateStatement(filter, update, options) {\n    if (filter == null || typeof filter !== 'object') {\n        throw new error_1.MongoInvalidArgumentError('Selector must be a valid JavaScript object');\n    }\n    if (update == null || typeof update !== 'object') {\n        throw new error_1.MongoInvalidArgumentError('Document must be a valid JavaScript object');\n    }\n    const op = { q: filter, u: update };\n    if (typeof options.upsert === 'boolean') {\n        op.upsert = options.upsert;\n    }\n    if (options.multi) {\n        op.multi = options.multi;\n    }\n    if (options.hint) {\n        op.hint = options.hint;\n    }\n    if (options.arrayFilters) {\n        op.arrayFilters = options.arrayFilters;\n    }\n    if (options.collation) {\n        op.collation = options.collation;\n    }\n    return op;\n}\nexports.makeUpdateStatement = makeUpdateStatement;\noperation_1.defineAspects(UpdateOperation, [operation_1.Aspect.RETRYABLE, operation_1.Aspect.WRITE_OPERATION, operation_1.Aspect.SKIP_COLLATION]);\noperation_1.defineAspects(UpdateOneOperation, [\n    operation_1.Aspect.RETRYABLE,\n    operation_1.Aspect.WRITE_OPERATION,\n    operation_1.Aspect.EXPLAINABLE,\n    operation_1.Aspect.SKIP_COLLATION\n]);\noperation_1.defineAspects(UpdateManyOperation, [\n    operation_1.Aspect.WRITE_OPERATION,\n    operation_1.Aspect.EXPLAINABLE,\n    operation_1.Aspect.SKIP_COLLATION\n]);\noperation_1.defineAspects(ReplaceOneOperation, [\n    operation_1.Aspect.RETRYABLE,\n    operation_1.Aspect.WRITE_OPERATION,\n    operation_1.Aspect.SKIP_COLLATION\n]);\n//# sourceMappingURL=update.js.map"]},"metadata":{},"sourceType":"script"}