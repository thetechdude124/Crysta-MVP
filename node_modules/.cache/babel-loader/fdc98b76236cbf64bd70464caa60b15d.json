{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mindf\\\\Documents\\\\Professional\\\\WORK\\\\CRYSTA\\\\MVP\\\\CODE\\\\React-App\\\\crysta_mvp\\\\src\\\\pages\\\\EnergyGraph.js\";\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { MongoClient } from 'mongodb';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst uri = \"mongodb+srv://crysta:3.14159265e@crysta-database.qrvsc.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\nconst client = new MongoClient(uri);\nclient.connect();\nconsole.log(\"Connected\");\n\nclass EnergyGraph extends Component {\n  constructorWillMount() {\n    this.getGraphData();\n  }\n\n  getGraphData() {\n    var get_request = axios.get('http://127.0.0.1:28017/databaseName/collectionName/').then(function (response) {\n      return response.data;\n    }).catch(function (response) {\n      console.log(response);\n    }); // request.addEventListener('load', () => {\n    //     console.log(request.responseText)\n    // })\n    // request.open('GET', 'http://localhost:3010')\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      energygraphData: {\n        labels: ['8 AM', '9 AM', '10 AM', '11 AM', '12 PM', '1 PM', '2 PM', '3 PM', '4 PM', '5 PM', '6 PM', '7 PM', '8 PM', '9 PM', '10 PM', '11 PM', '12 AM'],\n        datasets: [{\n          label: 'Task Switches',\n          // data: [\n          //     11,\n          //     16,\n          //     18,\n          //     16,\n          //     14,\n          //     9,\n          //     2,\n          //     3,\n          //     4,\n          //     12,\n          //     18,\n          //     22,\n          //     24,\n          //     26,\n          //     23,\n          //     22,\n          //     18\n          // ],\n          data: this.getGraphData,\n          borderWidth: 8,\n          borderColor: \"rgba(20, 177, 183, 0.4)\",\n          pointBackgroundColor: \"rgb(77, 77, 77, 1)\",\n          tension: 0.4,\n          pointRadius: 8\n        }]\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"energy-graph\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: this.state.energygraphData,\n        width: 1580,\n        height: 750,\n        options: {\n          maintainAspectRatio: true,\n          responsive: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default EnergyGraph;","map":{"version":3,"sources":["C:/Users/mindf/Documents/Professional/WORK/CRYSTA/MVP/CODE/React-App/crysta_mvp/src/pages/EnergyGraph.js"],"names":["React","Component","Line","MongoClient","axios","uri","client","connect","console","log","EnergyGraph","constructorWillMount","getGraphData","get_request","get","then","response","data","catch","constructor","props","state","energygraphData","labels","datasets","label","borderWidth","borderColor","pointBackgroundColor","tension","pointRadius","render","maintainAspectRatio","responsive"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAG,GAAG,gHAAZ;AACA,MAAMC,MAAM,GAAG,IAAIH,WAAJ,CAAgBE,GAAhB,CAAf;AACAC,MAAM,CAACC,OAAP;AACAC,OAAO,CAACC,GAAR,CAAY,WAAZ;;AAEA,MAAMC,WAAN,SAA0BT,SAA1B,CAAmC;AAE/BU,EAAAA,oBAAoB,GAAE;AAClB,SAAKC,YAAL;AACH;;AAEDA,EAAAA,YAAY,GAAG;AACX,QAAIC,WAAW,GAAGT,KAAK,CAACU,GAAN,CAAU,qDAAV,EACbC,IADa,CACR,UAAUC,QAAV,EAAoB;AACtB,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHa,EAIbC,KAJa,CAIP,UAAUF,QAAV,EAAoB;AACvBR,MAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACH,KANa,CAAlB,CADW,CASX;AACA;AACA;AACA;AACH;;AAEDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,eAAe,EAAE;AAEbC,QAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0B,OAA1B,EAAmC,OAAnC,EAA4C,MAA5C,EAAoD,MAApD,EAA4D,MAA5D,EAAoE,MAApE,EAA4E,MAA5E,EAAoF,MAApF,EACR,MADQ,EACA,MADA,EACQ,MADR,EACgB,OADhB,EACyB,OADzB,EACkC,OADlC,CAFK;AAKbC,QAAAA,QAAQ,EAAE,CACN;AACIC,UAAAA,KAAK,EAAE,eADX;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAR,UAAAA,IAAI,EAAE,KAAKL,YArBf;AAsBIc,UAAAA,WAAW,EAAE,CAtBjB;AAuBIC,UAAAA,WAAW,EAAE,yBAvBjB;AAwBIC,UAAAA,oBAAoB,EAAE,oBAxB1B;AAyBIC,UAAAA,OAAO,EAAE,GAzBb;AA0BIC,UAAAA,WAAW,EAAE;AA1BjB,SADM;AALG;AADR,KAAb;AAsCH;;AAEDC,EAAAA,MAAM,GAAE;AAEJ,wBACI;AAAK,MAAA,SAAS,EAAG,cAAjB;AAAA,6BACI,QAAC,IAAD;AACI,QAAA,IAAI,EAAI,KAAKV,KAAL,CAAWC,eADvB;AAEI,QAAA,KAAK,EAAI,IAFb;AAGI,QAAA,MAAM,EAAI,GAHd;AAII,QAAA,OAAO,EAAI;AACPU,UAAAA,mBAAmB,EAAE,IADd;AAEPC,UAAAA,UAAU,EAAE;AAFL;AAJf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AA9E8B;;AAiFnC,eAAevB,WAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport { MongoClient } from 'mongodb';\r\nimport axios from 'axios';\r\n\r\nconst uri = \"mongodb+srv://crysta:3.14159265e@crysta-database.qrvsc.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\r\nconst client = new MongoClient(uri);\r\nclient.connect();\r\nconsole.log(\"Connected\");\r\n\r\nclass EnergyGraph extends Component{\r\n\r\n    constructorWillMount(){\r\n        this.getGraphData()\r\n    }\r\n\r\n    getGraphData() {\r\n        var get_request = axios.get('http://127.0.0.1:28017/databaseName/collectionName/')\r\n            .then(function (response) {\r\n                return response.data;\r\n            })\r\n            .catch(function (response) {\r\n                console.log(response);\r\n            });\r\n\r\n        // request.addEventListener('load', () => {\r\n        //     console.log(request.responseText)\r\n        // })\r\n        // request.open('GET', 'http://localhost:3010')\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            energygraphData: {\r\n\r\n                labels: ['8 AM', '9 AM', '10 AM', '11 AM', '12 PM', '1 PM', '2 PM', '3 PM', '4 PM', '5 PM', '6 PM', \r\n                '7 PM', '8 PM', '9 PM', '10 PM', '11 PM', '12 AM'],\r\n\r\n                datasets: [\r\n                    {\r\n                        label: 'Task Switches',\r\n                        // data: [\r\n                        //     11,\r\n                        //     16,\r\n                        //     18,\r\n                        //     16,\r\n                        //     14,\r\n                        //     9,\r\n                        //     2,\r\n                        //     3,\r\n                        //     4,\r\n                        //     12,\r\n                        //     18,\r\n                        //     22,\r\n                        //     24,\r\n                        //     26,\r\n                        //     23,\r\n                        //     22,\r\n                        //     18\r\n                        // ],\r\n                        data: this.getGraphData,\r\n                        borderWidth: 8,\r\n                        borderColor: \"rgba(20, 177, 183, 0.4)\",\r\n                        pointBackgroundColor: \"rgb(77, 77, 77, 1)\",\r\n                        tension: 0.4,\r\n                        pointRadius: 8\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div className = \"energy-graph\">\r\n                <Line\r\n                    data = {this.state.energygraphData}\r\n                    width = {1580}\r\n                    height = {750}\r\n                    options = {{\r\n                        maintainAspectRatio: true,\r\n                        responsive: true,\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EnergyGraph;"]},"metadata":{},"sourceType":"module"}