{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CountOperation = void 0;\n\nconst operation_1 = require(\"./operation\");\n\nconst command_1 = require(\"./command\");\n/** @internal */\n\n\nclass CountOperation extends command_1.CommandOperation {\n  constructor(namespace, filter, options) {\n    super({\n      s: {\n        namespace: namespace\n      }\n    }, options);\n    this.options = options;\n    this.collectionName = namespace.collection;\n    this.query = filter;\n  }\n\n  execute(server, session, callback) {\n    const options = this.options;\n    const cmd = {\n      count: this.collectionName,\n      query: this.query\n    };\n\n    if (typeof options.limit === 'number') {\n      cmd.limit = options.limit;\n    }\n\n    if (typeof options.skip === 'number') {\n      cmd.skip = options.skip;\n    }\n\n    if (options.hint != null) {\n      cmd.hint = options.hint;\n    }\n\n    if (typeof options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = options.maxTimeMS;\n    }\n\n    super.executeCommand(server, session, cmd, (err, result) => {\n      callback(err, result ? result.n : 0);\n    });\n  }\n\n}\n\nexports.CountOperation = CountOperation;\noperation_1.defineAspects(CountOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE]);","map":{"version":3,"sources":["../../src/operations/count.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;AAmBA;;;AACA,MAAa,cAAb,SAAoC,SAAA,CAAA,gBAApC,CAA4D;AAK1D,EAAA,WAAA,CAAY,SAAZ,EAAyC,MAAzC,EAA2D,OAA3D,EAAgF;AAC9E,UAAM;AAAE,MAAA,CAAC,EAAE;AAAE,QAAA,SAAS,EAAE;AAAb;AAAL,KAAN,EAAgE,OAAhE;AAEA,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,cAAL,GAAsB,SAAS,CAAC,UAAhC;AACA,SAAK,KAAL,GAAa,MAAb;AACD;;AAED,EAAA,OAAO,CAAC,MAAD,EAAiB,OAAjB,EAAyC,QAAzC,EAAmE;AACxE,UAAM,OAAO,GAAG,KAAK,OAArB;AACA,UAAM,GAAG,GAAa;AACpB,MAAA,KAAK,EAAE,KAAK,cADQ;AAEpB,MAAA,KAAK,EAAE,KAAK;AAFQ,KAAtB;;AAKA,QAAI,OAAO,OAAO,CAAC,KAAf,KAAyB,QAA7B,EAAuC;AACrC,MAAA,GAAG,CAAC,KAAJ,GAAY,OAAO,CAAC,KAApB;AACD;;AAED,QAAI,OAAO,OAAO,CAAC,IAAf,KAAwB,QAA5B,EAAsC;AACpC,MAAA,GAAG,CAAC,IAAJ,GAAW,OAAO,CAAC,IAAnB;AACD;;AAED,QAAI,OAAO,CAAC,IAAR,IAAgB,IAApB,EAA0B;AACxB,MAAA,GAAG,CAAC,IAAJ,GAAW,OAAO,CAAC,IAAnB;AACD;;AAED,QAAI,OAAO,OAAO,CAAC,SAAf,KAA6B,QAAjC,EAA2C;AACzC,MAAA,GAAG,CAAC,SAAJ,GAAgB,OAAO,CAAC,SAAxB;AACD;;AAED,UAAM,cAAN,CAAqB,MAArB,EAA6B,OAA7B,EAAsC,GAAtC,EAA2C,CAAC,GAAD,EAAM,MAAN,KAAgB;AACzD,MAAA,QAAQ,CAAC,GAAD,EAAM,MAAM,GAAG,MAAM,CAAC,CAAV,GAAc,CAA1B,CAAR;AACD,KAFD;AAGD;;AAvCyD;;AAA5D,OAAA,CAAA,cAAA,GAAA,cAAA;AA0CA,WAAA,CAAA,aAAA,CAAc,cAAd,EAA8B,CAAC,WAAA,CAAA,MAAA,CAAO,cAAR,EAAwB,WAAA,CAAA,MAAA,CAAO,SAA/B,CAA9B","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CountOperation = void 0;\nconst operation_1 = require(\"./operation\");\nconst command_1 = require(\"./command\");\n/** @internal */\nclass CountOperation extends command_1.CommandOperation {\n    constructor(namespace, filter, options) {\n        super({ s: { namespace: namespace } }, options);\n        this.options = options;\n        this.collectionName = namespace.collection;\n        this.query = filter;\n    }\n    execute(server, session, callback) {\n        const options = this.options;\n        const cmd = {\n            count: this.collectionName,\n            query: this.query\n        };\n        if (typeof options.limit === 'number') {\n            cmd.limit = options.limit;\n        }\n        if (typeof options.skip === 'number') {\n            cmd.skip = options.skip;\n        }\n        if (options.hint != null) {\n            cmd.hint = options.hint;\n        }\n        if (typeof options.maxTimeMS === 'number') {\n            cmd.maxTimeMS = options.maxTimeMS;\n        }\n        super.executeCommand(server, session, cmd, (err, result) => {\n            callback(err, result ? result.n : 0);\n        });\n    }\n}\nexports.CountOperation = CountOperation;\noperation_1.defineAspects(CountOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE]);\n//# sourceMappingURL=count.js.map"]},"metadata":{},"sourceType":"script"}