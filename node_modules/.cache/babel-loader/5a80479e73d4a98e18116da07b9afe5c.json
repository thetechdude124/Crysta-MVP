{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConnectionPoolMetrics = void 0;\n/** @internal */\n\nclass ConnectionPoolMetrics {\n  constructor() {\n    this.txnConnections = 0;\n    this.cursorConnections = 0;\n    this.otherConnections = 0;\n  }\n  /**\n   * Mark a connection as pinned for a specific operation.\n   */\n\n\n  markPinned(pinType) {\n    if (pinType === ConnectionPoolMetrics.TXN) {\n      this.txnConnections += 1;\n    } else if (pinType === ConnectionPoolMetrics.CURSOR) {\n      this.cursorConnections += 1;\n    } else {\n      this.otherConnections += 1;\n    }\n  }\n  /**\n   * Unmark a connection as pinned for an operation.\n   */\n\n\n  markUnpinned(pinType) {\n    if (pinType === ConnectionPoolMetrics.TXN) {\n      this.txnConnections -= 1;\n    } else if (pinType === ConnectionPoolMetrics.CURSOR) {\n      this.cursorConnections -= 1;\n    } else {\n      this.otherConnections -= 1;\n    }\n  }\n  /**\n   * Return information about the cmap metrics as a string.\n   */\n\n\n  info(maxPoolSize) {\n    return 'Timed out while checking out a connection from connection pool: ' + `maxPoolSize: ${maxPoolSize}, ` + `connections in use by cursors: ${this.cursorConnections}, ` + `connections in use by transactions: ${this.txnConnections}, ` + `connections in use by other operations: ${this.otherConnections}`;\n  }\n  /**\n   * Reset the metrics to the initial values.\n   */\n\n\n  reset() {\n    this.txnConnections = 0;\n    this.cursorConnections = 0;\n    this.otherConnections = 0;\n  }\n\n}\n\nexports.ConnectionPoolMetrics = ConnectionPoolMetrics;\nConnectionPoolMetrics.TXN = 'txn';\nConnectionPoolMetrics.CURSOR = 'cursor';\nConnectionPoolMetrics.OTHER = 'other';","map":{"version":3,"sources":["../../src/cmap/metrics.ts"],"names":[],"mappings":";;;;;;AAAA;;AACA,MAAa,qBAAb,CAAkC;AAAlC,EAAA,WAAA,GAAA;AAKE,SAAA,cAAA,GAAiB,CAAjB;AACA,SAAA,iBAAA,GAAoB,CAApB;AACA,SAAA,gBAAA,GAAmB,CAAnB;AAiDD;AA/CC;;AAEG;;;AACH,EAAA,UAAU,CAAC,OAAD,EAAgB;AACxB,QAAI,OAAO,KAAK,qBAAqB,CAAC,GAAtC,EAA2C;AACzC,WAAK,cAAL,IAAuB,CAAvB;AACD,KAFD,MAEO,IAAI,OAAO,KAAK,qBAAqB,CAAC,MAAtC,EAA8C;AACnD,WAAK,iBAAL,IAA0B,CAA1B;AACD,KAFM,MAEA;AACL,WAAK,gBAAL,IAAyB,CAAzB;AACD;AACF;AAED;;AAEG;;;AACH,EAAA,YAAY,CAAC,OAAD,EAAgB;AAC1B,QAAI,OAAO,KAAK,qBAAqB,CAAC,GAAtC,EAA2C;AACzC,WAAK,cAAL,IAAuB,CAAvB;AACD,KAFD,MAEO,IAAI,OAAO,KAAK,qBAAqB,CAAC,MAAtC,EAA8C;AACnD,WAAK,iBAAL,IAA0B,CAA1B;AACD,KAFM,MAEA;AACL,WAAK,gBAAL,IAAyB,CAAzB;AACD;AACF;AAED;;AAEG;;;AACH,EAAA,IAAI,CAAC,WAAD,EAAoB;AACtB,WACE,qEACA,gBAAgB,WAAW,IAD3B,GAEA,kCAAkC,KAAK,iBAAiB,IAFxD,GAGA,uCAAuC,KAAK,cAAc,IAH1D,GAIA,2CAA2C,KAAK,gBAAgB,EALlE;AAOD;AAED;;AAEG;;;AACH,EAAA,KAAK,GAAA;AACH,SAAK,cAAL,GAAsB,CAAtB;AACA,SAAK,iBAAL,GAAyB,CAAzB;AACA,SAAK,gBAAL,GAAwB,CAAxB;AACD;;AAvD+B;;AAAlC,OAAA,CAAA,qBAAA,GAAA,qBAAA;AACkB,qBAAA,CAAA,GAAA,GAAM,KAAN;AACA,qBAAA,CAAA,MAAA,GAAS,QAAT;AACA,qBAAA,CAAA,KAAA,GAAQ,OAAR","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionPoolMetrics = void 0;\n/** @internal */\nclass ConnectionPoolMetrics {\n    constructor() {\n        this.txnConnections = 0;\n        this.cursorConnections = 0;\n        this.otherConnections = 0;\n    }\n    /**\n     * Mark a connection as pinned for a specific operation.\n     */\n    markPinned(pinType) {\n        if (pinType === ConnectionPoolMetrics.TXN) {\n            this.txnConnections += 1;\n        }\n        else if (pinType === ConnectionPoolMetrics.CURSOR) {\n            this.cursorConnections += 1;\n        }\n        else {\n            this.otherConnections += 1;\n        }\n    }\n    /**\n     * Unmark a connection as pinned for an operation.\n     */\n    markUnpinned(pinType) {\n        if (pinType === ConnectionPoolMetrics.TXN) {\n            this.txnConnections -= 1;\n        }\n        else if (pinType === ConnectionPoolMetrics.CURSOR) {\n            this.cursorConnections -= 1;\n        }\n        else {\n            this.otherConnections -= 1;\n        }\n    }\n    /**\n     * Return information about the cmap metrics as a string.\n     */\n    info(maxPoolSize) {\n        return ('Timed out while checking out a connection from connection pool: ' +\n            `maxPoolSize: ${maxPoolSize}, ` +\n            `connections in use by cursors: ${this.cursorConnections}, ` +\n            `connections in use by transactions: ${this.txnConnections}, ` +\n            `connections in use by other operations: ${this.otherConnections}`);\n    }\n    /**\n     * Reset the metrics to the initial values.\n     */\n    reset() {\n        this.txnConnections = 0;\n        this.cursorConnections = 0;\n        this.otherConnections = 0;\n    }\n}\nexports.ConnectionPoolMetrics = ConnectionPoolMetrics;\nConnectionPoolMetrics.TXN = 'txn';\nConnectionPoolMetrics.CURSOR = 'cursor';\nConnectionPoolMetrics.OTHER = 'other';\n//# sourceMappingURL=metrics.js.map"]},"metadata":{},"sourceType":"script"}