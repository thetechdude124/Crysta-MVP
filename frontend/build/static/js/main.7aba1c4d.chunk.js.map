{"version":3,"sources":["components/SideMenuData.js","components/CrystaLogo.svg","components/SideMenu.js","components/login-button.js","Login.js","pages/Calendar.js","pages/Tasks.js","pages/EnergyGraph.js","pages/Energy.js","components/logout-button.js","Logout.js","App.js","index.js"],"names":["SideMenuData","title","path","icon","cName","SideMenu","useState","sidebar","setSidebar","showSidebar","Provider","value","color","to","className","class","onClick","src","CrystaLogo","alt","map","item","index","LoginButton","loginWithRedirect","useAuth0","Login","Calendar","Tasks","EnergyGraph","props","getDataFromDb","state","mongo_data","task_switches","labels","graphData","this","getGraphData","IntervalIsSet","interval","setInterval","setState","clearInterval","axios","get","then","response","data","data_array","Object","values","div_scores","forEach","push","hour","divided_energy_score","console","log","datasets","label","borderWidth","borderColor","pointBackgroundColor","tension","pointRadius","legend","position","width","height","options","maintainAspectRatio","responsive","Component","defaultProps","legendPosition","Energy","prod_div","task_display","distracting_display","time_display","unscaled_display","productivetime","setProductivetime","creativetime","setCreativetime","taskswitches","setTaskswitches","distractingsites","setDistractingsites","timepertask","setTimepertask","unscaledscore","setUnscaledscore","average","arr","reduce","a","b","length","unscaled_scores","average_task_times","n_distracting_tasks","unscaled_energy_score","average_task_time","distracting_tasks","toFixed","min_score","Math","min","min_idx","indexOf","max_score","max","max_idx","undefined","LogoutButton","logout","returnTo","window","location","origin","Logout","App","user","isAuthenticated","dataObject","username","name","post","res","catch","error","exact","component","ReactDOM","render","domain","clientId","redirectUri","document","getElementById"],"mappings":"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","file":"static/js/main.7aba1c4d.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as Io5cons from 'react-icons/io5';\r\nimport * as BsIcons from 'react-icons/bs';\r\nimport * as BIcons from 'react-icons/bi';\r\n\r\n\r\nexport const SideMenuData = [\r\n    {\r\n        title: 'CALENDAR',\r\n        path: '/pages/Calendar',\r\n        icon: <BsIcons.BsCalendar/>, \r\n        cName: 'side-menu-text'\r\n    },\r\n    {\r\n        title: 'TASKS',\r\n        path: '/pages/Tasks',\r\n        icon: <Io5cons.IoCheckmarkSharp/>,\r\n        cName: 'side-menu-text'\r\n    },\r\n    {\r\n        title: 'ENERGY',\r\n        path: '/pages/Energy',\r\n        icon: <BsIcons.BsGraphUp/>, \r\n        cName: 'side-menu-text'\r\n    },\r\n    {\r\n        title: 'LOG OUT',\r\n        path: '/pages/Logout',\r\n        icon: <BIcons.BiExit/>, \r\n        cName: 'side-menu-text'\r\n    }\r\n]","export default __webpack_public_path__ + \"static/media/CrystaLogo.3734c1e1.svg\";","import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as Iocons from 'react-icons/io';\r\nimport { SideMenuData } from './SideMenuData';\r\nimport './SideMenu.css';\r\nimport { IconContext } from 'react-icons';\r\nimport CrystaLogo from './CrystaLogo.svg';\r\n\r\nfunction SideMenu() {\r\n    const [sidebar, setSidebar] = useState(false);\r\n\r\n    const showSidebar = () => setSidebar(!sidebar);\r\n    return (\r\n        <>\r\n            <IconContext.Provider value={{ color: '#fff' }}>\r\n                <Link to=\"#\" className = 'open-menu-arrow' class = \"flex m-3 text-2xl flex hover:bg-green-200 rounded-md z-40 fixed\">\r\n                    <Iocons.IoIosArrowForward onClick ={showSidebar}/>\r\n                </Link>\r\n                {/* <div className = 'SideMenu' class = \" z-50 fixed flex items-center bg-gray-50 shadow-md h-9 w-screen rounded-r-lg\">\r\n\r\n                </div> */}\r\n            </IconContext.Provider>\r\n            \r\n            <nav className={sidebar ? \"side-menu active\" : 'side-menu'}>\r\n                <ul className = 'side-menu-items' onClick = {showSidebar}>\r\n                    <li className = \"side-menu-toggle\">\r\n                        <Link to = \"#\" className = 'open-menu-arrow' class = \"text-2xl -pl3 hover:bg-green-200 rounded-md\">\r\n                            <Iocons.IoIosArrowBack />\r\n                        </Link> \r\n                    </li>\r\n                    <div className = \"crysta-logo\" class = \"ml-10 -mt-14 mb-5\">\r\n                        <img src = {CrystaLogo} alt = \"CrystaLogo\" class = \"content-between\"/>\r\n                    </div>\r\n                    {SideMenuData.map((item, index) => {\r\n                        return (\r\n                            <li key={index} className={item.cName} class = \"flex flex-col text-xl pl-3 pt-9 font-semibold hover:bg-green-200 rounded-lg -pt-5 pb-6 pl-20 pr-16\">\r\n                                <Link to = {item.path}> \r\n                                    <div class = \"-ml-9 -mb-6\">{item.icon}</div>\r\n                                    <span>{item.title}</span>\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>    \r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideMenu;\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n  return (\r\n    <button\r\n      className=\"btn btn-primary btn-block\" class = \"font-medium text-gray-50 h-12 w-40 bg-green-400 rounded-3xl hover:bg-blue-400 transition duration-250 ease-linear\"\r\n      onClick={() => loginWithRedirect()}\r\n    >\r\n      Log In | Sign Up\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LoginButton;","import React from \"react\";\r\nimport LoginButton from \"./components/login-button\";\r\nimport CrystaLogo from './components/CrystaLogo.svg';\r\n\r\nconst Login = () => (\r\n  <div className = \"NavContainer\" class = 'flex flex-col justify-center items-center bg-gradient-to-r from-blue-400 via-green-300 to-green-200 h-screen w-screen'>\r\n    <div class = \"flex flex-col justify-center items-center bg-gray-50 h-1/3 w-1/3 rounded-3xl shadow-lg \">\r\n      <div className = \"crysta-logo\" class = \"\">\r\n        <img src = {CrystaLogo} alt = \"CrystaLogo\"/>\r\n      </div>\r\n\r\n      <p class = \"font-normal text-center mb-7 mt-7 mr-5 ml-5 text-xl\">Glad to see you! Make sure you've downloaded our energy tracker first.</p>\r\n\r\n      <div className=\"flex justify-center\">\r\n        <LoginButton/>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nfunction Calendar() {\r\n  return (\r\n    <div className='Calendar' class = \"flex items-center justify-center bg-gradient-to-r from-blue-400 via-green-300 to-green-200 h-screen \">\r\n      <h1 class = \"fixed text-black font-bold text-8xl\">📅Calendar.</h1>\r\n      <h1 class = \"mt-40 text-white font-semibold text-2xl\">Coming soon in a later release. In the meanwhile, check out our weekly newsletter for updates!</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calendar;","import React from 'react';\r\n\r\nfunction Tasks() {\r\n  return (\r\n    <div className='Tasks' class = \"flex items-center justify-center bg-gradient-to-r from-blue-400 via-green-300 to-green-200 h-screen\">\r\n      <h1 class = \"fixed text-black font-bold text-8xl\">✔️Tasks.</h1>\r\n      <h1 class = \"mt-40 text-white font-semibold text-2xl\">Coming soon in a later release. In the meanwhile, check out our weekly newsletter for updates!</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tasks;","import React, {Component, useState, useEffect} from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport axios from 'axios';\r\n\r\n// const uri = \"mongodb+srv://crysta:3.14159265e@crysta-database.qrvsc.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\r\n// const client = new MongoClient(uri);\r\n// client.connect();\r\n// console.log(\"Connected\");\r\n\r\nclass EnergyGraph extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            mongo_data: [],\r\n            task_switches: [],\r\n            labels: [],\r\n            graphData:props.graphData\r\n        }\r\n    }\r\n\r\n    static defaultProps = {\r\n        legendPosition: 'bottom'\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.getGraphData();\r\n        this.getDataFromDb();\r\n        if (!this.state.IntervalIsSet) {\r\n            let interval = setInterval(this.getDataFromDb, 10000);\r\n            this.setState({ IntervalIsSet : interval});\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.IntervalIsSet) {\r\n            clearInterval(this.state.IntervalIsSet);\r\n            this.setState({ IntervalIsSet : null });\r\n        }\r\n    }\r\n\r\n    getDataFromDb = () => {\r\n    //     // fetch('http://localhost:3001/api/getData').then(data => {\r\n    //     //     const token = data.data;\r\n    //     //     console.log(token);\r\n    //     //     let task_switches = [];\r\n    //     //     let labels = [];\r\n    //     //     token.forEach(entry => {\r\n    //     //         labels.push(entry.hour);\r\n    //     //         task_switches.push(entry.task_switches);\r\n    //     //     });\r\n    //     //     console.log(task_switches);\r\n    //     //     console.log(labels);\r\n    //     // });  \r\n\r\n    //     axios.get('http://localhost:3001/api/getData').then((response) =>{\r\n    //         var data = response.data;\r\n    //         const data_values = Object.values(data);\r\n    //         const data_array = data_values[1];\r\n    //         var task_switches = [];\r\n    //         var labels = [];\r\n    //         this.setState({ mongo_data: data_array});\r\n    //         data_array.forEach(data_array => {\r\n    //             labels.push(data_array.hour);\r\n    //             task_switches.push(data_array.task_switches);\r\n    //         })\r\n    //         console.log(task_switches);\r\n    //         console.log(labels);\r\n    //         console.log(\"Received task_switches!\");\r\n    //         console.log(data_array);\r\n    //     })\r\n    //     // .catch(() => {\r\n    //     //     alert('There seems to be an error.');\r\n    //     // });\r\n    }\r\n\r\n\r\n    getGraphData() {\r\n        axios.get('/api/getData').then((response) =>{\r\n            var data = response.data;\r\n            const data_values = Object.values(data);\r\n            const data_array = data_values[1];\r\n            var div_scores = [];\r\n            var labels = [];\r\n            this.setState({ mongo_data: data_array});\r\n            data_array.forEach(data_array => {\r\n                labels.push(data_array.hour);\r\n                div_scores.push(data_array.divided_energy_score);\r\n            })\r\n            console.log(div_scores);\r\n            console.log(labels);\r\n            console.log(\"Received task_switches!\");\r\n            console.log(data_array);\r\n        \r\n            this.setState({\r\n                graphData: {\r\n\r\n                    // labels: ['8 AM', '9 AM', '10 AM', '11 AM', '12 PM', '1 PM', '2 PM', '3 PM', '4 PM', '5 PM', '6 PM', \r\n                    // '7 PM', '8 PM', '9 PM', '10 PM', '11 PM', '12 AM'],\r\n                    labels: labels,\r\n                    datasets: [\r\n                        {\r\n                            label: 'ENERGY SCORE',\r\n                            // data: [\r\n                            //     11,\r\n                            //     16,\r\n                            //     18,\r\n                            //     16,\r\n                            //     14,\r\n                            //     9,\r\n                            //     2,\r\n                            //     3,\r\n                            //     4,\r\n                            //     12,\r\n                            //     18,\r\n                            //     22,\r\n                            //     24,\r\n                            //     26,\r\n                            //     23,\r\n                            //     22,  \r\n                            //     18\r\n                            // ],\r\n                            data: div_scores,\r\n                            borderWidth: 8,\r\n                            borderColor: \"rgba(20, 177, 183, 0.4)\",\r\n                            pointBackgroundColor: \"rgb(77, 77, 77, 1)\",\r\n                            tension: 0.4,\r\n                            pointRadius: 8,\r\n                            legend: {\r\n                                position: 'bottom'\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            });\r\n        });  \r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div className = \"energy-graph\">\r\n                <Line\r\n                    data = {this.state.graphData}\r\n                    width = {1580}\r\n                    height = {1010}\r\n                    options = {{\r\n                        maintainAspectRatio: true,\r\n                        responsive: true,\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EnergyGraph;","import React, { useState } from 'react';\r\nimport './Energy.css';\r\nimport EnergyGraph from './EnergyGraph'\r\nimport axios from 'axios';\r\n\r\nfunction Energy() {\r\n\r\n    const [productivetime, setProductivetime] = useState();\r\n    const [creativetime, setCreativetime] = useState(); \r\n    const [taskswitches, setTaskswitches] = useState();\r\n    const [distractingsites, setDistractingsites]  = useState();\r\n    const [timepertask, setTimepertask] = useState();\r\n    const [unscaledscore, setUnscaledscore] = useState();\r\n\r\n    const average = arr => arr.reduce((a,b) => a + b, 0) / arr.length;\r\n\r\n    axios.get('/api/getData').then((response) =>{\r\n        var data = response.data;\r\n        const data_values = Object.values(data);\r\n        const data_array = data_values[1];\r\n        var task_switches = [];\r\n        var labels = [];\r\n        var div_scores = [];\r\n        var unscaled_scores = [];\r\n        var average_task_times = [];\r\n        var n_distracting_tasks = [];\r\n\r\n        // this.setState({ mongo_data: data_array});\r\n\r\n        data_array.forEach(data_array => {\r\n            labels.push(data_array.hour);\r\n            task_switches.push(data_array.task_switches);\r\n            div_scores.push(data_array.divided_energy_score);\r\n            unscaled_scores.push(data_array.unscaled_energy_score);\r\n            average_task_times.push(data_array.average_task_time);\r\n            n_distracting_tasks.push(data_array.distracting_tasks);\r\n        });\r\n        \r\n        setTaskswitches(average(task_switches).toFixed(0));\r\n        //Finding the min and max of the div_scores array, to find the most creative and productive times\r\n        var min_score = Math.min(...div_scores);\r\n        var min_idx = div_scores.indexOf(min_score);\r\n\r\n        var max_score = Math.max(...div_scores);\r\n        var max_idx = div_scores.indexOf(max_score);\r\n\r\n        setCreativetime(labels[min_idx]);\r\n        setProductivetime(labels[max_idx]);\r\n        \r\n        //Distracting Tasks - average\r\n        setDistractingsites(average(n_distracting_tasks).toFixed(0))\r\n        //Average of Average Task Times\r\n        setTimepertask(average(average_task_times).toFixed(0))\r\n        //Average of Unscaled Scores\r\n        setUnscaledscore(average(unscaled_scores).toFixed(0))\r\n    });\r\n\r\n\r\n    let prod_div;\r\n    let task_display;\r\n    let distracting_display;\r\n    let time_display;\r\n    let unscaled_display;\r\n\r\n    if (productivetime === undefined) {\r\n        prod_div = <div className = 'most-productive-time' class = 'text-sm w-11/12 mt-4 font-light'>This dashboard will be filled automatically every hour - and will get more accurate as you continue to use the Crysta energy tracker!</div>;\r\n    } else {\r\n        prod_div = <div className = 'most-productive-time' class = 'text-3xl mt-4 font-light'>{productivetime}</div>;\r\n    }\r\n\r\n    if (taskswitches == 'NaN') {\r\n        task_display = <div class = \"text-4xl font-light mb-3\">0</div>;\r\n    } else {\r\n        task_display = <div class = \"text-4xl font-light mb-3\">{taskswitches}</div>;\r\n    }\r\n\r\n    if (distractingsites === 'NaN') {\r\n        distracting_display = <div class = \"text-4xl font-light mb-3\">0</div>;\r\n    } else {\r\n        distracting_display = <div class = \"text-4xl font-light mb-3\">{distractingsites}</div>;\r\n    }\r\n\r\n    if (timepertask === 'NaN') {\r\n        time_display = <div class = \"text-4xl font-light mb-3\">0</div>;\r\n    } else {\r\n        time_display = <div class = \"text-4xl font-light mb-3\">{timepertask}</div>;\r\n    }\r\n\r\n    if (unscaledscore === 'NaN') {\r\n        unscaled_display = <div class = \"text-4xl font-light mb-3\">0</div>;\r\n    } else {\r\n        unscaled_display = <div class = \"text-4xl font-light mb-3\">{unscaledscore}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className = \"container-energy\" class = \"flex flex-col top-0 justify-items-center bg-gradient-to-r from-blue-400 via-green-300 to-green-200 h-screen w-screen\">\r\n            <div className = \"copyright\" class = \"text-right mt-3 mr-5 text-sm font-semibold text-black\">Copyright Crysta 2021</div>\r\n            <div className = \"insights-energy-container\" class = \"flex h-5/6 w-5/6 m-auto\">\r\n                <div className = \"insights-menu\" class = \"flex flex-col text-center bg-gray-50 shadow-md rounded-3xl h-full w-3/12 mr-8 m-auto items-center\">\r\n                    <div className = \"energy-level-heading\" class = \"flex bg-gradient-to-r from-blue-400 via-blue-400 to-green-300 h-8 w-11/12 rounded-3xl mt-2.5 justify-center\">\r\n                        <p class = \"text-white mt-1 font-semibold text-base\">INSIGHTS</p> \r\n                    </div>\r\n                    {prod_div}\r\n                    <div className = \"energy-level-heading\" class = \"flex bg-gray-200 h-8 w-11/12 rounded-3xl mt-8 justify-center \">\r\n                        <p class = \"text-blue-700 mt-1.5 font-semibold text-sm\">MOST PRODUCTIVE TIME</p> \r\n                    </div>\r\n                    <div className = \"energy-level-heading\" class = \"flex bg-gray-200 h-8 w-11/12 rounded-3xl mt-5 justify-center \">\r\n                        <p class = \"text-red-700 mt-1.5 font-semibold text-sm\">MOST CREATIVE TIME</p> \r\n                    </div>\r\n                    <div className = \"most-creative-time\" class = \"text-3xl mt-4 font-light\">{creativetime}</div>\r\n\r\n                    <div className = \"energy-level-heading\" class = \"flex bg-gray-200 h-8 w-11/12 rounded-3xl mt-2 justify-center \">\r\n                        <p class = \"text-black mt-1.5 mb-3 font-semibold text-sm\">OTHER INSIGHTS</p> \r\n                    </div>\r\n                    <div className = \"other-metrics\" class = \"grid grid-cols-2 w-11/12 mt-6 gap-y-4 bg-gray-200 rounded-2xl mb-2.5\"> \r\n                        <div className = \"task-switches\" class = \"flex flex-col justify-center ml-2 mt-2 bg-gray-100 rounded-2xl mr-2\">\r\n                            <div class = \"text-xs font-semibold mt-3\">TASK SWITCHES</div>\r\n                            {task_display}\r\n                        </div>\r\n                        <div className = \"distracting-sites\" class = \"flex flex-col justify-center mr-2 mt-2 bg-gray-100 rounded-2xl ml-2\">\r\n                            <div class = \"text-xs font-semibold mt-3\"># DISTRACTING SITES</div>\r\n                            {distracting_display}\r\n                        </div>\r\n                        <div className = \"time-per-task\" class = \"flex flex-col justify-center ml-2 mb-2 bg-gray-100 rounded-2xl mr-2\">\r\n                            <div class = \"text-xs font-semibold mt-3\">SECONDS PER TASK</div>\r\n                            {time_display}\r\n                        </div>\r\n                        <div className = \"unscaled-score\" class = \"flex flex-col justify-center mr-2 mb-2 bg-gray-100 rounded-2xl ml-2\">\r\n                            <div class = \"text-xs font-semibold mt-3\">UNSCALED SCORE</div>\r\n                            {unscaled_display}\r\n                        </div>\r\n                    </div>\r\n                    <div className = \"energy-level-heading\" class = \"flex bg-gray-200 w-11/12 rounded-3xl mt-3 justify-center \">\r\n                        <p class = \"text-black mt-3 mb-3 ml-2 mr-2 text-xs\">These are the insights we found - the more you use Crysta, the more accurate they get!</p> \r\n                    </div>\r\n                </div>\r\n                <div className = \"energy-menu\" class = \"flex bg-gray-50 shadow-md rounded-3xl h-full w-9/12 m-auto\">\r\n                    <div className = \"energy-level-heading\" class = \"flex bg-gradient-to-r from-blue-400 via-blue-400 to-green-300 h-8 w-64 rounded-3xl mt-2.5 ml-7 justify-center fixed\">\r\n                        <p class = \"text-white mt-1 font-semibold text-base\">YOUR ENERGY LEVELS</p> \r\n                    </div>\r\n                    {/* <div className = \"info-icon\">\r\n                        <IconContext.Provider value={{ color: '#4d4d4d' }}>\r\n                            <AiOutlineInfoCircle class = \"text-md mt-3.5 h-6 w-6 ml-72 fixed\"/>\r\n                        </IconContext.Provider>\r\n                            <div></div>\r\n                    </div> */}\r\n                    <div className = \"energy-graph-container\" class = \"flex-1 flex-col ml-7 mt-12 mr-8 mb-0 w-5/6 h-5/6\">\r\n                        <EnergyGraph />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n            <div className = \"version\" class = \"text-right text-md text-black font-semibold mr-5 mb-5\">MVP - v.0.1</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Energy;","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst LogoutButton = () => {\r\n  const { logout } = useAuth0();\r\n  return (\r\n    <button\r\n      className=\"btn btn-danger btn-block\" class = \"font-medium text-gray-50 h-10 w-40 bg-green-400 rounded-3xl hover:bg-blue-400 transition duration-250 ease-linear\"\r\n      onClick={() =>\r\n        logout({\r\n          returnTo: window.location.origin,\r\n        })\r\n      }\r\n    >\r\n      Log Out\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;","import React from 'react';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport CrystaLogo from './components/CrystaLogo.svg';\r\nimport LogoutButton from './components/logout-button';\r\n\r\nconst Logout = () => {\r\n  const { logout } = useAuth0();\r\n  return (\r\n    <div className = \"NavContainer\" class = 'flex flex-col justify-center items-center bg-gradient-to-r from-blue-400 via-green-300 to-green-200 h-screen w-screen'>\r\n    <div class = \"flex flex-col justify-center items-center bg-gray-50  rounded-3xl h-1/3 w-1/3 rounded-3xl shadow-lg\">\r\n      <div className = \"crysta-logo\" class = \"\">\r\n        <img src = {CrystaLogo} alt = \"CrystaLogo\"/>\r\n      </div>\r\n\r\n      <p class = \"font-medium text-center w-64 mb-4 mt-7 text-xl mr-5 ml-5\">We're sad to see you go. 😢 Come back soon!</p>\r\n\r\n      <div className=\"flex justify-center\">\r\n        <LogoutButton/>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Logout;","import './index.css';\nimport SideMenu from './components/SideMenu';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Login from './Login';\nimport Calendar from './pages/Calendar';\nimport Tasks from './pages/Tasks';\nimport Energy from './pages/Energy';\nimport Logout from './Logout';\nimport axios from 'axios';\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nfunction App() {\n\n  const { user, isAuthenticated } = useAuth0();\n\n  if (isAuthenticated) {\n    const dataObject = {\n        username: user.name\n    };\n    axios.post('http://127.0.0.1:5000/user', dataObject)\n        .then((res) => {\n      console.log(res.data)\n      }).catch(error => {\n      console.log(error)\n      });\n    axios.post('/send-user', dataObject)\n      .then((res) => {\n        console.log(res.data)\n      }).catch(error => {\n        console.log(error)\n      });\n}\n\n  return (\n      <Router>\n        <Route path='/' exact component={Login}/>\n        <Route path= '/Login' component={Login}/>\n        <SideMenu/>\n        <Switch>\n\n          <Route path='/pages/Calendar' component={Calendar}/>\n          <Route path='/pages/Tasks' component={Tasks}/>\n          <Route path='/pages/Energy' component={Energy}/>\n          <Route path='/pages/Logout'  component={Logout}/>\n          \n        </Switch>\n      </Router>\n    \n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Login from './Login';\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\n\nReactDOM.render(\n\n    <Auth0Provider\n      domain=\"crysta.us.auth0.com\"\n      clientId=\"7wM95Dzz4zhafR6dCBB6PhZdyvKQgDMH\"\n      // redirectUri=\"http://localhost:3000/pages/Energy/continue?state=THE_ORIGINAL_STATE\"\n      redirectUri=\"https://crysta-app.herokuapp.com/pages/Energy/continue?state=THE_ORIGINAL_STATE\"\n    >\n      <App />\n    </Auth0Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}