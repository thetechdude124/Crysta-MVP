{"version":3,"sources":["components/SideMenuData.js","components/CrystaLogo.svg","components/SideMenu.js","components/login-button.js","Login.js","pages/Calendar.js","pages/Tasks.js","pages/FunctionGraph.js","pages/DashboardComponents/Pomodoro_Chime.mp3","pages/DashboardComponents/CrystaLogo.svg","pages/DashboardComponents/Pomodoro.js","pages/DashboardComponents/TaskDisplay.js","pages/DashboardComponents/Complete_Task_Sound.mp3","pages/DashboardComponents/TaskEdit.js","pages/DashboardComponents/TaskWidget.js","pages/Dashboard.js","components/logout-button.js","Logout.js","App.js","index.js"],"names":["SideMenuData","title","path","icon","cName","SideMenu","useState","sidebar","setSidebar","showSidebar","Provider","value","color","to","className","class","onClick","src","CrystaLogo","alt","map","item","index","LoginButton","loginWithRedirect","useAuth0","Login","href","target","withAuthenticationRequired","onRedirecting","FunctionGraph","props","chart","setChart","useEffect","getData","a","labels","div_scores","axios","get","sendemail","then","response","console","log","data","Object","values","forEach","data_array","push","hour","divided_energy_score","datasets","label","borderWidth","borderColor","pointBackgroundColor","tension","pointRadius","width","height","options","maintainAspectRatio","responsive","BreakTime","timebreak","timeChange","Pomodoro","user_email","timedisplay","setTimedisplay","breaktime","setBreaktime","timerOn","setTimeron","onBreak","setOnBreak","Audio","chime","pomodorochime","sessionscompleted","setSessionscompleted","getSessioncount","session_count","sessions_completed","undefined","playSound","currentTime","volume","play","amount","destination","prev","time","n_minutes","Math","floor","n_seconds","convertTime","Notification","permission","requestPermission","alert","Date","getTime","nextDate","onBreakVariable","interval","setInterval","body","logo","timezone","getTimezoneOffset","query_date","now","toISOString","slice","id","rnd","r16","toString","repeat","replace","random","ObjectId","_id","username","date","source","post","res","catch","error","update_data","DocumentID","res_data","data_object","localStorage","clear","setItem","clearInterval","getItem","TaskDisplay","task","taskStatus","deleteTask","complete","desc","due_date","TaskEdit","addTask","setDesc","setDate","type","name","placeholder","onChange","input","preventDefault","TaskWidget","taskchime","showTaskEdit","setShowTaskEdit","tasks","setTasks","TasksExist","setTasksExist","getTaskData","save_task_array","task_get_data","task_object","checkTask","delete","window","location","reload","task_data","prod_div","task_display","distracting_display","time_display","unscaled_display","user","isAuthenticated","productivetime","setProductivetime","creativetime","setCreativetime","taskswitches","setTaskswitches","distractingsites","setDistractingsites","timepertask","setTimepertask","unscaledscore","setUnscaledscore","taskchange","setTaskchange","timechange","setTimechange","distractingchange","setDistractingchange","unscaledchange","setUnscaledchange","graphdiv","setGraphdiv","pomodorodiv","setPomodorodiv","TaskDiv","setTaskDiv","average","arr","reduce","b","length","displayChange","value_array","metric","at","checkAuth","email","stringemail","task_switches","unscaled_scores","average_task_times","n_distracting_tasks","unscaled_energy_score","average_task_time","distracting_tasks","toFixed","min_score","min","min_idx","indexOf","max_score","max","max_idx","LogoutButton","logout","returnTo","origin","Logout","App","usernameObject","exact","component","Dashboard","Tasks","Calendar","ReactDOM","render","domain","clientId","redirectUri","document","getElementById"],"mappings":"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","file":"static/js/main.0274a613.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as Io5cons from 'react-icons/io5';\r\nimport * as BsIcons from 'react-icons/bs';\r\nimport * as BIcons from 'react-icons/bi';\r\n\r\n\r\nexport const SideMenuData = [\r\n    {\r\n        title: 'DASHBOARD',\r\n        path: '/pages/Dashboard',\r\n        icon: <BsIcons.BsGraphUp/>, \r\n        cName: 'side-menu-text'\r\n    },\r\n    {\r\n        title: 'TASKS',\r\n        path: '/pages/Tasks',\r\n        icon: <Io5cons.IoCheckmarkSharp/>,\r\n        cName: 'side-menu-text'\r\n    },\r\n    {\r\n        title: 'CALENDAR',\r\n        path: '/pages/Calendar',\r\n        icon: <BsIcons.BsCalendar/>, \r\n        cName: 'side-menu-text'\r\n    },\r\n    {\r\n        title: 'LOG OUT',\r\n        path: '/pages/Logout',\r\n        icon: <BIcons.BiExit/>, \r\n        cName: 'side-menu-text'\r\n    }\r\n]","export default __webpack_public_path__ + \"static/media/CrystaLogo.3734c1e1.svg\";","import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as Iocons from 'react-icons/io';\r\nimport { SideMenuData } from './SideMenuData';\r\nimport './SideMenu.css';\r\nimport { IconContext } from 'react-icons';\r\nimport CrystaLogo from './CrystaLogo.svg';\r\n\r\nfunction SideMenu() {\r\n    const [sidebar, setSidebar] = useState(false);\r\n\r\n    const showSidebar = () => setSidebar(!sidebar);\r\n    return (\r\n        <>\r\n            <IconContext.Provider value={{ color: '#fff' }}>\r\n                <Link to=\"#\" className = 'open-menu-arrow' class = \"flex m-3 text-2xl flex hover:bg-green-200 rounded-md z-40 fixed\">\r\n                    <Iocons.IoIosArrowForward onClick ={showSidebar}/>\r\n                </Link>\r\n                {/* <div className = 'SideMenu' class = \" z-50 fixed flex items-center bg-gray-50 shadow-md h-9 w-screen rounded-r-lg\">\r\n\r\n                </div> */}\r\n            </IconContext.Provider>\r\n            \r\n            <nav className={sidebar ? \"side-menu active\" : 'side-menu'}>\r\n                <ul className = 'side-menu-items' onClick = {showSidebar}>\r\n                    <li className = \"side-menu-toggle\">\r\n                        <Link to = \"#\" className = 'open-menu-arrow' class = \"text-2xl -pl3 hover:bg-green-200 rounded-md\">\r\n                            <Iocons.IoIosArrowBack />\r\n                        </Link> \r\n                    </li>\r\n                    <div className = \"crysta-logo\" class = \"ml-10 -mt-14 mb-5\">\r\n                        <img src = {CrystaLogo} alt = \"CrystaLogo\" class = \"content-between\"/>\r\n                    </div>\r\n                    {SideMenuData.map((item, index) => {\r\n                        return (\r\n                            <li key={index} className={item.cName} class = \"flex flex-col text-xl pl-3 pt-9 font-semibold hover:bg-green-200 rounded-lg -pt-5 pb-6 pl-20 pr-16\">\r\n                                <Link to = {item.path}> \r\n                                    <div class = \"-ml-9 -mb-6\">{item.icon}</div>\r\n                                    <span>{item.title}</span>\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>    \r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideMenu;\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n  return (\r\n    <button\r\n      className=\"btn btn-primary btn-block\" class = \"font-medium text-gray-50 h-12 w-40 bg-blue-400 rounded-3xl hover:bg-green-400 transition duration-250 ease-linear\"\r\n      onClick={() => loginWithRedirect()}\r\n    >\r\n      Log In | Sign Up\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LoginButton;","import React from \"react\";\r\nimport LoginButton from \"./components/login-button\";\r\nimport CrystaLogo from './components/CrystaLogo.svg';\r\n\r\nconst Login = () => (\r\n  <div className = \"NavContainer\" class = 'flex flex-col justify-center items-center bg-gradient-to-r from-blue-400 via-green-300 to-green-200 h-screen w-screen'>\r\n    <div class = \"flex flex-col justify-center items-center bg-gray-50 h-1/3 w-1/3 rounded-3xl shadow-lg \">\r\n      <div className = \"crysta-logo\">\r\n        <img src = {CrystaLogo} alt = \"CrystaLogo\"/>\r\n      </div>\r\n\r\n      <p class = \"font-normal text-center mb-7 mt-7 mr-5 ml-5 text-xl\">Glad to see you! Make sure you've downloaded the latest version of our <a href=\"https://tinyurl.com/Crysta-MVP\" target = \"_blank\" class=\"font-semibold underline text-blue-400 hover:text-green-400 transition duration-250 ease-linear\">energy tracker</a> first.</p>\r\n\r\n      <div className=\"flex justify-center\">\r\n        <LoginButton/>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Login;","import React from 'react';\r\nimport { withAuthenticationRequired } from \"@auth0/auth0-react\";\r\n\r\nfunction Calendar() {\r\n  return (\r\n    <div className='Calendar' class = \"flex items-center justify-center bg-gradient-to-r from-blue-400 via-green-300 to-green-200 h-screen \">\r\n      <h1 class = \"fixed text-black font-bold text-8xl\">📅Calendar.</h1>\r\n      <h1 class = \"mt-40 text-white font-semibold text-2xl\">Coming soon in a later release. In the meanwhile, check out our weekly newsletter for updates!</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withAuthenticationRequired(Calendar, {\r\n  onRedirecting: () => <div> Hey there! We're just redirecting you 😁</div>,\r\n})","import React from 'react';\r\nimport { withAuthenticationRequired } from \"@auth0/auth0-react\";\r\n\r\nfunction Tasks() {\r\n  return (\r\n    <div className='Tasks' class = \"flex items-center justify-center bg-gradient-to-r from-blue-400 via-green-300 to-green-200 h-screen\">\r\n      <h1 class = \"fixed text-black font-bold text-8xl\">✔️Tasks.</h1>\r\n      <h1 class = \"mt-40 text-white font-semibold text-2xl\">Coming soon in a later release. In the meanwhile, check out our weekly newsletter for updates!</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withAuthenticationRequired(Tasks, {\r\n  onRedirecting: () => <div> Hey there! We're just redirecting you 😁</div>,\r\n})","import React, { useEffect, useState } from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport axios from 'axios';\r\n\r\nexport default function FunctionGraph(props) {\r\n    //Setting up state variables\r\n    const [chart, setChart] = useState();\r\n\r\n    //Fetching data from the API:\r\n    useEffect(() => {\r\n        const getData = async() => {\r\n            let labels = [];\r\n            let div_scores = [];\r\n            await axios.get('/api/getData?username=' + props.sendemail + '&source=energy-tracker').then((response) => {\r\n                console.log(props.sendemail);\r\n                var data = response.data;\r\n                const data_values = Object.values(data);\r\n                const data_array = data_values[1];\r\n                data_array.forEach(data_array => {\r\n                    labels.push(data_array.hour);\r\n                    div_scores.push(data_array.divided_energy_score);\r\n                });\r\n            });\r\n            setChart({\r\n                labels: labels,\r\n                datasets: [{\r\n                    label: 'ENERGY SCORE',\r\n                    data: div_scores,\r\n                    borderWidth: 8,\r\n                    borderColor: \"rgba(20, 177, 183, 0.4)\",\r\n                    pointBackgroundColor: \"rgb(77, 77, 77, 1)\",\r\n                    tension: 0.4,\r\n                    pointRadius: 8,\r\n                }]\r\n            });\r\n        }\r\n        getData();\r\n    }, []);\r\n    \r\n    return (\r\n        <div className = \"energy-graph-container\" >\r\n            <Line \r\n                data = {chart} \r\n                width = {770}\r\n                height = {690}\r\n                options = {{\r\n                    maintainAspectRatio: true,\r\n                    responsive: true,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/Pomodoro_Chime.496ed2cd.mp3\";","export default __webpack_public_path__ + \"static/media/CrystaLogo.55e6db75.svg\";","import { HackTimer } from 'hacktimer';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { AiOutlinePlusCircle, AiOutlineMinusCircle, AiFillPlusSquare, AiFillMinusSquare } from \"react-icons/ai\";\r\nimport { IconContext } from 'react-icons';\r\nimport chime from './Pomodoro_Chime.mp3';\r\nimport logo from './CrystaLogo.svg';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport axios from 'axios';\r\n\r\nfunction Pomodoro(props) {\r\n\r\n    //Get user email\r\n    const sendemail = props.user_email;\r\n\r\n    //Setting up variables for time, break, and states\r\n    const [timedisplay, setTimedisplay] = useState(25*60);\r\n    const [breaktime, setBreaktime] = useState(5*60);\r\n    const [timerOn, setTimeron] = useState(false);\r\n    const [onBreak, setOnBreak] = useState(false);\r\n    const [pomodorochime, setPomodorochime] = useState(new Audio(chime));\r\n    const [sessionCounter, setSessioncounter] = useState(0);\r\n    const [sessionscompleted, setSessionscompleted] = useState(0);\r\n    // const [DocumentID, setDocumentID] = useState();\r\n\r\n    // var sessionscompleted = 0\r\n\r\n    //Add setinterval to refresh session count for the value of timedisplay\r\n    useEffect(() => {\r\n        const getSessioncount = async() => {\r\n            axios.get('/api/getData?username=' + sendemail + '&source=pomodoro').then((response) => {\r\n                var data = response.data;\r\n                const data_values = Object.values(data);\r\n                const data_array = data_values[1];\r\n                var session_count = []\r\n                data_array.forEach(data_array => {\r\n                    session_count.push(data_array.sessions_completed);\r\n                });\r\n                console.log(session_count);\r\n                console.log(session_count[0])\r\n                if (session_count[0] === undefined) {\r\n                    setSessionscompleted(0);\r\n                } else {\r\n                    console.log(session_count[0])\r\n                    setSessionscompleted(session_count[0]);\r\n                }\r\n                \r\n            });\r\n        }\r\n        getSessioncount();\r\n    }, [])\r\n\r\n    const playSound = () => {\r\n        pomodorochime.currentTime = 0;\r\n        pomodorochime.volume = 1;\r\n        pomodorochime.play();\r\n    }\r\n\r\n    const convertTime = (time) => {\r\n        let n_minutes = Math.floor(time/60);\r\n        let n_seconds = time % 60;\r\n        return (n_minutes < 10 ? \"0\" + n_minutes: n_minutes) + \":\" + (n_seconds < 10 ? \"0\" + n_seconds: n_seconds)\r\n    }\r\n\r\n    const convertBreaktime = (timebreak) => {\r\n        let break_minutes = Math.floor(timebreak/60);\r\n        return (break_minutes)\r\n    }\r\n\r\n    const timeChange = (amount, destination) => {\r\n\r\n        if (destination === \"break\") {\r\n            //Check if breaktime is at 5 minutes and if the user is requesting to lower the time - if true, simply don' return anything\r\n            if (breaktime <= 300 && amount < 0) {\r\n                return;\r\n            }\r\n            setBreaktime((prev) => prev + amount);\r\n\r\n        } else if (destination === \"focus\") {\r\n            if (timedisplay <= 600 && amount < 0) {\r\n                return;\r\n            }\r\n            setTimedisplay((prev) => prev + amount);\r\n            if(!timerOn) {\r\n                setTimedisplay(timedisplay + amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    function sessionNotification() {\r\n        const session_notif = new Notification(\"Ready to get back to work? 🔥\", {\r\n            body: \"Hey there! Your break has ended. Let's get back in the game!\",\r\n            icon: logo\r\n        })\r\n    };\r\n\r\n    function breakNotification() {\r\n        const break_notif = new Notification(\"Time for a break! 🌊\", {\r\n            body: \"Hey there! Your work session has ended. Feel free to sit back, get a glass of water, and enjoy!\",\r\n            icon: logo\r\n        })\r\n    };\r\n\r\n    const notificationHandler = () => {\r\n\r\n        //See if notification permission is granted or not\r\n        console.log(Notification.permission);\r\n\r\n        if (Notification.permission === \"granted\") {\r\n            console.log('Notification permission granted. Starting session!')\r\n        } else if (Notification.permission !== \"denied\") {\r\n            Notification.requestPermission().then(permission => {\r\n                console.log(permission);\r\n                if (permission === \"denied\") {\r\n                    alert(\"Hey there! Don't worry - we just need your notification permission to remind you when your work sessions and breaks are over. Thanks :D\");\r\n                    Notification.requestPermission();\r\n                }\r\n            })\r\n        } else if (Notification.permission === \"denied\") {\r\n            alert(\"Hey there! Don't worry - we just need your notification permission to remind you when your work sessions and breaks are over. Thanks :D\");\r\n            Notification.requestPermission();\r\n        }\r\n    }\r\n\r\n    const sendToDB = () => {\r\n        //Send pomodoro session data to the database -> number of sessions completed \r\n        //How would we track the energy levels for that particular session?\r\n        \r\n    }\r\n\r\n    const startTimer = () => {\r\n        notificationHandler();\r\n        let milliseconds = 1000;\r\n        let date = new Date().getTime();\r\n        let nextDate = new Date().getTime() + milliseconds;\r\n        let onBreakVariable = onBreak;\r\n        //If the timer is not on:\r\n        if (!timerOn) {\r\n            //Every 30 miliseconds, we compare the difference between the old date and new date - updating the display.\r\n            let interval = setInterval(() => {\r\n                date = new Date().getTime();\r\n                if (date > nextDate) {\r\n                    setTimedisplay((prev) => {\r\n                        if (prev <= 0 && !onBreakVariable) {\r\n\r\n                            playSound();\r\n                            breakNotification();\r\n\r\n                            var timezone = (new Date()).getTimezoneOffset() * 60000;\r\n                            var localtime = (new Date(Date.now() - timezone)).toISOString().slice(0, -1);\r\n                            var query_date = localtime.slice(0,10);\r\n\r\n                            //Generate ID\r\n                            const ObjectId = (rnd = r16 => Math.floor(r16).toString(16)) =>\r\n                            rnd(Date.now()/1000) + ' '.repeat(16).replace(/./g, () => rnd(Math.random()*16));\r\n                            var id = ObjectId();\r\n\r\n                            //Save session data by creating a new document for that day or updating an existing one\r\n                            if (sessionscompleted === 0) {\r\n                                \r\n                                //Define data object\r\n                                const data = {\r\n                                    _id: id,\r\n                                    username: sendemail,\r\n                                    date: query_date,\r\n                                    sessions_completed: sessionscompleted + 1,\r\n                                    source: \"pomodoro\"\r\n                                };\r\n                                \r\n                                //Increment sessionscompleted\r\n                                setSessionscompleted(sessionscompleted + 1);\r\n                                \r\n                                //Post data\r\n                                axios.post('/api/putData', data).then((res) => {\r\n                                console.log(res.data)\r\n                                }).catch(error => {console.log(error)\r\n                                });\r\n\r\n                            } else if (sessionscompleted > 0){\r\n\r\n                                //Define data object\r\n                                const update_data = {\r\n                                    username: sendemail,\r\n                                    date: query_date,\r\n                                    sessions_completed: sessionscompleted + 1,\r\n                                    source: \"pomodoro\"\r\n                                };\r\n\r\n                                //Increment sessionscompleted\r\n                                setSessionscompleted(sessionscompleted + 1);\r\n\r\n                                //Pull document with existing session data and retrieve data\r\n                                axios.get('/api/getData?username=' + sendemail + '&source=pomodoro').then((response) => {\r\n                                    //Set DocumentID variable\r\n                                    let DocumentID;\r\n\r\n                                    var res_data = response.data;\r\n                                    console.log(res_data)\r\n                                    const data_values = Object.values(res_data);\r\n                                    const data_object = data_values[1][0];\r\n                                    console.log(data_object._id);\r\n                                    DocumentID = data_object._id;\r\n                                    console.log(DocumentID);\r\n\r\n                                    axios.post('/api/updateData', {DocumentID, update_data})\r\n                                    .then((res) => {\r\n                                        console.log(res.data)\r\n                                    }).catch(error => {\r\n                                        console.log(error)\r\n                                    });\r\n                                });\r\n\r\n                            }\r\n                            onBreakVariable = true;\r\n                            setOnBreak(true);\r\n                            return breaktime;\r\n\r\n                        } else if (prev <= 0 && onBreakVariable) {\r\n                            playSound();\r\n                            sessionNotification();\r\n                            onBreakVariable = false;\r\n                            setOnBreak(false);\r\n                            return timedisplay;\r\n                        }\r\n                        return prev - 1;\r\n                    });\r\n                    nextDate += milliseconds;\r\n                }\r\n            }, 30);\r\n            localStorage.clear();\r\n            localStorage.setItem('interval-id', interval);\r\n        }\r\n        if (timerOn) {\r\n            clearInterval(localStorage.getItem('interval-id'));\r\n        }\r\n        setTimeron(!timerOn);\r\n    }\r\n\r\n    const timeReset = () => {\r\n        setTimedisplay(25*60);\r\n        setBreaktime(5*60);\r\n        setOnBreak(false);\r\n    }\r\n\r\n    return (\r\n    <div className = \"pomodoro-timer\" class = \"flex flex-auto flex-col text-center bg-gray-50 rounded-3xl h-1/2 w-full m-auto shadow-md mb-2.5 items-center\">\r\n        <div className = \"pomodoro-heading\" class = \"flex bg-gradient-to-r from-blue-400 via-blue-400 to-green-300 h-8 w-11/12 rounded-3xl mt-2.5 justify-center text-center\">\r\n            <p class = \"text-white mt-1 font-semibold text-base\">POMODORO TIMER</p> \r\n        </div>\r\n        <div className = \"work-session-text\" class = \"text-sm font-light mt-2.5 mb-2.5\">Start a work session. Remember to allow notifications!</div>\r\n        <div className = \"timer-element\" class = \"flex items-center flex-col justify-center w-11/12 h-2/5 bg-gradient-to-r from-blue-400 via-blue-400 to-green-300 rounded-3xl\">\r\n            <p className = \"session-or-break\" class = \"flex text-blue-100 font-semibold text-lg mt-0.5 -mb-2\">{ onBreak ? \"BREAK\": \"SESSION\"}</p>\r\n            <div className = \"icons-display\" class = \"flex items-center\">\r\n                <div className = \"plus-icon\" class = \"text-3xl mr-5 mt-2\">\r\n                    <IconContext.Provider value={{ color: '#ffffff' }}>\r\n                        <AiFillMinusSquare class = \"hover:bg-green-200 rounded-md z-40\" onClick = {() => timeChange(-300, \"focus\")}/>\r\n                    </IconContext.Provider>\r\n                </div>\r\n                <p className = \"work-time\" class = \"font-bold text-white text-6xl\">{convertTime(timedisplay)}</p>\r\n                <div className = \"plus-icon\" class = \"text-3xl ml-5 mt-2\">\r\n                    <IconContext.Provider value={{ color: '#ffffff' }}>\r\n                        <AiFillPlusSquare class = \"hover:bg-green-200 rounded-md z-40\" onClick = {() => timeChange(300, \"focus\")}/>\r\n                    </IconContext.Provider>\r\n                </div>\r\n            </div>\r\n            <BreakTime timebreak = {convertBreaktime(breaktime)} timeChange = {timeChange}/>\r\n        </div>\r\n        <div className = \"button-container\" class = \"flex flex-row\">\r\n            <button className = \"reset-button\" class = \"font-medium text-gray-50 h-10 w-32 bg-blue-400 rounded-3xl hover:bg-green-400 transition duration-250 ease-linear mt-5 mr-4\" onClick = {timeReset}>RESET</button>\r\n            <button className = \"stop-button\" class = \"font-medium text-gray-50 h-10 w-32 bg-green-400 rounded-3xl hover:bg-blue-400 transition duration-250 ease-linear mt-5\" onClick = {startTimer}>\r\n                {timerOn ? (\r\n                    <p class = \"flex font-medium text-gray-50 bg-red-400 rounded-3xl h-10 w-32 justify-center items-center hover:bg-yellow-400 transition duration-250 ease-linear\">STOP</p>\r\n                ) : (\r\n                    <>START</>\r\n                )}\r\n            </button>\r\n        </div>\r\n        <div className = \"number-sessions-text\" class = \"flex text-sm mt-4\">You've completed <p className = \"font-semibold text-green-500 number-sessions ml-1 mr-1\">{sessionscompleted}</p> work sessions today.</div>\r\n    </div>\r\n    );\r\n}\r\n\r\nfunction BreakTime({timebreak, timeChange}) {\r\n    return (\r\n        <div className = \"break-container\" class = \"flex items-center\">\r\n            <div className = \"plus-icon\" class = \"text-md mr-2 mt-1.5\">\r\n                <IconContext.Provider value={{ color: '#ffffff' }}>\r\n                    <AiOutlineMinusCircle class = \"hover:bg-green-200 rounded-md z-40\" onClick = {() => timeChange(-300, \"break\")}/>\r\n                </IconContext.Provider>\r\n            </div>\r\n            <div className = \"break-time\" class = \"flex text-blue-100 font-semibold text-lg mt-1\">Break: <p className = \"font-semibold text-white number-sessions ml-1 mr-1\">{timebreak}</p> MIN</div>\r\n            <div className = \"plus-icon\" class = \"text-md ml-2 mt-1.5\">\r\n                <IconContext.Provider value={{ color: '#ffffff' }}>\r\n                    <AiOutlinePlusCircle class = \"hover:bg-green-200 rounded-md z-40\" onClick = {() => timeChange(300, \"break\")}/>\r\n                </IconContext.Provider>\r\n            </div>\r\n        </div>\r\n\r\n        )\r\n}\r\n\r\nexport default Pomodoro;","import React, {useState} from 'react';\r\nimport { AiFillCheckCircle, AiFillDelete} from \"react-icons/ai\";\r\nimport { IconContext } from 'react-icons';\r\nimport { VscCircleOutline } from \"react-icons/vsc\";\r\nimport { MdOutlineCircle } from \"react-icons/md\";\r\n\r\nfunction TaskDisplay({task, taskStatus, deleteTask}) {\r\n\r\n    return (\r\n        //Div for each task\r\n        <div className = \"task-container\" class = \"flex flex-row text-left content-center rounded-3xl h-auto bg-gray-100 my-1\" key = {task._id}>\r\n\r\n            <div className = \"check-box-container\" class = \"flex text-center w-1/6 justify-center rounded-2xl\" onClick = {() => taskStatus(task)}>\r\n                {/* Check if the task is completed - if yes, display a checkmark. */}\r\n                {task.complete ? (\r\n                        <IconContext.Provider value={{ color: '#60a5fa' }}>\r\n                            <AiFillCheckCircle class = \"self-center text-3xl hover:bg-green-200 rounded-3xl transition duration-250 ease-linear\"/>\r\n                        </IconContext.Provider>\r\n                    ) : (\r\n                        <IconContext.Provider value={{ color: '#60a5fa' }}>\r\n                            <MdOutlineCircle class = \"self-center text-2xl hover:bg-green-200 rounded-3xl text-2xl transition duration-250 ease-linear\"/>\r\n                        </IconContext.Provider>  \r\n                    )}\r\n            </div>\r\n\r\n            <div className = \"task-name\" class = \"flex w-3/6 text-sm font-semibold self-center my-3 ml-auto mr-3\">{task.desc}</div>\r\n            <div className = \"due-date\" class = \"flex w-2/6 text-xs font-light self-center text-gray-500 self-end mr-3\">Due {task.due_date}</div>\r\n            <div className = \"delete-button-container\" class = \"flex 1/6 text-xl self-center self-end ml-auto mr-3\" onClick = {() => deleteTask(task)}>\r\n                <IconContext.Provider value={{ color: '#abb1ba' }}>\r\n                    <AiFillDelete class = \"self-center text-xl hover:bg-red-200 rounded-md text-xl transition duration-250 ease-linear\"/>\r\n                </IconContext.Provider>  \r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskDisplay;","export default __webpack_public_path__ + \"static/media/Complete_Task_Sound.8bcda202.mp3\";","import { useState } from \"react\";\r\n\r\nfunction TaskEdit({ task, addTask }) {\r\n\r\n    //Set description and date locally \r\n    const [desc, setDesc] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n\r\n    //Create function SaveTask for \"New Task\" form submission - using the addTask function from TaskWidget.js\r\n    const saveTask = (input) => {\r\n        input.preventDefault();\r\n        addTask({ desc: desc, due_date: date });\r\n\r\n        setDesc(\"\");\r\n        setDate(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className = \"new-task-form\" class = \"flex flex-col text-center w-12/12 h-6/6 justify-center\">\r\n\r\n            <h3 class = \"text-md font-light self-center mt-3 mb-auto\">NEW TASK</h3>\r\n            <form class = \"flex flex-col w-12/12 h-5/6 text-center justify-center items-center\">\r\n\r\n                {/* Task Input */}\r\n                <div className = \"task-field\" class = \"flex flex-row my-1.5 w-12/12 h-1/2\">\r\n                    {/* <label htmlFor = \"desc\" class = \"flex w-1/6 text-sm font-regular self-center ml-auto mr-auto\">Task:</label> */}\r\n                    <input type = \"text\" name = \"desc\" id = \"desc\" placeholder = \"Task\" value = {desc} onChange = {(input) => setDesc(input.target.value)} class = \"form-input rounded-md px-3 py-2 bg-gray-100 text-md h-1/2 w-6/6 border-gray-300 focus:border-blue-400 border-opacity-25\"/>\r\n                </div>\r\n\r\n\r\n                {/* Date Input */}\r\n                <div className = \"date-field\" class = \"flex flex-row my-1.5 w-12/12 h-1/2\">\r\n                    {/* <label htmlFor = \"date\" class = \"flex w-2/6 text-sm font-regular self-center mr-auto\">Date:</label> */}\r\n                    <input type = \"text\" name = \"date\" id = \"date\" placeholder = \"Date (YYYY/MM/DD)\" value = {date} onChange = {(input) => setDate(input.target.value)} class = \"form-input rounded-md px-3 py-2 bg-gray-100 text-md h-1/2 border-gray-300 focus:border-blue-400 border-opacity-25\"/>\r\n                </div>\r\n\r\n                <button className = \"save-task\" class = \"font-medium text-sm text-gray-50 h-8 w-28 bg-green-400 rounded-3xl self-center my-3 hover:bg-blue-400 transition duration-250 ease-linear\" onClick = {saveTask}>SAVE TASK</button>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskEdit;","import React, { useEffect, useState } from 'react';\r\nimport TaskDisplay from './TaskDisplay';\r\nimport chime from './Complete_Task_Sound.mp3';\r\nimport TaskEdit from './TaskEdit.js';\r\nimport axios from 'axios';\r\n\r\nfunction TaskWidget(props) {\r\n\r\n    //Get user email\r\n    const sendemail = props.user_email;\r\n\r\n    //Define taskchime and whether or not to choose the task edit menu\r\n    const [taskchime, setTaskchime] = useState(new Audio(chime));\r\n    const [showTaskEdit, setShowTaskEdit] = useState(false);\r\n\r\n    //Define task state\r\n    const [tasks, setTasks] = useState();\r\n    const [TasksExist, setTasksExist] = useState(false);\r\n\r\n    //Fetch Task Data from API\r\n    useEffect(() => {\r\n        const getTaskData = async() => {\r\n\r\n            let save_task_array = [];\r\n            await axios.get('/api/getData?username=' + props.user_email + '&source=tasks').then((response) => {\r\n                var task_get_data = response.data;\r\n                const task_values = Object.values(task_get_data);\r\n                const task_array = task_values[1];\r\n\r\n                task_array.forEach(task_object => {\r\n                    save_task_array.push(task_object);\r\n                });\r\n            });\r\n\r\n            setTasks(save_task_array);\r\n\r\n            console.log(tasks);\r\n            if (save_task_array !== 'undefined') {\r\n                setTasksExist(true);\r\n            } else {\r\n                setTasksExist(false);\r\n            }\r\n\r\n        };\r\n        getTaskData();\r\n    }, []);\r\n\r\n    // const [tasks, setTasks] = useState([\r\n    //     { desc: \"Complete Project\", id: 1, due_date: \"2021-12-14\", complete: false},\r\n    //     { desc: \"Crysta - Engine of Growth\", id : 2, due_date: \"2021-12-16\", complete: false},\r\n    // ]);\r\n\r\n    const taskStatus = (task) => {\r\n        console.log(\"completing task\");\r\n        console.log(task);\r\n        console.log(task._id);\r\n        //Iterate through all tasks and check if it is the task to be completed (check id) - then set to complete if not already set\r\n        setTasks(\r\n            tasks.map((checkTask) => {\r\n\r\n                console.log(checkTask.complete);\r\n                //Set complete to the opposite of what it is currently set to\r\n                checkTask.complete = \r\n                    task._id === checkTask._id ? !checkTask.complete : checkTask.complete;\r\n                \r\n                console.log(checkTask.complete);\r\n\r\n                //Check to see if task is now complete or incomplete - if complete, play the taskchime\r\n                if (checkTask.complete && task._id === checkTask._id) {\r\n                    \r\n                    //Play chime\r\n                    taskchime.currentTime = 0;\r\n                    taskchime.volume = 1;\r\n                    taskchime.play();\r\n                \r\n                }\r\n\r\n                //Check if the task id is correct - if so, update the database through the api\r\n                if (task._id === checkTask._id) {\r\n\r\n                    //Set ID variable \r\n                    var DocumentID = task._id;\r\n\r\n                    //Define update_data object\r\n                    const update_data = {\r\n                        username: sendemail,\r\n                        desc: task.desc,\r\n                        due_date: task.due_date,\r\n                        complete: checkTask.complete,\r\n                        source: \"tasks\"\r\n                    }\r\n\r\n                    console.log(update_data);\r\n\r\n                    //Update Data through API\r\n                    axios.post('/api/updateData', {DocumentID, update_data})\r\n                    .then((res) => {\r\n                        console.log(res.data);\r\n                    }).catch(error => {\r\n                        console.log(error);\r\n                    })\r\n\r\n                }\r\n                 \r\n                return checkTask;\r\n            })\r\n        )\r\n    }\r\n\r\n    const addTask = ({desc, due_date}) => {\r\n\r\n        console.log(\"Creating new task!\")\r\n\r\n        //Generating ID\r\n        const ObjectId = (rnd = r16 => Math.floor(r16).toString(16)) =>\r\n        rnd(Date.now()/1000) + ' '.repeat(16).replace(/./g, () => rnd(Math.random()*16));\r\n        var id = ObjectId();\r\n\r\n        //Creating a new task with setTasks\r\n        setTasks([\r\n            { desc: desc, due_date: due_date, id: id, complete: false},\r\n            ...tasks,\r\n        ]);\r\n        \r\n        //Saving new task into data object\r\n        const task_data = {\r\n            _id: id,\r\n            username: sendemail,\r\n            desc: desc,\r\n            due_date: due_date,\r\n            complete: false,\r\n            source: \"tasks\"\r\n        };\r\n\r\n        //Post data to database through API\r\n        axios.post('/api/putData', task_data).then((res) => {\r\n            console.log(res.data)\r\n        }).catch(error => {console.log(error)\r\n        });\r\n\r\n        setTasksExist(true);\r\n        //Reload Page\r\n        window.location.reload(false);\r\n    };\r\n\r\n    const deleteTask = (task) => {\r\n\r\n        const data = {\r\n            id: task._id\r\n        };\r\n        console.log(task._id);\r\n        axios.delete('/api/deleteData', {data})\r\n        .then((res) => {\r\n            console.log(res.data);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n\r\n        //Reload Page\r\n        window.location.reload(false);\r\n    }\r\n\r\n    console.log(TasksExist);\r\n    let add_task_div;\r\n\r\n    if (TasksExist === false) {\r\n        add_task_div = <div className = \"task-text\" class = \"text-sm font-light mt-2.5 mb-2.5\">Get started by adding a task!</div> \r\n    } else {\r\n        add_task_div = <></>\r\n    }\r\n    return (\r\n        <div className = \"task-widget-container\" class = \"flex flex-auto flex-col text-center bg-gray-50 rounded-3xl h-1/2 w-full m-auto shadow-md mt-1.5 items-center\" key = {tasks}>\r\n            <div className = \"task-widget-heading\" class = \"flex bg-gradient-to-r from-blue-400 via-blue-400 to-green-300 h-8 w-11/12 rounded-3xl mt-2.5 justify-center text-center\">\r\n                <p class = \"text-white my-1 font-semibold self-center text-base\">TASK WIDGET</p> \r\n            </div>\r\n            {!TasksExist? (\r\n                <></>\r\n                ) : (\r\n                <div className = \"task-text\" class = \"text-sm font-light mt-2.5 mb-2.5\">Strive for excellence.</div>   \r\n            )} \r\n            {!showTaskEdit && TasksExist ? (\r\n                        <div className = \"task-list\" class = \"overflow-auto h-4/6 w-10/12 m-auto\">\r\n                            {\r\n                            //Iterate through tasks\r\n                            tasks.map((task) => (\r\n                                <TaskDisplay task = {task} key={task.id} taskStatus = {taskStatus} deleteTask = {deleteTask}/>\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <div className = \"showtaskedit\" class = \"flex flex-initial overflow-auto h-4/6 w-11/12 m-auto justify-center items-center align-middle\">\r\n                            {showTaskEdit && <TaskEdit task={{}} addTask ={addTask} />}\r\n                        </div> \r\n                    )}\r\n                    <div className = \"task-features\" class = \"h-2/12 mb-8 mt-auto\">\r\n                        <button className = \"new-task\" class = \"font-medium text-gray-50 h-10 w-32 bg-green-400 rounded-3xl hover:bg-blue-400 transition duration-250 ease-linear\" onClick = {() => setShowTaskEdit(!showTaskEdit)}>\r\n                            {!showTaskEdit && \"NEW TASK\"}\r\n                            {showTaskEdit && (<p class = \"flex font-medium text-gray-50 bg-red-400 rounded-3xl h-10 w-32 justify-center items-center hover:bg-yellow-400 transition duration-250 ease-linear\">CLOSE</p>)}\r\n                        </button>\r\n                    </div>\r\n            {/* {TasksExist ? (\r\n                <>\r\n                    {!showTaskEdit ? (\r\n                        <div className = \"task-list\" class = \"overflow-auto h-4/6 w-10/12 m-auto\">\r\n                            {\r\n                            //Iterate through tasks\r\n                            tasks.map((task) => (\r\n                                <TaskDisplay task = {task} key={task.id} taskStatus = {taskStatus} deleteTask = {deleteTask}/>\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <div className = \"showtaskedit\" class = \"flex flex-initial overflow-auto h-4/6 w-11/12 m-auto justify-center items-center align-middle\">\r\n                            {showTaskEdit && <TaskEdit task={{}} addTask ={addTask} />}\r\n                        </div> \r\n                    )}\r\n                    <div className = \"task-features\" class = \"h-2/12 mb-8 mt-auto\">\r\n                        <button className = \"new-task\" class = \"font-medium text-gray-50 h-10 w-32 bg-green-400 rounded-3xl hover:bg-blue-400 transition duration-250 ease-linear\" onClick = {() => setShowTaskEdit(!showTaskEdit)}>\r\n                            {!showTaskEdit && \"NEW TASK\"}\r\n                            {showTaskEdit && (<p class = \"flex font-medium text-gray-50 bg-red-400 rounded-3xl h-10 w-32 justify-center items-center hover:bg-yellow-400 transition duration-250 ease-linear\">CLOSE</p>)}\r\n                        </button>\r\n                    </div>\r\n                </>\r\n                ) : (\r\n                    <>\r\n                    <div className = \"task-text\" class = \"text-sm font-light mt-2.5 mb-2.5\">Get started by adding a task!</div>\r\n                    {!showTaskEdit ? (\r\n                        <div className = \"task-list\" class = \"overflow-auto h-4/6 w-10/12 m-auto\">\r\n                            {\r\n                            //Iterate through tasks\r\n                            tasks.map((task) => (\r\n                                <TaskDisplay task = {task} key={task.id} taskStatus = {taskStatus} deleteTask = {deleteTask}/>\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <div className = \"showtaskedit\" class = \"flex flex-initial overflow-auto h-4/6 w-11/12 m-auto justify-center items-center align-middle\">\r\n                            {showTaskEdit && <TaskEdit task={{}} addTask ={addTask} />}\r\n                        </div> \r\n                    )}\r\n                    <div className = \"task-features\" class = \"h-2/12 mb-8 mt-auto\">\r\n                        <button className = \"new-task\" class = \"font-medium text-gray-50 h-10 w-32 bg-green-400 rounded-3xl hover:bg-blue-400 transition duration-250 ease-linear\" onClick = {() => setShowTaskEdit(!showTaskEdit)}>\r\n                            {!showTaskEdit && \"NEW TASK\"}\r\n                            {showTaskEdit && (<p class = \"flex font-medium text-gray-50 bg-red-400 rounded-3xl h-10 w-32 justify-center items-center hover:bg-yellow-400 transition duration-250 ease-linear\">CLOSE</p>)}\r\n                        </button>\r\n                    </div>\r\n                    </>\r\n            )} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskWidget;","import React, { useState, useEffect } from 'react';\r\nimport './Dashboard.css';\r\nimport { IconContext } from 'react-icons';\r\nimport { BsFillArrowUpCircleFill, BsFillArrowDownCircleFill } from \"react-icons/bs\";\r\nimport { FaEquals } from \"react-icons/fa\";\r\nimport FunctionGraph from './FunctionGraph.js';\r\nimport Pomodoro from './DashboardComponents/Pomodoro';\r\nimport TaskWidget from './DashboardComponents/TaskWidget';\r\nimport axios from 'axios';\r\nimport { useAuth0, withAuthenticationRequired} from \"@auth0/auth0-react\";\r\n\r\nfunction Dashboard() {\r\n\r\n    //Getting username and authentication status\r\n    const { user, isAuthenticated } = useAuth0();\r\n\r\n    //Defining variables for all metrics - most productive time, most creative time, task switches, etc.\r\n    const [productivetime, setProductivetime] = useState();\r\n    const [creativetime, setCreativetime] = useState(); \r\n    const [taskswitches, setTaskswitches] = useState();\r\n    const [distractingsites, setDistractingsites]  = useState();\r\n    const [timepertask, setTimepertask] = useState();\r\n    const [unscaledscore, setUnscaledscore] = useState();\r\n\r\n    //Defining variables for <div> change icons \r\n    const [taskchange, setTaskchange] = useState();\r\n    const [timechange, setTimechange] = useState();\r\n    const [distractingchange, setDistractingchange] = useState();\r\n    const [unscaledchange, setUnscaledchange] = useState();\r\n    const [graphdiv, setGraphdiv] = useState();\r\n    const [pomodorodiv, setPomodorodiv] = useState();\r\n    const [TaskDiv, setTaskDiv] = useState();\r\n\r\n    //Tasks handling\r\n\r\n    //Defining a function that returns the average of an array (necessary for procressing)\r\n    const average = arr => arr.reduce((a,b) => a + b, 0) / arr.length;\r\n\r\n    //Function to display up or down icon - depending on the input value\r\n    const displayChange = (value_array, metric) => {\r\n\r\n        let div_value;\r\n        if (metric === \"distracting_sites\") {\r\n            if (value_array.at(-1) > value_array.at(-2)) {\r\n                div_value = <div className = \"change-icon\" class = \"text-md ml-1 mb-0.5\">\r\n                                    <IconContext.Provider value={{ color: '#f87171' }}>\r\n                                        <BsFillArrowUpCircleFill/>\r\n                                    </IconContext.Provider>\r\n                              </div>\r\n                return div_value;\r\n            } else if (value_array.at(-1) < value_array.at(-2)) {\r\n                div_value = <div className = \"change-icon\" class = \"text-md ml-1 mb-0.5\">\r\n                                    <IconContext.Provider value={{ color: '#34d399' }}>\r\n                                        <BsFillArrowDownCircleFill/>\r\n                                    </IconContext.Provider>\r\n                              </div>\r\n                return div_value;\r\n            } else {\r\n                div_value = <div className = \"change-icon\" class = \"text-sm ml-1 mb-0.5\">\r\n                                    <IconContext.Provider value={{ color: '#d9d2d2' }}>\r\n                                        <FaEquals/>\r\n                                    </IconContext.Provider>\r\n                              </div>\r\n                return div_value;\r\n            }\r\n        } else {\r\n            if (value_array.at(-1) > value_array.at(-2)) {\r\n                div_value = <div className = \"change-icon\" class = \"text-md ml-1 mb-0.5\">\r\n                                    <IconContext.Provider value={{ color: '#34d399' }}>\r\n                                        <BsFillArrowUpCircleFill class = \"hover:\"/>\r\n                                    </IconContext.Provider>\r\n                              </div>\r\n                return div_value;\r\n            } else if (value_array.at(-1) < value_array.at(-2)) {\r\n                div_value = <div className = \"change-icon\" class = \"text-md ml-1 mb-0.5\">\r\n                                    <IconContext.Provider value={{ color: '#f87171' }}>\r\n                                        <BsFillArrowDownCircleFill class = \"hover:\"/>\r\n                                    </IconContext.Provider>\r\n                              </div>\r\n                return div_value;\r\n            } else {\r\n                div_value = <div className = \"change-icon\" class = \"text-sm ml-1 mb-0.5\">\r\n                                    <IconContext.Provider value={{ color: '#d9d2d2' }}>\r\n                                        <FaEquals class = \"hover:\"/>\r\n                                    </IconContext.Provider>\r\n                              </div>\r\n                return div_value;\r\n            }\r\n        }\r\n    }\r\n  \r\n    //Checks if user is authenticated - if yes, query backend and process data. If no, do nothing.\r\n\r\n    useEffect(() => {\r\n        const checkAuth = async() => {\r\n            if (isAuthenticated) {\r\n                const email = user.email;\r\n                var stringemail = email;\r\n                axios.get('/api/getData?username=' + email + '&source=energy-tracker').then((response) =>{\r\n                    var data = response.data;\r\n                    const data_values = Object.values(data);\r\n                    const data_array = data_values[1];\r\n                    var task_switches = [];\r\n                    var labels = [];\r\n                    var div_scores = [];\r\n                    var unscaled_scores = [];\r\n                    var average_task_times = [];\r\n                    var n_distracting_tasks = [];\r\n            \r\n                    data_array.forEach(data_array => {\r\n                        labels.push(data_array.hour);\r\n                        task_switches.push(data_array.task_switches);\r\n                        div_scores.push(data_array.divided_energy_score);\r\n                        unscaled_scores.push(data_array.unscaled_energy_score);\r\n                        average_task_times.push(data_array.average_task_time);\r\n                        n_distracting_tasks.push(data_array.distracting_tasks);\r\n                    });\r\n                    setTaskswitches(average(task_switches).toFixed(0));\r\n        \r\n                    //Finding the min and max of the div_scores array, to find the most creative and productive times\r\n                    var min_score = Math.min(...div_scores);\r\n                    var min_idx = div_scores.indexOf(min_score);\r\n            \r\n                    var max_score = Math.max(...div_scores);\r\n                    var max_idx = div_scores.indexOf(max_score);\r\n            \r\n                    setCreativetime(labels[min_idx]);\r\n                    setProductivetime(labels[max_idx]);\r\n                    \r\n                    //Distracting Tasks - average\r\n                    setDistractingsites(average(n_distracting_tasks).toFixed(0))\r\n                    //Average of Average Task Times\r\n                    setTimepertask(average(average_task_times).toFixed(0))\r\n                    //Average of Unscaled Scores\r\n                    setUnscaledscore(average(unscaled_scores).toFixed(0))\r\n        \r\n                    //Configuring display - displaying up or down arrows to reflect change in metrics\r\n        \r\n                    setTaskchange(displayChange(task_switches, 'task_switches'));\r\n                    setTimechange(displayChange(average_task_times, 'avg_time_per_task'));\r\n                    setDistractingchange(displayChange(n_distracting_tasks, 'distracting_sites'));\r\n                    setUnscaledchange(displayChange(unscaled_scores, 'unscaled_energy_score'));\r\n        \r\n                });\r\n                console.log(stringemail);\r\n                setGraphdiv(<FunctionGraph sendemail = {stringemail} />);\r\n                setPomodorodiv(<Pomodoro user_email = {stringemail}/>)\r\n                setTaskDiv(<TaskWidget user_email = {stringemail}/>)\r\n            } else {\r\n                setGraphdiv(<div class = \"flex font-bold text-lg text-center justify-center items-center\">Loading...</div>);\r\n                setPomodorodiv(<div class = \"flex font-bold text-lg text-center justify-center items-center\">Loading...</div>);\r\n                setTaskDiv(<div class = \"flex font-bold text-lg text-center justify-center items-center\">Loading...</div>)\r\n            }\r\n        }\r\n        checkAuth();\r\n    }, [])\r\n    \r\n    //Define divs - different elements will be displayed depending on whether the value is undefined\r\n    let prod_div;\r\n    let task_display;\r\n    let distracting_display;\r\n    let time_display;\r\n    let unscaled_display;\r\n\r\n    if (productivetime === undefined) {\r\n        prod_div = <div className = 'most-productive-time' class = 'text-sm w-11/12 mt-4 font-light'>This dashboard will be filled automatically every hour - and will get more accurate as you continue to use the Crysta energy tracker!</div>;\r\n    } else {\r\n        prod_div = <div className = 'most-productive-time' class = 'text-3xl mt-4 font-light'>{productivetime}</div>;\r\n    };\r\n\r\n    if (taskswitches === 'NaN') {\r\n        task_display = <div class = \"text-3xl font-light mb-2\">0</div>;\r\n    } else {\r\n        task_display = <div class = \"text-3xl font-light mb-2\">{taskswitches}</div>;\r\n    }\r\n\r\n    if (distractingsites === 'NaN') {\r\n        distracting_display = <div class = \"text-3xl font-light mb-2\">0</div>;\r\n    } else {\r\n        distracting_display = <div class = \"text-3xl font-light mb-2\">{distractingsites}</div>;\r\n    }\r\n\r\n    if (timepertask === 'NaN') {\r\n        time_display = <div class = \"text-3xl font-light mb-2\">0</div>;\r\n    } else {\r\n        time_display = <div class = \"text-3xl font-light mb-2\">{timepertask}</div>;\r\n    }\r\n\r\n    if (unscaledscore === 'NaN') {\r\n        unscaled_display = <div class = \"text-3xl font-light mb-2\">0</div>;\r\n    } else {\r\n        unscaled_display = <div class = \"text-3xl font-light mb-2\">{unscaledscore}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className = \"container-energy\" class = \"flex flex-col top-0 justify-items-center bg-gradient-to-r from-blue-400 via-green-300 to-green-200 h-screen w-screen\">\r\n            <div className = \"intro-container\" class = \"flex w-11/12 m-auto mr-12\">\r\n                <div className = \"Introduction/Greeting\" class = \"text-3xl mt-2 font-semibold text-white\">Hey there! Let's get things done.</div>    \r\n            </div>\r\n            <div className = \"insights-energy-container\" class = \"flex h-5/6 w-11/12 -mt-2 m-auto\">\r\n                <div className = \"insights-menu\" class = \"flex flex-col text-center bg-gray-50 shadow-md rounded-3xl h-full w-1/5 m-auto items-center\">\r\n                    <div className = \"energy-level-heading\" class = \"flex bg-gradient-to-r from-blue-400 via-blue-400 to-green-300 h-8 w-11/12 rounded-3xl mt-2.5 justify-center\">\r\n                        <p class = \"text-white mt-1 font-semibold text-base\">INSIGHTS</p> \r\n                    </div>\r\n                    <div className = \"energy-level-heading\" class = \"flex bg-gray-200 h-8 w-11/12 rounded-3xl mt-8 justify-center \">\r\n                        <p class = \"text-blue-700 mt-1.5 font-semibold text-sm\">MOST PRODUCTIVE TIME</p> \r\n                    </div>\r\n                    {prod_div}\r\n                    <div className = \"energy-level-heading\" class = \"flex bg-gray-200 h-8 w-11/12 rounded-3xl mt-5 justify-center \">\r\n                        <p class = \"text-red-700 mt-1.5 font-semibold text-sm\">MOST CREATIVE TIME</p> \r\n                    </div>\r\n                    <div className = \"most-creative-time\" class = \"text-3xl mt-4 font-light\">{creativetime}</div>\r\n\r\n                    <div className = \"energy-level-heading\" class = \"flex bg-gray-200 h-8 w-11/12 rounded-3xl mt-5 justify-center \">\r\n                        <p class = \"text-black mt-1.5 font-semibold text-sm\">OTHER INSIGHTS</p> \r\n                    </div>\r\n                    <div className = \"other-metrics\" class = \"grid grid-cols-2 w-11/12 mt-6 gap-y-4 bg-gray-200 rounded-2xl mb-2.5\"> \r\n                        <div className = \"task-switches\" class = \"flex flex-col items-center justify-center ml-2 mt-2 bg-gray-100 rounded-2xl mr-2\">\r\n                            <div class = \"text-xs font-semibold mt-3\">TASK SWITCHES</div>\r\n                            <div className = \"score-and-ranking-container\" class = \"flex justify-between items-center w-12/12\">{task_display}{taskchange}</div>\r\n                        </div>\r\n                        <div className = \"distracting-sites\" class = \"flex flex-col justify-center items-center mr-2 mt-2 bg-gray-100 rounded-2xl ml-2\">\r\n                            <div class = \"text-xs font-semibold mt-3\"># DISTRACTING SITES</div>\r\n                            <div className = \"score-and-ranking-container\" class = \"flex flex-row items-center\">{distracting_display}{distractingchange}</div>\r\n                        </div>\r\n                        <div className = \"time-per-task\" class = \"flex flex-col justify-center items-center ml-2 mb-2 bg-gray-100 rounded-2xl mr-2\">\r\n                            <div class = \"text-xs font-semibold mt-3\">SECONDS SPENT PER TASK</div>\r\n                            <div className = \"score-and-ranking-container\" class = \"flex flex-row items-center\">{time_display}{timechange}</div>\r\n                        </div>\r\n                        <div className = \"unscaled-score\" class = \"flex flex-col justify-center items-center mr-2 mb-2 bg-gray-100 rounded-2xl ml-2\">\r\n                            <div class = \"text-xs font-semibold mt-3\">SCORE WITHOUT DISTRACTIONS</div>\r\n                            <div className = \"score-and-ranking-container\" class = \"flex flex-row items-center\">{unscaled_display}{unscaledchange}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className = \"energy-level-heading\" class = \"flex bg-gray-200 w-11/12 rounded-3xl mt-3 justify-center \">\r\n                        <p class = \"text-black mt-3 mb-3 ml-2 mr-2 text-xs\">We'd love your feedback! <a href=\"https://forms.gle/wvdWMDpoVSbqK2cAA\" target = \"_blank\" class=\"font-semibold underline text-blue-400 hover:text-green-400 transition duration-250 ease-linear\">How are you liking Crysta?</a></p> \r\n                    </div>\r\n                </div>\r\n                <div className = \"energy-menu\" class = \"flex bg-gray-50 shadow-md rounded-3xl h-full w-6/12 m-auto\">\r\n                    <div className = \"energy-level-heading\" class = \"flex bg-gradient-to-r from-blue-400 via-blue-400 to-green-300 h-8 w-64 rounded-3xl mt-2.5 ml-7 justify-center fixed\">\r\n                        <p class = \"text-white mt-1 font-semibold text-base\">YOUR ENERGY LEVELS</p> \r\n                    </div>\r\n                    <div className = \"energy-graph-container\" class = \"flex-1 flex-col ml-7 mt-12 mr-8 mb-0 w-5/6 h-5/6\">\r\n                        {graphdiv}\r\n                    </div>\r\n                </div>\r\n                <div className = \"pomodoro-tasks-container\" class = \"flex flex-col h-full w-3/12 m-auto \">\r\n                    {pomodorodiv}\r\n                    {TaskDiv}\r\n                </div>\r\n            </div>\r\n\r\n            <div className = \"version\" class = \"text-right text-sm text-black font-semibold mr-5 mb-5\">MVP - v.0.2 | ©Crysta 2021</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withAuthenticationRequired(Dashboard, {\r\n    onRedirecting: () => <div> Hey there! We're just redirecting you 😁</div>,\r\n})\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst LogoutButton = () => {\r\n  const { logout } = useAuth0();\r\n  return (\r\n    <button\r\n      className=\"btn btn-danger btn-block\" class = \"font-medium text-gray-50 h-10 w-40 bg-blue-400 rounded-3xl hover:bg-green-400 transition duration-250 ease-linear\"\r\n      onClick={() =>\r\n        logout({\r\n          returnTo: window.location.origin,\r\n        })\r\n      }\r\n    >\r\n      Log Out\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;","import React from 'react';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport CrystaLogo from './components/CrystaLogo.svg';\r\nimport LogoutButton from './components/logout-button';\r\n\r\nconst Logout = () => {\r\n  const { logout } = useAuth0();\r\n  return (\r\n    <div className = \"NavContainer\" class = 'flex flex-col justify-center items-center bg-gradient-to-r from-blue-400 via-green-300 to-green-200 h-screen w-screen'>\r\n    <div class = \"flex flex-col justify-center items-center bg-gray-50  rounded-3xl h-1/3 w-1/3 rounded-3xl shadow-lg\">\r\n      <div className = \"crysta-logo\" class = \"\">\r\n        <img src = {CrystaLogo} alt = \"CrystaLogo\"/>\r\n      </div>\r\n\r\n      <p class = \"font-medium text-center w-64 mb-4 mt-7 text-xl mr-5 ml-5\">We're sad to see you go. 😢 Come back soon!</p>\r\n\r\n      <div className=\"flex justify-center\">\r\n        <LogoutButton/>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Logout;","import './index.css';\r\nimport SideMenu from './components/SideMenu';\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport Login from './Login';\r\nimport Calendar from './pages/Calendar';\r\nimport Tasks from './pages/Tasks';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Logout from './Logout';\r\nimport axios from 'axios';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nfunction App() {\r\n\r\n  const { user, isAuthenticated } = useAuth0();\r\n\r\n  if (isAuthenticated) {\r\n    const usernameObject = {\r\n        username: user.email\r\n    };\r\n    axios.post('http://127.0.0.1:5000/user', usernameObject)\r\n        .then((res) => {\r\n      console.log(res.data)\r\n      }).catch(error => {\r\n      console.log(error)\r\n      });\r\n  }\r\n\r\n  return (\r\n      <Router>\r\n          <Route path='/' exact component={Login}/>\r\n          <Route path= '/Login' component={Login}/>\r\n          <SideMenu/>\r\n          <Switch>\r\n\r\n            <Route path='/pages/Dashboard' component={Dashboard}/>\r\n            <Route path='/pages/Tasks' component={Tasks}/>\r\n            <Route path='/pages/Calendar' component={Calendar}/>\r\n            <Route path='/pages/Logout'  component={Logout}/>\r\n            \r\n          </Switch>\r\n      </Router>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\n\r\n\r\nReactDOM.render(\r\n\r\n    <Auth0Provider\r\n      domain=\"crysta.us.auth0.com\"\r\n      clientId=\"7wM95Dzz4zhafR6dCBB6PhZdyvKQgDMH\"\r\n      //Development\r\n      // redirectUri=\"http://localhost:3000/pages/Dashboard/continue?state=THE_ORIGINAL_STATE\"\r\n      //Staging\r\n      // redirectUri=\"https://crysta-staging.herokuapp.com/pages/Dashboard/continue?state=THE_ORIGINAL_STATE\"\r\n      //Production\r\n      redirectUri=\"https://crysta-app.herokuapp.com/pages/Dashboard/continue?state=THE_ORIGINAL_STATE\"\r\n      \r\n    >\r\n      <App />\r\n    </Auth0Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}