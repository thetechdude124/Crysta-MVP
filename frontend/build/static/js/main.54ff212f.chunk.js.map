{"version":3,"sources":["components/SideMenuData.js","components/CrystaLogo.svg","components/SideMenu.js","components/login-button.js","Login.js","pages/Calendar.js","pages/Tasks.js","pages/FunctionGraph.js","pages/DashboardComponents/Pomodoro_Chime.mp3","pages/DashboardComponents/CrystaLogo.svg","pages/DashboardComponents/Pomodoro.js","pages/DashboardComponents/TaskWidget.js","pages/Dashboard.js","components/logout-button.js","Logout.js","App.js","index.js"],"names":["SideMenuData","title","path","icon","cName","SideMenu","useState","sidebar","setSidebar","showSidebar","Provider","value","color","to","className","class","onClick","src","CrystaLogo","alt","map","item","index","LoginButton","loginWithRedirect","useAuth0","Login","href","target","withAuthenticationRequired","onRedirecting","FunctionGraph","props","chart","setChart","useEffect","getData","a","labels","div_scores","axios","get","sendemail","then","response","console","log","data","Object","values","forEach","data_array","push","hour","divided_energy_score","datasets","label","borderWidth","borderColor","pointBackgroundColor","tension","pointRadius","width","height","options","maintainAspectRatio","responsive","BreakTime","timebreak","timeChange","Pomodoro","user","isAuthenticated","timedisplay","setTimedisplay","breaktime","setBreaktime","timerOn","setTimeron","onBreak","setOnBreak","Audio","chime","pomodorochime","sessionCounter","setSessioncounter","playSound","currentTime","volume","play","amount","destination","prev","time","n_minutes","Math","floor","n_seconds","convertTime","Notification","permission","requestPermission","alert","Date","getTime","nextDate","onBreakVariable","interval","setInterval","body","logo","localStorage","clear","setItem","clearInterval","getItem","TaskWidget","prod_div","task_display","distracting_display","time_display","unscaled_display","productivetime","setProductivetime","creativetime","setCreativetime","taskswitches","setTaskswitches","distractingsites","setDistractingsites","timepertask","setTimepertask","unscaledscore","setUnscaledscore","taskchange","setTaskchange","timechange","setTimechange","distractingchange","setDistractingchange","unscaledchange","setUnscaledchange","graphdiv","setGraphdiv","average","arr","reduce","b","length","displayChange","value_array","metric","at","checkAuth","email","stringemail","task_switches","unscaled_scores","average_task_times","n_distracting_tasks","unscaled_energy_score","average_task_time","distracting_tasks","toFixed","min_score","min","min_idx","indexOf","max_score","max","max_idx","undefined","LogoutButton","logout","returnTo","window","location","origin","Logout","App","usernameObject","username","name","post","res","catch","error","exact","component","Dashboard","Tasks","Calendar","ReactDOM","render","domain","clientId","redirectUri","document","getElementById"],"mappings":"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","file":"static/js/main.54ff212f.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as Io5cons from 'react-icons/io5';\r\nimport * as BsIcons from 'react-icons/bs';\r\nimport * as BIcons from 'react-icons/bi';\r\n\r\n\r\nexport const SideMenuData = [\r\n    {\r\n        title: 'DASHBOARD',\r\n        path: '/pages/Dashboard',\r\n        icon: <BsIcons.BsGraphUp/>, \r\n        cName: 'side-menu-text'\r\n    },\r\n    {\r\n        title: 'TASKS',\r\n        path: '/pages/Tasks',\r\n        icon: <Io5cons.IoCheckmarkSharp/>,\r\n        cName: 'side-menu-text'\r\n    },\r\n    {\r\n        title: 'CALENDAR',\r\n        path: '/pages/Calendar',\r\n        icon: <BsIcons.BsCalendar/>, \r\n        cName: 'side-menu-text'\r\n    },\r\n    {\r\n        title: 'LOG OUT',\r\n        path: '/pages/Logout',\r\n        icon: <BIcons.BiExit/>, \r\n        cName: 'side-menu-text'\r\n    }\r\n]","export default __webpack_public_path__ + \"static/media/CrystaLogo.3734c1e1.svg\";","import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as Iocons from 'react-icons/io';\r\nimport { SideMenuData } from './SideMenuData';\r\nimport './SideMenu.css';\r\nimport { IconContext } from 'react-icons';\r\nimport CrystaLogo from './CrystaLogo.svg';\r\n\r\nfunction SideMenu() {\r\n    const [sidebar, setSidebar] = useState(false);\r\n\r\n    const showSidebar = () => setSidebar(!sidebar);\r\n    return (\r\n        <>\r\n            <IconContext.Provider value={{ color: '#fff' }}>\r\n                <Link to=\"#\" className = 'open-menu-arrow' class = \"flex m-3 text-2xl flex hover:bg-green-200 rounded-md z-40 fixed\">\r\n                    <Iocons.IoIosArrowForward onClick ={showSidebar}/>\r\n                </Link>\r\n                {/* <div className = 'SideMenu' class = \" z-50 fixed flex items-center bg-gray-50 shadow-md h-9 w-screen rounded-r-lg\">\r\n\r\n                </div> */}\r\n            </IconContext.Provider>\r\n            \r\n            <nav className={sidebar ? \"side-menu active\" : 'side-menu'}>\r\n                <ul className = 'side-menu-items' onClick = {showSidebar}>\r\n                    <li className = \"side-menu-toggle\">\r\n                        <Link to = \"#\" className = 'open-menu-arrow' class = \"text-2xl -pl3 hover:bg-green-200 rounded-md\">\r\n                            <Iocons.IoIosArrowBack />\r\n                        </Link> \r\n                    </li>\r\n                    <div className = \"crysta-logo\" class = \"ml-10 -mt-14 mb-5\">\r\n                        <img src = {CrystaLogo} alt = \"CrystaLogo\" class = \"content-between\"/>\r\n                    </div>\r\n                    {SideMenuData.map((item, index) => {\r\n                        return (\r\n                            <li key={index} className={item.cName} class = \"flex flex-col text-xl pl-3 pt-9 font-semibold hover:bg-green-200 rounded-lg -pt-5 pb-6 pl-20 pr-16\">\r\n                                <Link to = {item.path}> \r\n                                    <div class = \"-ml-9 -mb-6\">{item.icon}</div>\r\n                                    <span>{item.title}</span>\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>    \r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideMenu;\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n  return (\r\n    <button\r\n      className=\"btn btn-primary btn-block\" class = \"font-medium text-gray-50 h-12 w-40 bg-blue-400 rounded-3xl hover:bg-green-400 transition duration-250 ease-linear\"\r\n      onClick={() => loginWithRedirect()}\r\n    >\r\n      Log In | Sign Up\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LoginButton;","import React from \"react\";\r\nimport LoginButton from \"./components/login-button\";\r\nimport CrystaLogo from './components/CrystaLogo.svg';\r\n\r\nconst Login = () => (\r\n  <div className = \"NavContainer\" class = 'flex flex-col justify-center items-center bg-gradient-to-r from-blue-400 via-green-300 to-green-200 h-screen w-screen'>\r\n    <div class = \"flex flex-col justify-center items-center bg-gray-50 h-1/3 w-1/3 rounded-3xl shadow-lg \">\r\n      <div className = \"crysta-logo\">\r\n        <img src = {CrystaLogo} alt = \"CrystaLogo\"/>\r\n      </div>\r\n\r\n      <p class = \"font-normal text-center mb-7 mt-7 mr-5 ml-5 text-xl\">Glad to see you! Make sure you've downloaded the latest version of our <a href=\"https://tinyurl.com/Crysta-MVP\" target = \"_blank\" class=\"font-semibold underline text-blue-400 hover:text-green-400 transition duration-250 ease-linear\">energy tracker</a> first.</p>\r\n\r\n      <div className=\"flex justify-center\">\r\n        <LoginButton/>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Login;","import React from 'react';\r\nimport { withAuthenticationRequired } from \"@auth0/auth0-react\";\r\n\r\nfunction Calendar() {\r\n  return (\r\n    <div className='Calendar' class = \"flex items-center justify-center bg-gradient-to-r from-blue-400 via-green-300 to-green-200 h-screen \">\r\n      <h1 class = \"fixed text-black font-bold text-8xl\">📅Calendar.</h1>\r\n      <h1 class = \"mt-40 text-white font-semibold text-2xl\">Coming soon in a later release. In the meanwhile, check out our weekly newsletter for updates!</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withAuthenticationRequired(Calendar, {\r\n  onRedirecting: () => <div> Hey there! We're just redirecting you 😁</div>,\r\n})","import React from 'react';\r\nimport { withAuthenticationRequired } from \"@auth0/auth0-react\";\r\n\r\nfunction Tasks() {\r\n  return (\r\n    <div className='Tasks' class = \"flex items-center justify-center bg-gradient-to-r from-blue-400 via-green-300 to-green-200 h-screen\">\r\n      <h1 class = \"fixed text-black font-bold text-8xl\">✔️Tasks.</h1>\r\n      <h1 class = \"mt-40 text-white font-semibold text-2xl\">Coming soon in a later release. In the meanwhile, check out our weekly newsletter for updates!</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withAuthenticationRequired(Tasks, {\r\n  onRedirecting: () => <div> Hey there! We're just redirecting you 😁</div>,\r\n})","import React, { useEffect, useState } from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport axios from 'axios';\r\n\r\nexport default function FunctionGraph(props) {\r\n    //Setting up state variables\r\n    const [chart, setChart] = useState();\r\n\r\n    //Fetching data from the API:\r\n    useEffect(() => {\r\n        const getData = async() => {\r\n            let labels = [];\r\n            let div_scores = [];\r\n            await axios.get('/api/getData?username=' + props.sendemail).then((response) => {\r\n                console.log(props.sendemail);\r\n                var data = response.data;\r\n                const data_values = Object.values(data);\r\n                const data_array = data_values[1];\r\n                data_array.forEach(data_array => {\r\n                    labels.push(data_array.hour);\r\n                    div_scores.push(data_array.divided_energy_score);\r\n                });\r\n            });\r\n            setChart({\r\n                labels: labels,\r\n                datasets: [{\r\n                    label: 'ENERGY SCORE',\r\n                    data: div_scores,\r\n                    borderWidth: 8,\r\n                    borderColor: \"rgba(20, 177, 183, 0.4)\",\r\n                    pointBackgroundColor: \"rgb(77, 77, 77, 1)\",\r\n                    tension: 0.4,\r\n                    pointRadius: 8,\r\n                }]\r\n            });\r\n        }\r\n        getData();\r\n    }, []);\r\n    \r\n    return (\r\n        <div className = \"energy-graph-container\" >\r\n            <Line \r\n                data = {chart} \r\n                width = {770}\r\n                height = {690}\r\n                options = {{\r\n                    maintainAspectRatio: true,\r\n                    responsive: true,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/Pomodoro_Chime.496ed2cd.mp3\";","export default __webpack_public_path__ + \"static/media/CrystaLogo.55e6db75.svg\";","import { HackTimer } from 'hacktimer';\r\nimport React, {Component, useState} from 'react';\r\nimport { AiOutlinePlusCircle, AiOutlineMinusCircle, AiFillPlusSquare, AiFillMinusSquare } from \"react-icons/ai\";\r\nimport { IconContext } from 'react-icons';\r\nimport chime from './Pomodoro_Chime.mp3';\r\nimport logo from './CrystaLogo.svg';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport axios from 'axios';\r\n\r\nfunction Pomodoro() {\r\n\r\n    const { user, isAuthenticated } = useAuth0;\r\n\r\n    //Setting up variables for time, break, and states\r\n    const [timedisplay, setTimedisplay] = useState(25*60);\r\n    const [breaktime, setBreaktime] = useState(5*60);\r\n    const [timerOn, setTimeron] = useState(false);\r\n    const [onBreak, setOnBreak] = useState(false);\r\n    const [pomodorochime, setPomodorochime] = useState(new Audio(chime));\r\n    const [sessionCounter, setSessioncounter] = useState(0);\r\n\r\n    const playSound = () => {\r\n        pomodorochime.currentTime = 0;\r\n        pomodorochime.volume = 1;\r\n        pomodorochime.play();\r\n    }\r\n\r\n    // const postData = () => {\r\n    //     if (isAuthenticated) {\r\n    //         axios.post\r\n    //     }\r\n    // }\r\n\r\n    const convertTime = (time) => {\r\n        let n_minutes = Math.floor(time/60);\r\n        let n_seconds = time % 60;\r\n        return (n_minutes < 10 ? \"0\" + n_minutes: n_minutes) + \":\" + (n_seconds < 10 ? \"0\" + n_seconds: n_seconds)\r\n    }\r\n\r\n    const convertBreaktime = (timebreak) => {\r\n        let break_minutes = Math.floor(timebreak/60);\r\n        return (break_minutes)\r\n    }\r\n\r\n    const timeChange = (amount, destination) => {\r\n\r\n        if (destination === \"break\") {\r\n            //Check if breaktime is at 5 minutes and if the user is requesting to lower the time - if true, simply don' return anything\r\n            if (breaktime <= 300 && amount < 0) {\r\n                return;\r\n            }\r\n            setBreaktime((prev) => prev + amount);\r\n\r\n        } else if (destination === \"focus\") {\r\n            if (timedisplay <= 300 && amount < 0) {\r\n                return;\r\n            }\r\n            setTimedisplay((prev) => prev + amount);\r\n            if(!timerOn) {\r\n                setTimedisplay(timedisplay + amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    function sessionNotification() {\r\n        const session_notif = new Notification(\"Ready to get back to work? 🔥\", {\r\n            body: \"Hey there! Your break has ended. Let's get back in the game!\",\r\n            icon: logo\r\n        })\r\n    };\r\n\r\n    function breakNotification() {\r\n        const break_notif = new Notification(\"Time for a break! 🌊\", {\r\n            body: \"Hey there! Your work session has ended. Feel free to sit back, get a glass of water, and enjoy!\",\r\n            icon: logo\r\n        })\r\n    };\r\n\r\n    const notificationHandler = () => {\r\n\r\n        //See if notification permission is granted or not\r\n        console.log(Notification.permission);\r\n\r\n        if (Notification.permission === \"granted\") {\r\n            console.log('Notification permission granted. Starting session!')\r\n        } else if (Notification.permission !== \"denied\") {\r\n            Notification.requestPermission().then(permission => {\r\n                console.log(permission);\r\n                if (permission === \"denied\") {\r\n                    alert(\"Hey there! Don't worry - we just need your notification permission to remind you when your work sessions and breaks are over. Thanks :D\");\r\n                    Notification.requestPermission();\r\n                }\r\n            })\r\n        } else if (Notification.permission === \"denied\") {\r\n            alert(\"Hey there! Don't worry - we just need your notification permission to remind you when your work sessions and breaks are over. Thanks :D\");\r\n            Notification.requestPermission();\r\n        }\r\n    }\r\n\r\n    const sendToDB = () => {\r\n        //Send pomodoro session data to the database -> number of sessions completed \r\n        //How would we track the energy levels for that particular session?\r\n        \r\n    }\r\n\r\n    const startTimer = () => {\r\n        notificationHandler();\r\n        let milliseconds = 1000;\r\n        let date = new Date().getTime();\r\n        let nextDate = new Date().getTime() + milliseconds;\r\n        let onBreakVariable = onBreak;\r\n        //If the timer is not on:\r\n        if (!timerOn) {\r\n            //Every 30 miliseconds, we compare the difference between the old date and new date - updating the display.\r\n            let interval = setInterval(() => {\r\n                date = new Date().getTime();\r\n                if (date > nextDate) {\r\n                    setTimedisplay((prev) => {\r\n                        if (prev <= 0 && !onBreakVariable) {\r\n                            playSound();\r\n                            breakNotification();\r\n                            setSessioncounter(sessionCounter + 1);\r\n                            onBreakVariable = true;\r\n                            setOnBreak(true);\r\n                            return breaktime;\r\n                        } else if (prev <= 0 && onBreakVariable) {\r\n                            playSound();\r\n                            sessionNotification();\r\n                            onBreakVariable = false;\r\n                            setOnBreak(false);\r\n                            return timedisplay;\r\n                        }\r\n                        return prev - 1;\r\n                    });\r\n                    nextDate += milliseconds;\r\n                }\r\n            }, 30);\r\n            localStorage.clear();\r\n            localStorage.setItem('interval-id', interval);\r\n        }\r\n        if (timerOn) {\r\n            clearInterval(localStorage.getItem('interval-id'));\r\n        }\r\n        setTimeron(!timerOn);\r\n    }\r\n\r\n    const timeReset = () => {\r\n        setTimedisplay(25*60);\r\n        setBreaktime(5*60);\r\n        setOnBreak(false);\r\n    }\r\n\r\n    return (\r\n    <div className = \"pomodoro-timer\" class = \"flex flex-auto flex-col text-center bg-gray-50 rounded-3xl h-1/2 w-full m-auto shadow-md mb-2.5 items-center\">\r\n        <div className = \"pomodoro-heading\" class = \"flex bg-gradient-to-r from-blue-400 via-blue-400 to-green-300 h-8 w-11/12 rounded-3xl mt-2.5 justify-center text-center\">\r\n            <p class = \"text-white mt-1 font-semibold text-base\">POMODORO TIMER</p> \r\n        </div>\r\n        <div className = \"work-session-text\" class = \"text-sm font-light mt-2.5 mb-2.5\">Start a work session. Remember to allow notifications!</div>\r\n        <div className = \"timer-element\" class = \"flex items-center flex-col justify-center w-11/12 h-2/5 bg-gradient-to-r from-blue-400 via-blue-400 to-green-300 rounded-3xl\">\r\n            <p className = \"session-or-break\" class = \"flex text-blue-100 font-semibold text-lg mt-0.5 -mb-2\">{ onBreak ? \"BREAK\": \"SESSION\"}</p>\r\n            <div className = \"icons-display\" class = \"flex items-center\">\r\n                <div className = \"plus-icon\" class = \"text-3xl mr-5 mt-2\">\r\n                    <IconContext.Provider value={{ color: '#ffffff' }}>\r\n                        <AiFillMinusSquare class = \"hover:bg-green-200 rounded-md z-40\" onClick = {() => timeChange(-300, \"focus\")}/>\r\n                    </IconContext.Provider>\r\n                </div>\r\n                <p className = \"work-time\" class = \"font-bold text-white text-6xl\">{convertTime(timedisplay)}</p>\r\n                <div className = \"plus-icon\" class = \"text-3xl ml-5 mt-2\">\r\n                    <IconContext.Provider value={{ color: '#ffffff' }}>\r\n                        <AiFillPlusSquare class = \"hover:bg-green-200 rounded-md z-40\" onClick = {() => timeChange(300, \"focus\")}/>\r\n                    </IconContext.Provider>\r\n                </div>\r\n            </div>\r\n            <BreakTime timebreak = {convertBreaktime(breaktime)} timeChange = {timeChange}/>\r\n        </div>\r\n        <div className = \"button-container\" class = \"flex flex-row\">\r\n            <button className = \"reset-button\" class = \"font-medium text-gray-50 h-10 w-32 bg-blue-400 rounded-3xl hover:bg-green-400 transition duration-250 ease-linear mt-5 mr-4\" onClick = {timeReset}>RESET</button>\r\n            <button className = \"stop-button\" class = \"font-medium text-gray-50 h-10 w-32 bg-green-400 rounded-3xl hover:bg-blue-400 transition duration-250 ease-linear mt-5\" onClick = {startTimer}>\r\n                {timerOn ? (\r\n                    <p class = \"flex font-medium text-gray-50 bg-red-400 rounded-3xl h-10 w-32 justify-center items-center hover:bg-yellow-400 transition duration-250 ease-linear\">STOP</p>\r\n                ) : (\r\n                    <>START</>\r\n                )}\r\n            </button>\r\n        </div>\r\n        <div className = \"number-sessions-text\" class = \"flex text-sm mt-4\">You've completed <p className = \"font-semibold text-green-500 number-sessions ml-1 mr-1\">{sessionCounter}</p> work sessions today.</div>\r\n    </div>\r\n    );\r\n}\r\n\r\nfunction BreakTime({timebreak, timeChange}) {\r\n    return (\r\n        <div className = \"break-container\" class = \"flex items-center\">\r\n            <div className = \"plus-icon\" class = \"text-md mr-2 mt-1.5\">\r\n                <IconContext.Provider value={{ color: '#ffffff' }}>\r\n                    <AiOutlineMinusCircle class = \"hover:bg-green-200 rounded-md z-40\" onClick = {() => timeChange(-300, \"break\")}/>\r\n                </IconContext.Provider>\r\n            </div>\r\n            <div className = \"break-time\" class = \"flex text-blue-100 font-semibold text-lg mt-1\">Break: <p className = \"font-semibold text-white number-sessions ml-1 mr-1\">{timebreak}</p> MIN</div>\r\n            <div className = \"plus-icon\" class = \"text-md ml-2 mt-1.5\">\r\n                <IconContext.Provider value={{ color: '#ffffff' }}>\r\n                    <AiOutlinePlusCircle class = \"hover:bg-green-200 rounded-md z-40\" onClick = {() => timeChange(300, \"break\")}/>\r\n                </IconContext.Provider>\r\n            </div>\r\n        </div>\r\n\r\n        )\r\n}\r\n\r\nexport default Pomodoro;","import React, {useState} from 'react';\r\n\r\nfunction TaskWidget() {\r\n\r\n    return (\r\n        <div className = \"task-widget-container\" class = \"flex flex-auto flex-col text-center bg-gray-50 rounded-3xl h-1/2 w-full m-auto shadow-md mt-3 items-center\">\r\n            <div className = \"task-widget-heading\" class = \"flex bg-gradient-to-r from-blue-400 via-blue-400 to-green-300 h-8 w-11/12 rounded-3xl mt-2.5 justify-center text-center\">\r\n                <p class = \"text-white mt-1 font-semibold text-base\">TASK WIDGET</p> \r\n            </div>\r\n            <div className = \"coming-soon-text\" class = \"text-sm font-light mt-2.5 mb-2.5\">Coming soon...</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskWidget;","import React, { useState, useEffect } from 'react';\r\nimport './Dashboard.css';\r\nimport { IconContext } from 'react-icons';\r\nimport { BsFillArrowUpCircleFill, BsFillArrowDownCircleFill } from \"react-icons/bs\";\r\nimport { FaEquals } from \"react-icons/fa\";\r\nimport FunctionGraph from './FunctionGraph.js';\r\nimport Pomodoro from './DashboardComponents/Pomodoro';\r\nimport TaskWidget from './DashboardComponents/TaskWidget';\r\nimport axios from 'axios';\r\nimport { useAuth0, withAuthenticationRequired} from \"@auth0/auth0-react\";\r\n\r\nfunction Dashboard() {\r\n\r\n    //Getting username and authentication status\r\n    const { user, isAuthenticated } = useAuth0();\r\n\r\n    //Defining variables for all metrics - most productive time, most creative time, task switches, etc.\r\n    const [productivetime, setProductivetime] = useState();\r\n    const [creativetime, setCreativetime] = useState(); \r\n    const [taskswitches, setTaskswitches] = useState();\r\n    const [distractingsites, setDistractingsites]  = useState();\r\n    const [timepertask, setTimepertask] = useState();\r\n    const [unscaledscore, setUnscaledscore] = useState();\r\n\r\n    //Defining variables for <div> change icons \r\n    const [taskchange, setTaskchange] = useState();\r\n    const [timechange, setTimechange] = useState();\r\n    const [distractingchange, setDistractingchange] = useState();\r\n    const [unscaledchange, setUnscaledchange] = useState();\r\n    const [graphdiv, setGraphdiv] = useState();\r\n\r\n    //Defining a function that returns the average of an array (necessary for procressing)\r\n    const average = arr => arr.reduce((a,b) => a + b, 0) / arr.length;\r\n\r\n    //Function to display up or down icon - depending on the input value\r\n    const displayChange = (value_array, metric) => {\r\n\r\n        let div_value;\r\n        if (metric === \"distracting_sites\") {\r\n            if (value_array.at(-1) > value_array.at(-2)) {\r\n                div_value = <div className = \"change-icon\" class = \"text-md ml-1 mb-0.5\">\r\n                                    <IconContext.Provider value={{ color: '#f87171' }}>\r\n                                        <BsFillArrowUpCircleFill/>\r\n                                    </IconContext.Provider>\r\n                              </div>\r\n                return div_value;\r\n            } else if (value_array.at(-1) < value_array.at(-2)) {\r\n                div_value = <div className = \"change-icon\" class = \"text-md ml-1 mb-0.5\">\r\n                                    <IconContext.Provider value={{ color: '#34d399' }}>\r\n                                        <BsFillArrowDownCircleFill/>\r\n                                    </IconContext.Provider>\r\n                              </div>\r\n                return div_value;\r\n            } else {\r\n                div_value = <div className = \"change-icon\" class = \"text-sm ml-1 mb-0.5\">\r\n                                    <IconContext.Provider value={{ color: '#d9d2d2' }}>\r\n                                        <FaEquals/>\r\n                                    </IconContext.Provider>\r\n                              </div>\r\n                return div_value;\r\n            }\r\n        } else {\r\n            if (value_array.at(-1) > value_array.at(-2)) {\r\n                div_value = <div className = \"change-icon\" class = \"text-md ml-1 mb-0.5\">\r\n                                    <IconContext.Provider value={{ color: '#34d399' }}>\r\n                                        <BsFillArrowUpCircleFill class = \"hover:\"/>\r\n                                    </IconContext.Provider>\r\n                              </div>\r\n                return div_value;\r\n            } else if (value_array.at(-1) < value_array.at(-2)) {\r\n                div_value = <div className = \"change-icon\" class = \"text-md ml-1 mb-0.5\">\r\n                                    <IconContext.Provider value={{ color: '#f87171' }}>\r\n                                        <BsFillArrowDownCircleFill class = \"hover:\"/>\r\n                                    </IconContext.Provider>\r\n                              </div>\r\n                return div_value;\r\n            } else {\r\n                div_value = <div className = \"change-icon\" class = \"text-sm ml-1 mb-0.5\">\r\n                                    <IconContext.Provider value={{ color: '#d9d2d2' }}>\r\n                                        <FaEquals class = \"hover:\"/>\r\n                                    </IconContext.Provider>\r\n                              </div>\r\n                return div_value;\r\n            }\r\n        }\r\n    }\r\n  \r\n    //Checks if user is authenticated - if yes, query backend and process data. If no, do nothing.\r\n\r\n    useEffect(() => {\r\n        const checkAuth = async() => {\r\n            if (isAuthenticated) {\r\n                const email = user.email;\r\n                var stringemail = email;\r\n                axios.get('/api/getData?username=' + email).then((response) =>{\r\n                    var data = response.data;\r\n                    const data_values = Object.values(data);\r\n                    const data_array = data_values[1];\r\n                    var task_switches = [];\r\n                    var labels = [];\r\n                    var div_scores = [];\r\n                    var unscaled_scores = [];\r\n                    var average_task_times = [];\r\n                    var n_distracting_tasks = [];\r\n            \r\n                    data_array.forEach(data_array => {\r\n                        labels.push(data_array.hour);\r\n                        task_switches.push(data_array.task_switches);\r\n                        div_scores.push(data_array.divided_energy_score);\r\n                        unscaled_scores.push(data_array.unscaled_energy_score);\r\n                        average_task_times.push(data_array.average_task_time);\r\n                        n_distracting_tasks.push(data_array.distracting_tasks);\r\n                    });\r\n                    setTaskswitches(average(task_switches).toFixed(0));\r\n        \r\n                    //Finding the min and max of the div_scores array, to find the most creative and productive times\r\n                    var min_score = Math.min(...div_scores);\r\n                    var min_idx = div_scores.indexOf(min_score);\r\n            \r\n                    var max_score = Math.max(...div_scores);\r\n                    var max_idx = div_scores.indexOf(max_score);\r\n            \r\n                    setCreativetime(labels[min_idx]);\r\n                    setProductivetime(labels[max_idx]);\r\n                    \r\n                    //Distracting Tasks - average\r\n                    setDistractingsites(average(n_distracting_tasks).toFixed(0))\r\n                    //Average of Average Task Times\r\n                    setTimepertask(average(average_task_times).toFixed(0))\r\n                    //Average of Unscaled Scores\r\n                    setUnscaledscore(average(unscaled_scores).toFixed(0))\r\n        \r\n                    //Configuring display - displaying up or down arrows to reflect change in metrics\r\n        \r\n                    setTaskchange(displayChange(task_switches, 'task_switches'));\r\n                    setTimechange(displayChange(average_task_times, 'avg_time_per_task'));\r\n                    setDistractingchange(displayChange(n_distracting_tasks, 'distracting_sites'));\r\n                    setUnscaledchange(displayChange(unscaled_scores, 'unscaled_energy_score'));\r\n        \r\n                });\r\n                console.log(stringemail);\r\n                setGraphdiv(<FunctionGraph sendemail = {stringemail} />);\r\n            } else {\r\n                setGraphdiv(<div class = \"flex font-bold text-lg text-center justify-center items-center\">Loading...</div>);\r\n            }\r\n        }\r\n        checkAuth();\r\n    }, [])\r\n    \r\n    //Define divs - different elements will be displayed depending on whether the value is undefined\r\n    let prod_div;\r\n    let task_display;\r\n    let distracting_display;\r\n    let time_display;\r\n    let unscaled_display;\r\n\r\n    if (productivetime === undefined) {\r\n        prod_div = <div className = 'most-productive-time' class = 'text-sm w-11/12 mt-4 font-light'>This dashboard will be filled automatically every hour - and will get more accurate as you continue to use the Crysta energy tracker!</div>;\r\n    } else {\r\n        prod_div = <div className = 'most-productive-time' class = 'text-3xl mt-4 font-light'>{productivetime}</div>;\r\n    };\r\n\r\n    if (taskswitches === 'NaN') {\r\n        task_display = <div class = \"text-3xl font-light mb-2\">0</div>;\r\n    } else {\r\n        task_display = <div class = \"text-3xl font-light mb-2\">{taskswitches}</div>;\r\n    }\r\n\r\n    if (distractingsites === 'NaN') {\r\n        distracting_display = <div class = \"text-3xl font-light mb-2\">0</div>;\r\n    } else {\r\n        distracting_display = <div class = \"text-3xl font-light mb-2\">{distractingsites}</div>;\r\n    }\r\n\r\n    if (timepertask === 'NaN') {\r\n        time_display = <div class = \"text-3xl font-light mb-2\">0</div>;\r\n    } else {\r\n        time_display = <div class = \"text-3xl font-light mb-2\">{timepertask}</div>;\r\n    }\r\n\r\n    if (unscaledscore === 'NaN') {\r\n        unscaled_display = <div class = \"text-3xl font-light mb-2\">0</div>;\r\n    } else {\r\n        unscaled_display = <div class = \"text-3xl font-light mb-2\">{unscaledscore}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className = \"container-energy\" class = \"flex flex-col top-0 justify-items-center bg-gradient-to-r from-blue-400 via-green-300 to-green-200 h-screen w-screen\">\r\n            <div className = \"intro-container\" class = \"flex w-11/12 m-auto mr-12\">\r\n                <div className = \"Introduction/Greeting\" class = \"text-3xl mt-2 font-semibold text-white\">Hey there! Let's get things done.</div>    \r\n            </div>\r\n            <div className = \"insights-energy-container\" class = \"flex h-5/6 w-11/12 -mt-2 m-auto\">\r\n                <div className = \"insights-menu\" class = \"flex flex-col text-center bg-gray-50 shadow-md rounded-3xl h-full w-1/5 m-auto items-center\">\r\n                    <div className = \"energy-level-heading\" class = \"flex bg-gradient-to-r from-blue-400 via-blue-400 to-green-300 h-8 w-11/12 rounded-3xl mt-2.5 justify-center\">\r\n                        <p class = \"text-white mt-1 font-semibold text-base\">INSIGHTS</p> \r\n                    </div>\r\n                    <div className = \"energy-level-heading\" class = \"flex bg-gray-200 h-8 w-11/12 rounded-3xl mt-8 justify-center \">\r\n                        <p class = \"text-blue-700 mt-1.5 font-semibold text-sm\">MOST PRODUCTIVE TIME</p> \r\n                    </div>\r\n                    {prod_div}\r\n                    <div className = \"energy-level-heading\" class = \"flex bg-gray-200 h-8 w-11/12 rounded-3xl mt-5 justify-center \">\r\n                        <p class = \"text-red-700 mt-1.5 font-semibold text-sm\">MOST CREATIVE TIME</p> \r\n                    </div>\r\n                    <div className = \"most-creative-time\" class = \"text-3xl mt-4 font-light\">{creativetime}</div>\r\n\r\n                    <div className = \"energy-level-heading\" class = \"flex bg-gray-200 h-8 w-11/12 rounded-3xl mt-5 justify-center \">\r\n                        <p class = \"text-black mt-1.5 font-semibold text-sm\">OTHER INSIGHTS</p> \r\n                    </div>\r\n                    <div className = \"other-metrics\" class = \"grid grid-cols-2 w-11/12 mt-6 gap-y-4 bg-gray-200 rounded-2xl mb-2.5\"> \r\n                        <div className = \"task-switches\" class = \"flex flex-col items-center justify-center ml-2 mt-2 bg-gray-100 rounded-2xl mr-2\">\r\n                            <div class = \"text-xs font-semibold mt-3\">TASK SWITCHES</div>\r\n                            <div className = \"score-and-ranking-container\" class = \"flex justify-between items-center w-12/12\">{task_display}{taskchange}</div>\r\n                        </div>\r\n                        <div className = \"distracting-sites\" class = \"flex flex-col justify-center items-center mr-2 mt-2 bg-gray-100 rounded-2xl ml-2\">\r\n                            <div class = \"text-xs font-semibold mt-3\"># DISTRACTING SITES</div>\r\n                            <div className = \"score-and-ranking-container\" class = \"flex flex-row items-center\">{distracting_display}{distractingchange}</div>\r\n                        </div>\r\n                        <div className = \"time-per-task\" class = \"flex flex-col justify-center items-center ml-2 mb-2 bg-gray-100 rounded-2xl mr-2\">\r\n                            <div class = \"text-xs font-semibold mt-3\">SECONDS SPENT PER TASK</div>\r\n                            <div className = \"score-and-ranking-container\" class = \"flex flex-row items-center\">{time_display}{timechange}</div>\r\n                        </div>\r\n                        <div className = \"unscaled-score\" class = \"flex flex-col justify-center items-center mr-2 mb-2 bg-gray-100 rounded-2xl ml-2\">\r\n                            <div class = \"text-xs font-semibold mt-3\">SCORE WITHOUT DISTRACTIONS</div>\r\n                            <div className = \"score-and-ranking-container\" class = \"flex flex-row items-center\">{unscaled_display}{unscaledchange}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className = \"energy-level-heading\" class = \"flex bg-gray-200 w-11/12 rounded-3xl mt-3 justify-center \">\r\n                        <p class = \"text-black mt-3 mb-3 ml-2 mr-2 text-xs\">These are the insights we found - the more you use Crysta, the more accurate they get!</p> \r\n                    </div>\r\n                </div>\r\n                <div className = \"energy-menu\" class = \"flex bg-gray-50 shadow-md rounded-3xl h-full w-6/12 m-auto\">\r\n                    <div className = \"energy-level-heading\" class = \"flex bg-gradient-to-r from-blue-400 via-blue-400 to-green-300 h-8 w-64 rounded-3xl mt-2.5 ml-7 justify-center fixed\">\r\n                        <p class = \"text-white mt-1 font-semibold text-base\">YOUR ENERGY LEVELS</p> \r\n                    </div>\r\n                    <div className = \"energy-graph-container\" class = \"flex-1 flex-col ml-7 mt-12 mr-8 mb-0 w-5/6 h-5/6\">\r\n                        {graphdiv}\r\n                    </div>\r\n                </div>\r\n                <div className = \"pomodoro-tasks-container\" class = \"flex flex-col h-full w-3/12 m-auto \">\r\n                    <Pomodoro />\r\n                    <TaskWidget />\r\n                </div>\r\n            </div>\r\n\r\n            <div className = \"version\" class = \"text-right text-sm text-black font-semibold mr-5 mb-5\">MVP - v.0.2 | ©Crysta 2021</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withAuthenticationRequired(Dashboard, {\r\n    onRedirecting: () => <div> Hey there! We're just redirecting you 😁</div>,\r\n})","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst LogoutButton = () => {\r\n  const { logout } = useAuth0();\r\n  return (\r\n    <button\r\n      className=\"btn btn-danger btn-block\" class = \"font-medium text-gray-50 h-10 w-40 bg-blue-400 rounded-3xl hover:bg-green-400 transition duration-250 ease-linear\"\r\n      onClick={() =>\r\n        logout({\r\n          returnTo: window.location.origin,\r\n        })\r\n      }\r\n    >\r\n      Log Out\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;","import React from 'react';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport CrystaLogo from './components/CrystaLogo.svg';\r\nimport LogoutButton from './components/logout-button';\r\n\r\nconst Logout = () => {\r\n  const { logout } = useAuth0();\r\n  return (\r\n    <div className = \"NavContainer\" class = 'flex flex-col justify-center items-center bg-gradient-to-r from-blue-400 via-green-300 to-green-200 h-screen w-screen'>\r\n    <div class = \"flex flex-col justify-center items-center bg-gray-50  rounded-3xl h-1/3 w-1/3 rounded-3xl shadow-lg\">\r\n      <div className = \"crysta-logo\" class = \"\">\r\n        <img src = {CrystaLogo} alt = \"CrystaLogo\"/>\r\n      </div>\r\n\r\n      <p class = \"font-medium text-center w-64 mb-4 mt-7 text-xl mr-5 ml-5\">We're sad to see you go. 😢 Come back soon!</p>\r\n\r\n      <div className=\"flex justify-center\">\r\n        <LogoutButton/>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Logout;","import './index.css';\r\nimport SideMenu from './components/SideMenu';\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport Login from './Login';\r\nimport Calendar from './pages/Calendar';\r\nimport Tasks from './pages/Tasks';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Logout from './Logout';\r\nimport axios from 'axios';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nfunction App() {\r\n\r\n  const { user, isAuthenticated } = useAuth0();\r\n\r\n  if (isAuthenticated) {\r\n    const usernameObject = {\r\n        username: user.name\r\n    };\r\n    axios.post('http://127.0.0.1:5000/user', usernameObject)\r\n        .then((res) => {\r\n      console.log(res.data)\r\n      }).catch(error => {\r\n      console.log(error)\r\n      });\r\n  }\r\n\r\n  return (\r\n      <Router>\r\n          <Route path='/' exact component={Login}/>\r\n          <Route path= '/Login' component={Login}/>\r\n          <SideMenu/>\r\n          <Switch>\r\n\r\n            <Route path='/pages/Dashboard' component={Dashboard}/>\r\n            <Route path='/pages/Tasks' component={Tasks}/>\r\n            <Route path='/pages/Calendar' component={Calendar}/>\r\n            <Route path='/pages/Logout'  component={Logout}/>\r\n            \r\n          </Switch>\r\n      </Router>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Login from './Login';\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\n\r\n\r\nReactDOM.render(\r\n\r\n    <Auth0Provider\r\n      domain=\"crysta.us.auth0.com\"\r\n      clientId=\"7wM95Dzz4zhafR6dCBB6PhZdyvKQgDMH\"\r\n      //Development\r\n      // redirectUri=\"http://localhost:3000/pages/Dashboard/continue?state=THE_ORIGINAL_STATE\"\r\n      //Staging\r\n      redirectUri=\"https://crysta-staging.herokuapp.com/pages/Dashboard/continue?state=THE_ORIGINAL_STATE\"\r\n      //Production\r\n      // redirectUri=\"https://crysta-app.herokuapp.com/pages/Dashboard/continue?state=THE_ORIGINAL_STATE\"\r\n      \r\n    >\r\n      <App />\r\n    </Auth0Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}