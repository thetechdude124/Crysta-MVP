{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mindf\\\\Documents\\\\Professional\\\\WORK\\\\CRYSTA\\\\MVP\\\\CODE\\\\React-App\\\\crysta_mvp\\\\frontend\\\\src\\\\pages\\\\EnergyGraph.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { useAuth0 } from \"@auth0/auth0-react\"; // const uri = \"mongodb+srv://crysta:3.14159265e@crysta-database.qrvsc.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\n// const client = new MongoClient(uri);\n// client.connect();\n// console.log(\"Connected\");\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeclareAuth0() {\n  _s();\n\n  const {\n    user\n  } = useAuth0();\n  return user;\n}\n\n_s(DeclareAuth0, \"0/moGN6fHOQfmda34xtpR7VuMpE=\", false, function () {\n  return [useAuth0];\n});\n\n_c = DeclareAuth0;\n\nclass EnergyGraph extends Component {\n  constructor() {\n    super();\n\n    this.getDataFromDb = () => {\n      fetch('http://localhost:3001/api/getData').then(res => {\n        const token = res.data;\n        console.log(token);\n        let task_switches = [];\n        let labels = [];\n        token.forEach(entry => {\n          labels.push(entry.hour);\n          task_switches.push(entry.task_switches);\n        });\n      });\n    };\n\n    this.state = {\n      graphData: {}\n    };\n  }\n\n  componentWillMount() {\n    this.getGraphData();\n\n    if (!this.state.IntervalIsSet) {\n      let interval = setInterval(this.getDataFromDb);\n    }\n  }\n\n  getGraphData() {\n    this.setState({\n      graphData: {\n        // labels: ['8 AM', '9 AM', '10 AM', '11 AM', '12 PM', '1 PM', '2 PM', '3 PM', '4 PM', '5 PM', '6 PM', \n        // '7 PM', '8 PM', '9 PM', '10 PM', '11 PM', '12 AM'],\n        labels: labels,\n        datasets: [{\n          label: 'Task Switches',\n          // data: [\n          //     11,\n          //     16,\n          //     18,\n          //     16,\n          //     14,\n          //     9,\n          //     2,\n          //     3,\n          //     4,\n          //     12,\n          //     18,\n          //     22,\n          //     24,\n          //     26,\n          //     23,\n          //     22,  \n          //     18\n          // ],\n          data: task_switches,\n          borderWidth: 8,\n          borderColor: \"rgba(20, 177, 183, 0.4)\",\n          pointBackgroundColor: \"rgb(77, 77, 77, 1)\",\n          tension: 0.4,\n          pointRadius: 8\n        }]\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"energy-graph\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: this.state.energygraphData,\n        width: 1580,\n        height: 750,\n        options: {\n          maintainAspectRatio: true,\n          responsive: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default EnergyGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeclareAuth0\");","map":{"version":3,"sources":["C:/Users/mindf/Documents/Professional/WORK/CRYSTA/MVP/CODE/React-App/crysta_mvp/frontend/src/pages/EnergyGraph.js"],"names":["React","Component","useState","useEffect","Line","axios","useAuth0","DeclareAuth0","user","EnergyGraph","constructor","getDataFromDb","fetch","then","res","token","data","console","log","task_switches","labels","forEach","entry","push","hour","state","graphData","componentWillMount","getGraphData","IntervalIsSet","interval","setInterval","setState","datasets","label","borderWidth","borderColor","pointBackgroundColor","tension","pointRadius","render","energygraphData","maintainAspectRatio","responsive"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,SAApC,QAAoD,OAApD;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB,C,CAEA;AACA;AACA;AACA;;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAWF,QAAQ,EAAzB;AACA,SAAOE,IAAP;AACH;;GAHQD,Y;UACYD,Q;;;KADZC,Y;;AAIT,MAAME,WAAN,SAA0BR,SAA1B,CAAmC;AAE/BS,EAAAA,WAAW,GAAE;AACT;;AADS,SAcbC,aAda,GAcG,MAAM;AAClBC,MAAAA,KAAK,CAAC,mCAAD,CAAL,CAA2CC,IAA3C,CAAgDC,GAAG,IAAI;AACnD,cAAMC,KAAK,GAAGD,GAAG,CAACE,IAAlB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,YAAII,aAAa,GAAG,EAApB;AACA,YAAIC,MAAM,GAAG,EAAb;AACAL,QAAAA,KAAK,CAACM,OAAN,CAAcC,KAAK,IAAI;AACnBF,UAAAA,MAAM,CAACG,IAAP,CAAYD,KAAK,CAACE,IAAlB;AACAL,UAAAA,aAAa,CAACI,IAAd,CAAmBD,KAAK,CAACH,aAAzB;AACH,SAHD;AAIH,OATD;AAUH,KAzBY;;AAET,SAAKM,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAC;AADD,KAAb;AAGH;;AAEDC,EAAAA,kBAAkB,GAAE;AAChB,SAAKC,YAAL;;AACA,QAAI,CAAC,KAAKH,KAAL,CAAWI,aAAhB,EAA+B;AAC3B,UAAIC,QAAQ,GAAGC,WAAW,CAAC,KAAKpB,aAAN,CAA1B;AACH;AACJ;;AAgBDiB,EAAAA,YAAY,GAAG;AAEP,SAAKI,QAAL,CAAc;AACVN,MAAAA,SAAS,EAAE;AAEP;AACA;AACAN,QAAAA,MAAM,EAAEA,MAJD;AAKPa,QAAAA,QAAQ,EAAE,CACN;AACIC,UAAAA,KAAK,EAAE,eADX;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAlB,UAAAA,IAAI,EAAEG,aArBV;AAsBIgB,UAAAA,WAAW,EAAE,CAtBjB;AAuBIC,UAAAA,WAAW,EAAE,yBAvBjB;AAwBIC,UAAAA,oBAAoB,EAAE,oBAxB1B;AAyBIC,UAAAA,OAAO,EAAE,GAzBb;AA0BIC,UAAAA,WAAW,EAAE;AA1BjB,SADM;AALH;AADD,KAAd;AAsCP;;AAGDC,EAAAA,MAAM,GAAE;AAEJ,wBACI;AAAK,MAAA,SAAS,EAAG,cAAjB;AAAA,6BACI,QAAC,IAAD;AACI,QAAA,IAAI,EAAI,KAAKf,KAAL,CAAWgB,eADvB;AAEI,QAAA,KAAK,EAAI,IAFb;AAGI,QAAA,MAAM,EAAI,GAHd;AAII,QAAA,OAAO,EAAI;AACPC,UAAAA,mBAAmB,EAAE,IADd;AAEPC,UAAAA,UAAU,EAAE;AAFL;AAJf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AAxF8B;;AA2FnC,eAAelC,WAAf","sourcesContent":["import React, {Component, useState, useEffect} from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\n// const uri = \"mongodb+srv://crysta:3.14159265e@crysta-database.qrvsc.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\";\r\n// const client = new MongoClient(uri);\r\n// client.connect();\r\n// console.log(\"Connected\");\r\n\r\nfunction DeclareAuth0() {\r\n    const { user } = useAuth0();\r\n    return user\r\n}\r\nclass EnergyGraph extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            graphData:{}\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.getGraphData();\r\n        if (!this.state.IntervalIsSet) {\r\n            let interval = setInterval(this.getDataFromDb)\r\n        }\r\n    }\r\n\r\n    getDataFromDb = () => {\r\n        fetch('http://localhost:3001/api/getData').then(res => {\r\n            const token = res.data;\r\n            console.log(token);\r\n            let task_switches = [];\r\n            let labels = [];\r\n            token.forEach(entry => {\r\n                labels.push(entry.hour);\r\n                task_switches.push(entry.task_switches);\r\n            });\r\n        });    \r\n    }\r\n\r\n\r\n    getGraphData() {\r\n\r\n            this.setState({\r\n                graphData: {\r\n\r\n                    // labels: ['8 AM', '9 AM', '10 AM', '11 AM', '12 PM', '1 PM', '2 PM', '3 PM', '4 PM', '5 PM', '6 PM', \r\n                    // '7 PM', '8 PM', '9 PM', '10 PM', '11 PM', '12 AM'],\r\n                    labels: labels,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Task Switches',\r\n                            // data: [\r\n                            //     11,\r\n                            //     16,\r\n                            //     18,\r\n                            //     16,\r\n                            //     14,\r\n                            //     9,\r\n                            //     2,\r\n                            //     3,\r\n                            //     4,\r\n                            //     12,\r\n                            //     18,\r\n                            //     22,\r\n                            //     24,\r\n                            //     26,\r\n                            //     23,\r\n                            //     22,  \r\n                            //     18\r\n                            // ],\r\n                            data: task_switches,\r\n                            borderWidth: 8,\r\n                            borderColor: \"rgba(20, 177, 183, 0.4)\",\r\n                            pointBackgroundColor: \"rgb(77, 77, 77, 1)\",\r\n                            tension: 0.4,\r\n                            pointRadius: 8\r\n                        }\r\n                    ]\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div className = \"energy-graph\">\r\n                <Line\r\n                    data = {this.state.energygraphData}\r\n                    width = {1580}\r\n                    height = {750}\r\n                    options = {{\r\n                        maintainAspectRatio: true,\r\n                        responsive: true,\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EnergyGraph;"]},"metadata":{},"sourceType":"module"}